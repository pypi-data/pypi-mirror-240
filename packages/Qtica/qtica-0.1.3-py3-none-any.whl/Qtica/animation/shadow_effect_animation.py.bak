#!/usr/bin/env python
# -*- coding: utf-8 -*-

from PySide6.QtCore import QPropertyAnimation, Property
from PySide6.QtWidgets import QGraphicsDropShadowEffect
from ..core.base import ObjectDeclarative


class AnimationShadowEffect(ObjectDeclarative):
    def __init__(self,
                 effect: QGraphicsDropShadowEffect,
                 *args,
                 **kwargs):

        self._radius = 0
        self._max_radius = effect.blurRadius()
        effect.setBlurRadius(0)

        self.animation = QPropertyAnimation(self)
        self.animation.setTargetObject(self)
        self.animation.setDuration(2000)
        self.animation.setLoopCount(-1)
        self.animation.setPropertyName(b'radius')
        self.animation.setKeyValueAt(0, 1)
        self.animation.setKeyValueAt(0.5, self._max_radius)
        self.animation.setKeyValueAt(1, 1)

    def start(self):
        self.animation.start()

    def stop(self, radius: int = 0):
        self.animation.stop()
        self.radius = radius

    @Property(int)
    def radius(self):
        return self._radius

    @radius.setter
    def radius(self, radius: int):
        self._radius = radius
        self.setBlurRadius(radius)