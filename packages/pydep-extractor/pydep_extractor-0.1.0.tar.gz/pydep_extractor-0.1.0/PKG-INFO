Metadata-Version: 2.1
Name: pydep_extractor
Version: 0.1.0
Summary: Extractor for python dependencies form pyproject.toml file and create requirements.txt file to be used in docker image builds
Author: partun
Project-URL: Bug Tracker, https://github.com/partun/pydep-extractor/issues
Project-URL: Homepage, https://github.com/partun/pydep-extractor
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: toml>=0.10.2
Provides-Extra: dev
Requires-Dist: pyproject-flake8==5.0.4; extra == "dev"
Requires-Dist: black[d]==22.10.0; extra == "dev"
Requires-Dist: mypy==0.982; extra == "dev"
Requires-Dist: pre-commit==2.20.0; extra == "dev"
Requires-Dist: pytest==7.4.3; extra == "dev"
Provides-Extra: publish
Requires-Dist: build; extra == "publish"
Requires-Dist: twine; extra == "publish"

# pydep_extractor


### How to Use pydep_extractor

This script extracts the dependencies from the `pyproject.toml` file and writes them to a `requirements.txt` file.

The `requirements.txt` file is used by the Dockerfile to install the dependencies before installing the application. This is done to speed up the build process and improve caching.

## Installation

```bash
pip install pydep_extractor
```

## Usage

- To process a specific `pyproject.toml` file and create a `requirements.txt` file:
    ```
    python -m pydep_extractor path/to/pyproject.toml
    ```

- To install the dependency without creating a `requirements.txt` file:
    ```
    python -m pydep_extractor path/to/pyproject.toml --install
    ```

- To set a non-default pip command:
    ```
    python -m pydep_extractor path/to/pyproject.toml --pip-command pip3
    ```

- To ignore specific requirements:
    ```
    python -m pydep_extractor path/to/pyproject.toml --ignore string1 string2
    ```


- To specify a different output file for the dependencies:
    ```
    python -m pydep_extractor path/to/pyproject.toml --output path/to/requirements.txt
    ```

- To specify a different output file for the pyproject if using the ignore dependency options:
    ```
    python -m pydep_extractor path/to/pyproject.toml --pyproject-output path/to/pyproject_filtered.toml
    ```
