# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/load_balancing_policies/least_request/v3/least_request.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import Optional

import betterproto

from .....config.core import v3 as ____config_core_v3__
from ...common import v3 as __common_v3__


@dataclass(eq=False, repr=False)
class LeastRequest(betterproto.Message):
    """
    This configuration allows the built-in LEAST_REQUEST LB policy to be
    configured via the LB policy extension point. See the :ref:`load balancing
    architecture overview <arch_overview_load_balancing_types>` for more
    information.
    """

    choice_count: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT32
    )
    """
    The number of random healthy hosts from which the host with the fewest
    active requests will be chosen. Defaults to 2 so that we perform two-choice
    selection if the field is not set.
    """

    active_request_bias: "____config_core_v3__.RuntimeDouble" = (
        betterproto.message_field(2)
    )
    """
    The following formula is used to calculate the dynamic weights when hosts
    have different load balancing weights: ``weight = load_balancing_weight /
    (active_requests + 1)^active_request_bias`` The larger the active request
    bias is, the more aggressively active requests will lower the effective
    weight when all host weights are not equal. ``active_request_bias`` must be
    greater than or equal to 0.0. When ``active_request_bias == 0.0`` the Least
    Request Load Balancer doesn't consider the number of active requests at the
    time it picks a host and behaves like the Round Robin Load Balancer. When
    ``active_request_bias > 0.0`` the Least Request Load Balancer scales the
    load balancing weight by the number of active requests at the time it does
    a pick. The value is cached for performance reasons and refreshed whenever
    one of the Load Balancer's host sets changes, e.g., whenever there is a
    host membership update or a host load balancing weight change. .. note::
    This setting only takes effect if all host weights are not equal.
    """

    slow_start_config: "__common_v3__.SlowStartConfig" = betterproto.message_field(3)
    """
    Configuration for slow start mode. If this configuration is not set, slow
    start will not be not enabled.
    """

    locality_lb_config: "__common_v3__.LocalityLbConfig" = betterproto.message_field(4)
    """
    Configuration for local zone aware load balancing or locality weighted load
    balancing.
    """
