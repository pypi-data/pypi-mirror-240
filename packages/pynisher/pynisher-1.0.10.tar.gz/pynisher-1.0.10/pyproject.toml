# For TOML reference
# https://learnxinyminutes.com/docs/toml/
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["test"]
minversion = "3.7"
addopts = "-ra"

[tool.coverage.run]
branch = true
context = "pynisher"
concurrency = ["multiprocessing"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    '\.\.\.',
    "raise NotImplementedError",
    "if TYPE_CHECKING"
]

[tool.black]
target-version = ['py37']

[tool.isort]
py_version = "37"
profile = "black" # Play nicely with black
src_paths = ["pynisher", "test"]
known_types = ["typing", "abc"] # We put these in their own section TYPES
known_testlibs = ["unittest", "pytest", "pytest_cases"] # Put test libs in their own section
known_first_party = ["pynisher"] # Say that autosklearn is FIRSTPARTY
known_test = ["test"] # Say that test.* is TEST
sections = [
    "FUTURE",
    "TYPES",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "TESTLIBS",
    "TEST",
    "LOCALFOLDER"
] # section ordering
multi_line_output = 3 # https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html

[tool.pydocstyle]
convention = "numpy"
add-ignore = [ # http://www.pydocstyle.org/en/stable/error_codes.html
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method

    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary and description
    "D210", # No whitespaces allowed surrounding docstring text
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line

    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D404", # First word of the docstring should not be "This"
    "D413", # Missing blank line after last section
    "D415"  # First line should end with a period, question mark, or exclamation point
]
add-select = [
    "D417", # Missing argument descriptions in the docstring (removed with numpy convention)
]

[tool.mypy]
python_version = "3.7"

show_error_codes = true

warn_unused_configs = true  # warn about unused [tool.mypy] lines

follow_imports = "normal" # Type check top level api code we use from imports
ignore_missing_imports = false # prefer explicit ignores

disallow_untyped_defs = true # All functions must have types
disallow_untyped_decorators = true # ... even decorators
disallow_incomplete_defs = true # ...all types

# Packages without exported types
[[tool.mypy.overrides]]
module = [
    "psutil.*",
    "setuptools.*",
    "pytest.*",
    "winerror.*",
    "win32api.*",
    "win32job.*",
    "sklearn.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["test.*"]
disallow_untyped_decorators = false # Test decorators are not properly typed
