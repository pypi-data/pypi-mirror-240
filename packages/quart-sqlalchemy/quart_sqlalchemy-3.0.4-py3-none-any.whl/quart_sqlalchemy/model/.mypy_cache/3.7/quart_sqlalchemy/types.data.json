{".class": "MypyFile", "_fullname": "quart_sqlalchemy.types", "future_import_flags": ["annotations"], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "BoundParamStyle": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.BoundParamStyle", "line": 42, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "qmark"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "numeric"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "named"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "format"}]}}}, "ColumnExpr": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.ColumnExpr", "line": 30, "no_args": true, "normalized": false, "target": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.SQLColumnExpression"}}}, "DMLStrategy": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.DMLStrategy", "line": 46, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "bulk"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "raw"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "orm"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "auto"}]}}}, "DMLTable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.DMLTable", "line": 32, "no_args": false, "normalized": false, "target": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._DMLTableArgument"}}}, "Empty": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.types.Empty", "name": "Empty", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.types.Empty", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.types", "mro": ["quart_sqlalchemy.types.Empty", "builtins.object"], "names": {".class": "SymbolTable"}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "EmptyType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.EmptyType", "line": 24, "no_args": false, "normalized": false, "target": {".class": "TypeType", "item": "quart_sqlalchemy.types.Empty"}}}, "EntityIdT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "quart_sqlalchemy.types.EntityIdT", "name": "EntityIdT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}}, "EntityT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "quart_sqlalchemy.types.EntityT", "name": "EntityT", "upper_bound": "sqlalchemy.orm.decl_api.DeclarativeBase", "values": [], "variance": 0}}, "ORMOption": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.ORMOption", "line": 33, "no_args": true, "normalized": false, "target": "sqlalchemy.orm.interfaces.ORMOption"}}, "Operator": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [["__call__", 2]], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.types.Operator", "name": "Operator", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract", "is_protocol"], "fullname": "quart_sqlalchemy.types.Operator", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "quart_sqlalchemy.types", "mro": ["quart_sqlalchemy.types.Operator", "builtins.object"], "names": {".class": "SymbolTable", "__call__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 2, "arg_kinds": [0, 0, 0], "arg_names": ["self", null, null], "flags": [], "fullname": "quart_sqlalchemy.types.Operator.__call__", "name": "__call__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", null, null], "arg_types": ["quart_sqlalchemy.types.Operator", "builtins.object", "builtins.object"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__call__ of Operator", "ret_type": "builtins.object", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SABind": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.SABind", "line": 48, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", "sqlalchemy.ext.asyncio.engine.AsyncEngine", "sqlalchemy.ext.asyncio.engine.AsyncConnection"]}}}, "SQLColumnExpression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.SQLColumnExpression", "kind": "Gdef"}, "Selectable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.Selectable", "line": 31, "no_args": false, "normalized": false, "target": {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}}}, "SessionBind": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.SessionBind", "line": 44, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection"]}}}, "SessionBindKey": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.SessionBindKey", "line": 43, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.orm.mapper.Mapper"}, "sqlalchemy.sql.selectable.TableClause", "builtins.str"]}}}, "SessionT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "quart_sqlalchemy.types.SessionT", "name": "SessionT", "upper_bound": "sqlalchemy.orm.session.Session", "values": [], "variance": 0}}, "SynchronizeSession": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.SynchronizeSession", "line": 45, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "LiteralType", "fallback": "builtins.str", "value": "auto"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "evaluate"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "fetch"}]}}}, "TransactionIsolationLevel": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "quart_sqlalchemy.types.TransactionIsolationLevel", "line": 35, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "AUTOCOMMIT"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "READ COMMITTED"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "READ UNCOMMITTED"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "REPEATABLE READ"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "SERIALIZABLE"}]}}}, "_ColumnExpressionArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument", "kind": "Gdef"}, "_ColumnsClauseArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument", "kind": "Gdef"}, "_DMLTableArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._DMLTableArgument", "kind": "Gdef"}, "_ORMOption": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.interfaces.ORMOption", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.types.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.types.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.types.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.types.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.types.__package__", "name": "__package__", "type": "builtins.str"}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "sa": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "sqlalchemy": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "t": {".class": "SymbolTableNode", "cross_ref": "typing", "kind": "Gdef"}, "tx": {".class": "SymbolTableNode", "cross_ref": "typing_extensions", "kind": "Gdef"}}, "path": "/Users/joeblack/projects/github/joeblackwaslike/quart-sqlalchemy/src/quart_sqlalchemy/types.py"}