{".class": "MypyFile", "_fullname": "quart_sqlalchemy.testing.transaction", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AsyncBind": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.bind.AsyncBind", "kind": "Gdef"}, "AsyncTestTransaction": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["quart_sqlalchemy.testing.transaction.TestTransaction"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction", "name": "AsyncTestTransaction", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.testing.transaction", "mro": ["quart_sqlalchemy.testing.transaction.AsyncTestTransaction", "quart_sqlalchemy.testing.transaction.TestTransaction", "builtins.object"], "names": {".class": "SymbolTable", "__aenter__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_coroutine"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.__aenter__", "name": "__aenter__", "type": null}}, "__aexit__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "exc_type", "exc_val", "exc_tb"], "flags": ["is_coroutine"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.__aexit__", "name": "__aexit__", "type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "savepoint"], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "savepoint"], "arg_types": ["quart_sqlalchemy.testing.transaction.AsyncTestTransaction", "quart_sqlalchemy.bind.AsyncBind", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AsyncTestTransaction", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.bind", "name": "bind", "type": "quart_sqlalchemy.bind.AsyncBind"}}, "close": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "exc"], "flags": ["is_coroutine"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.close", "name": "close", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "exc"], "arg_types": ["quart_sqlalchemy.testing.transaction.AsyncTestTransaction", {".class": "UnionType", "items": ["builtins.Exception", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "close of AsyncTestTransaction", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "NoneType"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "connection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.connection", "name": "connection", "type": "sqlalchemy.ext.asyncio.engine.AsyncConnection"}}, "nested": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.nested", "name": "nested", "type": {".class": "UnionType", "items": ["sqlalchemy.ext.asyncio.engine.AsyncTransaction", {".class": "NoneType"}]}}}, "open": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_coroutine"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.open", "name": "open", "type": null}}, "trans": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.AsyncTestTransaction.trans", "name": "trans", "type": "sqlalchemy.ext.asyncio.engine.AsyncTransaction"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Bind": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.bind.Bind", "kind": "Gdef"}, "ExceptionGroup": {".class": "SymbolTableNode", "cross_ref": "exceptiongroup._exceptions.ExceptionGroup", "kind": "Gdef"}, "TestTransaction": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction", "name": "TestTransaction", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.testing.transaction", "mro": ["quart_sqlalchemy.testing.transaction.TestTransaction", "builtins.object"], "names": {".class": "SymbolTable", "Session": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 4], "arg_names": ["self", "options"], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.Session", "name": "Session", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "options"], "arg_types": ["quart_sqlalchemy.testing.transaction.TestTransaction", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "Session of TestTransaction", "ret_type": "sqlalchemy.orm.session.Session", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__enter__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": [null], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.__enter__", "name": "__enter__", "type": null}}, "__exit__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0], "arg_names": [null, null, null, null], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.__exit__", "name": "__exit__", "type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "savepoint"], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "savepoint"], "arg_types": ["quart_sqlalchemy.testing.transaction.TestTransaction", "quart_sqlalchemy.bind.Bind", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TestTransaction", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__repr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": [null], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.__repr__", "name": "__repr__", "type": null}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.bind", "name": "bind", "type": "quart_sqlalchemy.bind.Bind"}}, "close": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "exc"], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.close", "name": "close", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "exc"], "arg_types": ["quart_sqlalchemy.testing.transaction.TestTransaction", {".class": "UnionType", "items": ["builtins.Exception", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "close of TestTransaction", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "connection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.connection", "name": "connection", "type": "sqlalchemy.engine.base.Connection"}}, "nested": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.nested", "name": "nested", "type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.NestedTransaction", {".class": "NoneType"}]}}}, "open": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.open", "name": "open", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["quart_sqlalchemy.testing.transaction.TestTransaction"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "open of TestTransaction", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "savepoint": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.savepoint", "name": "savepoint", "type": "builtins.bool"}}, "trans": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.TestTransaction.trans", "name": "trans", "type": "sqlalchemy.engine.base.Transaction"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.testing.transaction.__package__", "name": "__package__", "type": "builtins.str"}}, "sa": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "sqlalchemy": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "t": {".class": "SymbolTableNode", "cross_ref": "typing", "kind": "Gdef"}}, "path": "/Users/joeblack/projects/github/joeblackwaslike/quart-sqlalchemy/src/quart_sqlalchemy/testing/transaction.py"}