{".class": "MypyFile", "_fullname": "quart_sqlalchemy.model.model", "future_import_flags": ["annotations"], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Base": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["quart_sqlalchemy.model.model.BaseMixins", "sqlalchemy.orm.decl_api.DeclarativeBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.model.model.Base", "name": "Base", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.model.model.Base", "has_param_spec_type": false, "metaclass_type": "sqlalchemy.orm.decl_api.DeclarativeAttributeIntercept", "metadata": {}, "module_name": "quart_sqlalchemy.model.model", "mro": ["quart_sqlalchemy.model.model.Base", "quart_sqlalchemy.model.model.BaseMixins", "quart_sqlalchemy.model.mixins.DynamicArgsMixin", "quart_sqlalchemy.model.mixins.EagerDefaultsMixin", "quart_sqlalchemy.model.mixins.ReprMixin", "quart_sqlalchemy.model.mixins.RecursiveDictMixin", "quart_sqlalchemy.model.mixins.TotalOrderMixin", "quart_sqlalchemy.model.mixins.ComparableMixin", "quart_sqlalchemy.model.mixins.TableNameMixin", "sqlalchemy.orm.decl_api.DeclarativeBase", "sqlalchemy.inspection.Inspectable", "builtins.object"], "names": {".class": "SymbolTable", "__abstract__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.Base.__abstract__", "name": "__abstract__", "type": "builtins.bool"}}, "metadata": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.Base.metadata", "name": "metadata", "type": "sqlalchemy.sql.schema.MetaData"}}, "type_annotation_map": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.Base.type_annotation_map", "name": "type_annotation_map", "type": {".class": "Instance", "args": ["builtins.object", {".class": "AnyType", "missing_import_name": "quart_sqlalchemy.model.model.JSONType", "source_any": {".class": "AnyType", "missing_import_name": "quart_sqlalchemy.model.model.JSONType", "source_any": null, "type_of_any": 3}, "type_of_any": 7}], "type_ref": "builtins.dict"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseMixins": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["quart_sqlalchemy.model.mixins.DynamicArgsMixin", "quart_sqlalchemy.model.mixins.EagerDefaultsMixin", "quart_sqlalchemy.model.mixins.ReprMixin", "quart_sqlalchemy.model.mixins.RecursiveDictMixin", "quart_sqlalchemy.model.mixins.TotalOrderMixin", "quart_sqlalchemy.model.mixins.ComparableMixin", "quart_sqlalchemy.model.mixins.TableNameMixin"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.model.model.BaseMixins", "name": "BaseMixins", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.model.model.BaseMixins", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.model.model", "mro": ["quart_sqlalchemy.model.model.BaseMixins", "quart_sqlalchemy.model.mixins.DynamicArgsMixin", "quart_sqlalchemy.model.mixins.EagerDefaultsMixin", "quart_sqlalchemy.model.mixins.ReprMixin", "quart_sqlalchemy.model.mixins.RecursiveDictMixin", "quart_sqlalchemy.model.mixins.TotalOrderMixin", "quart_sqlalchemy.model.mixins.ComparableMixin", "quart_sqlalchemy.model.mixins.TableNameMixin", "builtins.object"], "names": {".class": "SymbolTable", "__abstract__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.BaseMixins.__abstract__", "name": "__abstract__", "type": "builtins.bool"}}, "__table__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.model.model.BaseMixins.__table__", "name": "__table__", "type": "sqlalchemy.sql.schema.Table"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ComparableMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.ComparableMixin", "kind": "Gdef"}, "DynamicArgsMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.DynamicArgsMixin", "kind": "Gdef"}, "EagerDefaultsMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.EagerDefaultsMixin", "kind": "Gdef"}, "JSONType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_suppressed_import", "is_ready", "is_inferred"], "fullname": "quart_sqlalchemy.model.model.JSONType", "name": "JSONType", "type": {".class": "AnyType", "missing_import_name": "quart_sqlalchemy.model.model.JSONType", "source_any": null, "type_of_any": 3}}}, "RecursiveDictMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.RecursiveDictMixin", "kind": "Gdef"}, "ReprMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.ReprMixin", "kind": "Gdef"}, "TableNameMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.TableNameMixin", "kind": "Gdef"}, "TotalOrderMixin": {".class": "SymbolTableNode", "cross_ref": "quart_sqlalchemy.model.mixins.TotalOrderMixin", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.model.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.model.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.model.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.model.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.model.__package__", "name": "__package__", "type": "builtins.str"}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "default_metadata_naming_convention": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.default_metadata_naming_convention", "name": "default_metadata_naming_convention", "type": {".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "builtins.dict"}}}, "default_type_annotation_map": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.model.default_type_annotation_map", "name": "default_type_annotation_map", "type": {".class": "Instance", "args": ["builtins.object", {".class": "AnyType", "missing_import_name": "quart_sqlalchemy.model.model.JSONType", "source_any": {".class": "AnyType", "missing_import_name": "quart_sqlalchemy.model.model.JSONType", "source_any": null, "type_of_any": 3}, "type_of_any": 7}], "type_ref": "builtins.dict"}}}, "enum": {".class": "SymbolTableNode", "cross_ref": "enum", "kind": "Gdef"}, "sa": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "sqlalchemy": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "tx": {".class": "SymbolTableNode", "cross_ref": "typing_extensions", "kind": "Gdef"}, "uuid": {".class": "SymbolTableNode", "cross_ref": "uuid", "kind": "Gdef"}}, "path": "/Users/joeblack/projects/github/joeblackwaslike/quart-sqlalchemy/src/quart_sqlalchemy/model/model.py"}