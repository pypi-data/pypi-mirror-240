{".class": "MypyFile", "_fullname": "quart_sqlalchemy.model.custom_types", "future_import_flags": ["annotations"], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "BaseModel": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.BaseModel", "kind": "Gdef"}, "PydanticType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.model.custom_types.PydanticType", "name": "PydanticType", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.model.custom_types", "mro": ["quart_sqlalchemy.model.custom_types.PydanticType", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.ExternalType", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "pydantic_type"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "pydantic_type"], "arg_types": ["quart_sqlalchemy.model.custom_types.PydanticType", "pydantic.main.BaseModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of PydanticType", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "cache_ok": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.cache_ok", "name": "cache_ok", "type": "builtins.bool"}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.impl", "name": "impl", "type": {".class": "CallableType", "arg_kinds": [1], "arg_names": ["none_as_null"], "arg_types": ["builtins.bool"], "bound_args": ["sqlalchemy.sql.sqltypes.JSON"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.JSON", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "load_dialect_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.load_dialect_impl", "name": "load_dialect_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["quart_sqlalchemy.model.custom_types.PydanticType", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load_dialect_impl of PydanticType", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "process_bind_param": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.process_bind_param", "name": "process_bind_param", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "arg_types": ["quart_sqlalchemy.model.custom_types.PydanticType", {".class": "UnionType", "items": ["pydantic.main.BaseModel", {".class": "NoneType"}]}, "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "process_bind_param of PydanticType", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "process_result_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.process_result_value", "name": "process_result_value", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "arg_types": ["quart_sqlalchemy.model.custom_types.PydanticType", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "process_result_value of PydanticType", "ret_type": {".class": "UnionType", "items": ["pydantic.main.BaseModel", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "pydantic_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.PydanticType.pydantic_type", "name": "pydantic_type", "type": "pydantic.main.BaseModel"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TZDateTime": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime", "name": "TZDateTime", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "quart_sqlalchemy.model.custom_types", "mro": ["quart_sqlalchemy.model.custom_types.TZDateTime", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.ExternalType", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "cache_ok": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime.cache_ok", "name": "cache_ok", "type": "builtins.bool"}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime.impl", "name": "impl", "type": {".class": "CallableType", "arg_kinds": [1], "arg_names": ["timezone"], "arg_types": ["builtins.bool"], "bound_args": ["sqlalchemy.sql.sqltypes.DateTime"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.DateTime", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "process_bind_param": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime.process_bind_param", "name": "process_bind_param", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "arg_types": ["quart_sqlalchemy.model.custom_types.TZDateTime", {".class": "UnionType", "items": ["datetime.datetime", {".class": "NoneType"}]}, "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "process_bind_param of TZDateTime", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "process_result_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "flags": [], "fullname": "quart_sqlalchemy.model.custom_types.TZDateTime.process_result_value", "name": "process_result_value", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "value", "dialect"], "arg_types": ["quart_sqlalchemy.model.custom_types.TZDateTime", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "process_result_value of TZDateTime", "ret_type": {".class": "UnionType", "items": ["datetime.datetime", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "quart_sqlalchemy.model.custom_types.__package__", "name": "__package__", "type": "builtins.str"}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "datetime": {".class": "SymbolTableNode", "cross_ref": "datetime.datetime", "kind": "Gdef"}, "parse_obj_as": {".class": "SymbolTableNode", "cross_ref": "pydantic.tools.parse_obj_as", "kind": "Gdef"}, "sa": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "sqlalchemy": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy", "kind": "Gdef"}, "t": {".class": "SymbolTableNode", "cross_ref": "typing", "kind": "Gdef"}, "timezone": {".class": "SymbolTableNode", "cross_ref": "datetime.timezone", "kind": "Gdef"}}, "path": "/Users/joeblack/projects/github/joeblackwaslike/quart-sqlalchemy/src/quart_sqlalchemy/model/custom_types.py"}