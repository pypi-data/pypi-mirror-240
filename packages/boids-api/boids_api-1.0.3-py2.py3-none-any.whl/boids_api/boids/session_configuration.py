# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from boids_api.boids.base_model import Model
from boids_api.boids.behavior_configuration import BehaviorConfiguration
from boids_api.boids.session_state import SessionState
from boids_api.boids.world_configuration import WorldConfiguration
from boids_api import util


class SessionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, num_boids: int=None, state: SessionState=None, world: WorldConfiguration=None, behavior: BehaviorConfiguration=None):
        """SessionConfiguration - a model defined in OpenAPI

        :param title: The title of this SessionConfiguration.
        :param num_boids: The num_boids of this SessionConfiguration.
        :param state: The state of this SessionConfiguration.
        :param world: The world of this SessionConfiguration.
        :param behavior: The behavior of this SessionConfiguration.
        """
        self.openapi_types = {
            'title': str,
            'num_boids': int,
            'state': SessionState,
            'world': WorldConfiguration,
            'behavior': BehaviorConfiguration
        }

        self.attribute_map = {
            'title': 'title',
            'num_boids': 'num_boids',
            'state': 'state',
            'world': 'world',
            'behavior': 'behavior'
        }

        self._title = title
        self._num_boids = num_boids
        self._state = state
        self._world = world
        self._behavior = behavior

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SessionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SessionConfiguration of this SessionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this SessionConfiguration.

        Session title

        :return: The title of this SessionConfiguration.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SessionConfiguration.

        Session title

        :param title: The title of this SessionConfiguration.
        :type title: str
        """

        self._title = title

    @property
    def num_boids(self):
        """Gets the num_boids of this SessionConfiguration.


        :return: The num_boids of this SessionConfiguration.
        :rtype: int
        """
        return self._num_boids

    @num_boids.setter
    def num_boids(self, num_boids):
        """Sets the num_boids of this SessionConfiguration.


        :param num_boids: The num_boids of this SessionConfiguration.
        :type num_boids: int
        """

        self._num_boids = num_boids

    @property
    def state(self):
        """Gets the state of this SessionConfiguration.


        :return: The state of this SessionConfiguration.
        :rtype: SessionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SessionConfiguration.


        :param state: The state of this SessionConfiguration.
        :type state: SessionState
        """

        self._state = state

    @property
    def world(self):
        """Gets the world of this SessionConfiguration.


        :return: The world of this SessionConfiguration.
        :rtype: WorldConfiguration
        """
        return self._world

    @world.setter
    def world(self, world):
        """Sets the world of this SessionConfiguration.


        :param world: The world of this SessionConfiguration.
        :type world: WorldConfiguration
        """

        self._world = world

    @property
    def behavior(self):
        """Gets the behavior of this SessionConfiguration.


        :return: The behavior of this SessionConfiguration.
        :rtype: BehaviorConfiguration
        """
        return self._behavior

    @behavior.setter
    def behavior(self, behavior):
        """Sets the behavior of this SessionConfiguration.


        :param behavior: The behavior of this SessionConfiguration.
        :type behavior: BehaviorConfiguration
        """

        self._behavior = behavior
