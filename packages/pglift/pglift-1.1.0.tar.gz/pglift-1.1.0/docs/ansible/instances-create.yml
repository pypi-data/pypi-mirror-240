---
- name: my postgresql instances
  hosts: localhost
  tasks:
    - name: production instance
      dalibo.pglift.instance:
        name: prod
        state: started
        port: 5433
        settings:
          max_connections: 100
          shared_buffers: 1GB
          unix_socket_directories: /tmp
          shared_preload_libraries: "pg_stat_statements, passwordcheck"
        surole_password: "{{ postgresql_surole_password }}"
        pgbackrest:
          stanza: stanza_prod
          password: "{{ backup_role_password }}"
        prometheus:
          password: "{{ prometheus_role_password }}"
          port: 9186
        roles:
          - name: bob
            login: true
            password: "{{ prod_bob_password }}"
            connection_limit: 10
            validity: '2025-01-01T00:00'
            in_roles:
              - pg_read_all_stats
              - pg_signal_backend
          - name: peter
            in_roles:
              - pg_signal_backend
        databases:
          - name: db
            owner: bob
            settings:
              work_mem: 3MB
            extensions:
              - name: unaccent
                schema: public
          - name: db2
            owner: bob
            settings:
              work_mem: 3MB
            extensions:
              - name: unaccent
                schema: public
          - name: db3
            owner: peter
            extensions:
              - name: unaccent
                schema: public


    - name: pre-production instance
      dalibo.pglift.instance:
        name: preprod
        port: 5434
        state: started
        settings:
          unix_socket_directories: /tmp
        surole_password: "{{ postgresql_surole_password }}"
        pgbackrest:
          stanza: stanza_preprod
          password: "{{ backup_role_password }}"
        prometheus:
          password: "{{ prometheus_role_password }}"
          port: 9188

    - name: register preprod conninfo
      dalibo.pglift.dsn_info:
        name: preprod
      register: preprod

    - name: |
        create database test on pre-production instance using
        community.postgresql module
      community.postgresql.postgresql_db:
        name: test
        login_host: "{{ preprod.PGHOST }}"
        login_port: "{{ preprod.PGPORT }}"
      environment: "{{ preprod }}"

    - name: dev instance, not running at the moment
      dalibo.pglift.instance:
        name: dev
        port: 5444
        state: stopped
        settings:
          unix_socket_directories: /tmp
        surole_password: "{{ postgresql_surole_password }}"
        pgbackrest:
          stanza: stanza_dev
          password: "{{ backup_role_password }}"
        prometheus:
          password: "{{ prometheus_role_password }}"
          port: 9189
