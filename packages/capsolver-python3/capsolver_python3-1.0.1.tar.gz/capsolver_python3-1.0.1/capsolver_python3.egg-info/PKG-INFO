Metadata-Version: 2.1
Name: capsolver-python3
Version: 1.0.1
Summary: CapSolver.com library for Python3
Home-page: https://github.com/boredcoderx/capsolver_python3
Author: Boredcoder
License: MIT
Project-URL: Source, https://github.com/boredcoderx/capsolver_python3/
Project-URL: Tracker, https://github.com/boredcoderx/capsolver_python3/issues
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires: requests
Requires-Python: >=3
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.rst

# Capsolver Python3
Capsolver python3 library

## Installation

Use pip to install the library:

```sh
pip3 install --upgrade capsolver-python3
```

Install from source with:

```sh
python setup.py install
```

## Usage


#### ImageToText

```python
from capsolver_python import ImageToTextTask

capsolver = ImageToTextTask("API_KEY")
task_id = capsolver.create_task(image_path="img.png")
result = capsolver.join_task_result(task_id)
print(result.get("text"))
```

#### Recaptcha v2

```python
from capsolver_python import RecaptchaV2Task

capsolver = RecaptchaV2Task("API_KEY")
task_id = capsolver.create_task("website_url", "website_key")
result = capsolver.join_task_result(task_id)
print(result.get("gRecaptchaResponse"))
```

#### Recaptcha v2 enterprise

```python
from capsolver_python import RecaptchaV2EnterpriseTask

capsolver = RecaptchaV2EnterpriseTask("API_KEY")
task_id = capsolver.create_task("website_url", "website_key", {"s": "payload value"}, "api_domain")
result = capsolver.join_task_result(task_id)
print(result.get("gRecaptchaResponse"))
```

#### GeeTest

```python
from capsolver_python import GeeTestTask

capsolver = GeeTestTask("API_KEY")
task_id = capsolver.create_task("website_url", "gt", "challenge")
result= capsolver.join_task_result(task_id)
print(result.get("challenge"))
print(result.get("seccode"))
print(result.get("validate"))
```


