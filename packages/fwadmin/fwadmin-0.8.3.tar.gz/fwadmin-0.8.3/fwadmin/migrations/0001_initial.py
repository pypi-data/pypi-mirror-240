# Generated by Django 4.1.6 on 2023-05-22 07:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0167_module_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('extras', '0084_staging'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('devices', models.ManyToManyField(blank=True, related_name='+', to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Device group',
                'verbose_name_plural': 'Device groups',
                'ordering': ['name'],
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='DynamicList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.TextField(blank=True, default='')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('rule', models.CharField(max_length=100)),
                ('device_groups', models.ManyToManyField(blank=True, related_name='dynamic_lists', to='fwadmin.devicegroup')),
            ],
            options={
                'verbose_name': 'Dynamic list',
                'verbose_name_plural': 'Dynamic lists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SessionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('cleared', models.BooleanField(default=False, editable=False)),
                ('end_at', models.DateTimeField()),
                ('request_reason', models.TextField()),
                ('start_at', models.DateTimeField()),
                ('status', models.CharField(default='requested', editable=False, max_length=100)),
                ('dynamic_lists', models.ManyToManyField(related_name='requests', to='fwadmin.dynamiclist')),
                ('managed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Session request',
                'verbose_name_plural': 'Session requests',
                'ordering': ['-end_at'],
            },
        ),
        migrations.CreateModel(
            name='Firewall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('model', models.CharField(default='paloalto-panos', max_length=100)),
                ('secret_key', models.CharField(max_length=200)),
                ('verify_cert', models.BooleanField(default=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Firewall',
                'verbose_name_plural': 'Firewalls',
                'ordering': ['name'],
                'unique_together': {('address',), ('name',)},
            },
        ),
        migrations.AddField(
            model_name='dynamiclist',
            name='firewalls',
            field=models.ManyToManyField(related_name='dynamic_lists', to='fwadmin.firewall'),
        ),
        migrations.AddField(
            model_name='dynamiclist',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='dynamiclist',
            unique_together={('name',), ('slug',)},
        ),
    ]
