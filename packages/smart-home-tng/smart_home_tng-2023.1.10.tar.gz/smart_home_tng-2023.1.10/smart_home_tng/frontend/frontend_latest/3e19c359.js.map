{"version":3,"file":"3e19c359.js","mappings":";;AAsEA;AACA;AAIA;AACA;AAGA;;AAGA;;;;;;;;;AAaA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/header-footer/hui-picture-header-footer.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"../../../components/ha-card\";\nimport { ActionHandlerEvent } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { handleAction } from \"../common/handle-action\";\nimport { hasAction } from \"../common/has-action\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { PictureHeaderFooterConfig } from \"./types\";\n\n@customElement(\"hui-picture-header-footer\")\nexport class HuiPictureHeaderFooter\n  extends LitElement\n  implements LovelaceHeaderFooter\n{\n  public static getStubConfig(): Record<string, unknown> {\n    return {\n      image:\n        \"https://www.home-assistant.io/images/lovelace/header-footer/balloons-header.png\",\n      tap_action: { action: \"none\" },\n      hold_action: { action: \"none\" },\n    };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public type!: \"header\" | \"footer\";\n\n  @property() protected _config?: PictureHeaderFooterConfig;\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(config: PictureHeaderFooterConfig): void {\n    if (!config || !config.image) {\n      throw new Error(\"Image required\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.size === 1 && changedProps.has(\"hass\")) {\n      return !changedProps.get(\"hass\");\n    }\n    return true;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const clickable = Boolean(\n      this._config.tap_action || this._config.hold_action\n    );\n\n    return html`\n      <img\n        @action=${this._handleAction}\n        .actionHandler=${actionHandler({\n          hasHold: hasAction(this._config!.hold_action),\n          hasDoubleClick: hasAction(this._config!.double_tap_action),\n        })}\n        tabindex=${ifDefined(clickable ? 0 : undefined)}\n        class=${classMap({\n          clickable,\n        })}\n        src=${this.hass.hassUrl(this._config.image)}\n      />\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      img.clickable {\n        cursor: pointer;\n      }\n\n      img {\n        display: block;\n        width: 100%;\n      }\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    handleAction(this, this.hass!, this._config!, ev.detail.action!);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-header-footer\": HuiPictureHeaderFooter;\n  }\n}\n"],"names":[],"sourceRoot":""}