"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[4012],{62770:function(e,n,t){t.d(n,{AC:function(){return q},B7:function(){return h},BP:function(){return j},Db:function(){return B},EW:function(){return x},Fy:function(){return l},Hr:function(){return N},IG:function(){return L},Ir:function(){return H},JL:function(){return P},JT:function(){return z},LD:function(){return U},Mb:function(){return E},N2:function(){return c},OF:function(){return O},OV:function(){return v},PE:function(){return S},Qf:function(){return b},TA:function(){return s},TW:function(){return r},Uf:function(){return o},a2:function(){return Z},aK:function(){return f},cH:function(){return A},e4:function(){return d},f$:function(){return W},hP:function(){return _},is:function(){return a},kL:function(){return D},kM:function(){return u},kV:function(){return K},lo:function(){return R},mZ:function(){return I},pr:function(){return y},rs:function(){return p},tY:function(){return g},tt:function(){return i},uq:function(){return T},vN:function(){return F},vS:function(){return k},wz:function(){return w},xK:function(){return m},xw:function(){return V},yD:function(){return M},zn:function(){return C}});let r=function(e){return e[e.Idle=0]="Idle",e[e.Including=1]="Including",e[e.Excluding=2]="Excluding",e[e.Busy=3]="Busy",e[e.SmartStart=4]="SmartStart",e}({}),i=function(e){return e[e.Default=0]="Default",e[e.SmartStart=1]="SmartStart",e[e.Insecure=2]="Insecure",e[e.Security_S0=3]="Security_S0",e[e.Security_S2=4]="Security_S2",e}({}),a=function(e){return e[e.Temporary=-2]="Temporary",e[e.None=-1]="None",e[e.S2_Unauthenticated=0]="S2_Unauthenticated",e[e.S2_Authenticated=1]="S2_Authenticated",e[e.S2_AccessControl=2]="S2_AccessControl",e[e.S0_Legacy=7]="S0_Legacy",e}({}),o=function(e){return e[e.SmartStart=0]="SmartStart",e}({});let _=function(e){return e[e.Error_Timeout=-1]="Error_Timeout",e[e.Error_Checksum=0]="Error_Checksum",e[e.Error_TransmissionFailed=1]="Error_TransmissionFailed",e[e.Error_InvalidManufacturerID=2]="Error_InvalidManufacturerID",e[e.Error_InvalidFirmwareID=3]="Error_InvalidFirmwareID",e[e.Error_InvalidFirmwareTarget=4]="Error_InvalidFirmwareTarget",e[e.Error_InvalidHeaderInformation=5]="Error_InvalidHeaderInformation",e[e.Error_InvalidHeaderFormat=6]="Error_InvalidHeaderFormat",e[e.Error_InsufficientMemory=7]="Error_InsufficientMemory",e[e.Error_InvalidHardwareVersion=8]="Error_InvalidHardwareVersion",e[e.OK_WaitingForActivation=253]="OK_WaitingForActivation",e[e.OK_NoRestart=254]="OK_NoRestart",e[e.OK_RestartPending=255]="OK_RestartPending",e}({});const c=52;let s=function(e){return e[e.NotAvailable=127]="NotAvailable",e[e.ReceiverSaturated=126]="ReceiverSaturated",e[e.NoSignalDetected=125]="NoSignalDetected",e}({}),u=function(e){return e[e.ZWave_9k6=1]="ZWave_9k6",e[e.ZWave_40k=2]="ZWave_40k",e[e.ZWave_100k=3]="ZWave_100k",e[e.LongRange_100k=4]="LongRange_100k",e}({}),d=function(e){return e[e.Unknown=0]="Unknown",e[e.Asleep=1]="Asleep",e[e.Awake=2]="Awake",e[e.Dead=3]="Dead",e[e.Alive=4]="Alive",e}({});const l=32143==t.j?["unknown","asleep","awake","dead","alive"]:null,v=(e,n)=>{if(n.device_id&&n.entry_id)throw new Error("Only one of device or entry ID should be supplied.");if(!n.device_id&&!n.entry_id)throw new Error("Either device or entry ID should be supplied.");return e.callWS({type:"zwave_js/network_status",device_id:n.device_id,entry_id:n.entry_id})},f=(e,n)=>e.callWS({type:"zwave_js/data_collection_status",entry_id:n}),p=(e,n,t)=>e.callWS({type:"zwave_js/update_data_collection_preference",entry_id:n,opted_in:t}),y=(e,n)=>e.callWS({type:"zwave_js/get_provisioning_entries",entry_id:n}),w=(e,n,t,r=i.Default,a,o,_)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/add_node",entry_id:n,inclusion_strategy:r,qr_code_string:o,qr_provisioning_information:a,planned_provisioning_entry:_}),S=(e,n)=>e.callWS({type:"zwave_js/stop_inclusion",entry_id:n}),g=(e,n)=>e.callWS({type:"zwave_js/stop_exclusion",entry_id:n}),m=(e,n,t,r)=>e.callWS({type:"zwave_js/grant_security_classes",entry_id:n,security_classes:t,client_side_auth:r}),b=(e,n,t)=>e.callWS({type:"zwave_js/validate_dsk_and_enter_pin",entry_id:n,pin:t}),z=(e,n,t)=>e.callWS({type:"zwave_js/supports_feature",entry_id:n,feature:t}),j=(e,n,t)=>e.callWS({type:"zwave_js/parse_qr_code_string",entry_id:n,qr_code_string:t}),W=(e,n,t,r,i)=>e.callWS({type:"zwave_js/provision_smart_start_node",entry_id:n,qr_code_string:r,qr_provisioning_information:t,planned_provisioning_entry:i}),k=(e,n,t,r)=>e.callWS({type:"zwave_js/unprovision_smart_start_node",entry_id:n,dsk:t,node_id:r}),I=(e,n)=>e.callWS({type:"zwave_js/node_status",device_id:n}),h=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/subscribe_node_status",device_id:n}),E=(e,n)=>e.callWS({type:"zwave_js/node_metadata",device_id:n}),A=(e,n)=>e.callWS({type:"zwave_js/node_comments",device_id:n}),D=(e,n)=>e.callWS({type:"zwave_js/get_config_parameters",device_id:n}),M=(e,n,t,r,i)=>{const a={type:"zwave_js/set_config_parameter",device_id:n,property:t,value:r,property_key:i};return e.callWS(a)},F=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/refresh_node_info",device_id:n}),T=(e,n)=>e.callWS({type:"zwave_js/heal_node",device_id:n}),N=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/remove_failed_node",device_id:n}),O=(e,n)=>e.callWS({type:"zwave_js/begin_healing_network",entry_id:n}),H=(e,n)=>e.callWS({type:"zwave_js/stop_healing_network",entry_id:n}),x=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/subscribe_heal_network_progress",entry_id:n}),K=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/subscribe_controller_statistics",entry_id:n}),R=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/subscribe_node_statistics",device_id:n}),Z=(e,n)=>e.callWS({type:"zwave_js/is_node_firmware_update_in_progress",device_id:n}),q=(e,n)=>e.callWS({type:"zwave_js/is_any_ota_firmware_update_in_progress",entry_id:n}),C=async(e,n,t,r)=>{const i=new FormData;i.append("file",t),void 0!==r&&i.append("target",r.toString());const a=await e.fetchWithAuth(`/api/zwave_js/firmware/upload/${n}`,{method:"POST",body:i});if(200!==a.status)throw new Error(a.statusText)},L=(e,n,t)=>e.connection.subscribeMessage((e=>t(e)),{type:"zwave_js/subscribe_firmware_update_status",device_id:n}),P=(e,n)=>e.callWS({type:"zwave_js/abort_firmware_update",device_id:n}),U=(e,n,t)=>e.connection.subscribeMessage(t,{type:"zwave_js/subscribe_log_updates",entry_id:n}),B=(e,n)=>e.callWS({type:"zwave_js/get_log_config",entry_id:n}),V=(e,n,t)=>e.callWS({type:"zwave_js/update_log_config",entry_id:n,config:{level:t}})},4012:function(e,n,t){t.r(n),t.d(n,{getZwaveDeviceAlerts:function(){return i}});var r=t(62770);const i=async(e,n)=>{var t;const i=await(0,r.cH)(e,n.id);return null!=i&&null!==(t=i.comments)&&void 0!==t&&t.length?i.comments.map((e=>({level:e.level,text:e.text}))):[]}}}]);