{"version":3,"file":"bd5a3118.js","mappings":";;;;AA4BA;AACA;;AAEA;;;AAIA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AAGA;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;AC9EA;;;;;;;;;;;;;;AAgBA;;ACdA;;;;AAOA;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA","sources":["webpack://home-assistant-frontend/./src/components/ha-navigation-list.ts","webpack://home-assistant-frontend/./src/components/ha-tip.ts","webpack://home-assistant-frontend/./src/panels/config/ha-config-section.ts"],"sourcesContent":["import { ActionDetail } from \"@material/mwc-list/mwc-list\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { navigate } from \"../common/navigate\";\nimport type { PageNavigation } from \"../layouts/hass-tabs-subpage\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-next\";\nimport \"./ha-list-item\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-navigation-list\")\nclass HaNavigationList extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property({ attribute: false }) public pages!: PageNavigation[];\n\n  @property({ type: Boolean }) public hasSecondary = false;\n\n  @property() public label?: string;\n\n  public render(): TemplateResult {\n    return html`\n      <mwc-list\n        innerRole=\"menu\"\n        itemRoles=\"menuitem\"\n        innerAriaLabel=${ifDefined(this.label)}\n        @action=${this._handleListAction}\n      >\n        ${this.pages.map(\n          (page) => html`\n            <ha-list-item\n              graphic=\"avatar\"\n              .twoline=${this.hasSecondary}\n              .hasMeta=${!this.narrow}\n            >\n              <div\n                slot=\"graphic\"\n                class=${page.iconColor ? \"icon-background\" : \"\"}\n                .style=\"background-color: ${page.iconColor || \"undefined\"}\"\n              >\n                <ha-svg-icon .path=${page.iconPath}></ha-svg-icon>\n              </div>\n              <span>${page.name}</span>\n              ${this.hasSecondary\n                ? html`<span slot=\"secondary\">${page.description}</span>`\n                : \"\"}\n              ${!this.narrow\n                ? html`<ha-icon-next slot=\"meta\"></ha-icon-next>`\n                : \"\"}\n            </ha-list-item>\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n\n  private _handleListAction(ev: CustomEvent<ActionDetail>) {\n    const path = this.pages[ev.detail.index].path;\n    if (path.endsWith(\"#external-app-configuration\")) {\n      this.hass.auth.external!.fireMessage({ type: \"config_screen/show\" });\n    } else {\n      navigate(path);\n    }\n  }\n\n  static styles: CSSResultGroup = css`\n    :host {\n      --mdc-list-vertical-padding: 0;\n    }\n    ha-svg-icon,\n    ha-icon-next {\n      color: var(--secondary-text-color);\n      height: 24px;\n      width: 24px;\n      display: block;\n    }\n    ha-svg-icon {\n      padding: 8px;\n    }\n    .icon-background {\n      border-radius: 50%;\n    }\n    .icon-background ha-svg-icon {\n      color: #fff;\n    }\n    ha-list-item {\n      cursor: pointer;\n      font-size: var(--navigation-list-item-title-font-size);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-navigation-list\": HaNavigationList;\n  }\n}\n","import { mdiLightbulbOutline } from \"@mdi/js\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-tip\")\nclass HaTip extends LitElement {\n  public render() {\n    return html`\n      <ha-svg-icon .path=${mdiLightbulbOutline}></ha-svg-icon>\n      <span class=\"prefix\">Tip!</span>\n      <span class=\"text\"><slot></slot></span>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      text-align: center;\n    }\n\n    .text {\n      margin-left: 2px;\n      color: var(--secondary-text-color);\n    }\n\n    .prefix {\n      font-weight: 500;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tip\": HaTip;\n  }\n}\n","import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide = false;\n\n  @property({ type: Boolean }) public vertical = false;\n\n  @property({ type: Boolean, attribute: \"full-width\" })\n  public fullWidth = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n          \"full-width\": this.fullWidth,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: this.vertical || !this.isWide,\n            horizontal: !this.vertical && this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .horizontal .intro {\n        max-width: 400px;\n        margin-right: 40px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n\n      .full-width {\n        padding: 0;\n      }\n\n      .full-width .layout {\n        flex-direction: column;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-section\": HaConfigSection;\n  }\n}\n"],"names":[],"sourceRoot":""}