{"version":3,"file":"9af3a999.js","mappings":";AAkBA;AAEA;AACA;AAGA;;AAKA;;;AAIA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;ACvGA;AACA;;;AATA;;AAEA;;AAWA;;;;AAQA","sources":["webpack://home-assistant-frontend/./src/components/ha-climate-state.ts","webpack://home-assistant-frontend/./src/panels/lovelace/entity-rows/hui-climate-entity-row.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { CLIMATE_PRESET_NONE } from \"../data/climate\";\nimport { UNAVAILABLE_STATES } from \"../data/entity\";\nimport type { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-climate-state\")\nclass HaClimateState extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  protected render(): TemplateResult {\n    const currentStatus = this._computeCurrentStatus();\n\n    return html`<div class=\"target\">\n        ${!UNAVAILABLE_STATES.includes(this.stateObj.state)\n          ? html`<span class=\"state-label\">\n                ${this._localizeState()}\n                ${this.stateObj.attributes.preset_mode &&\n                this.stateObj.attributes.preset_mode !== CLIMATE_PRESET_NONE\n                  ? html`-\n                    ${this.hass.localize(\n                      `state_attributes.climate.preset_mode.${this.stateObj.attributes.preset_mode}`\n                    ) || this.stateObj.attributes.preset_mode}`\n                  : \"\"}\n              </span>\n              <div class=\"unit\">${this._computeTarget()}</div>`\n          : this._localizeState()}\n      </div>\n\n      ${currentStatus && !UNAVAILABLE_STATES.includes(this.stateObj.state)\n        ? html`<div class=\"current\">\n            ${this.hass.localize(\"ui.card.climate.currently\")}:\n            <div class=\"unit\">${currentStatus}</div>\n          </div>`\n        : \"\"}`;\n  }\n\n  private _computeCurrentStatus(): string | undefined {\n    if (!this.hass || !this.stateObj) {\n      return undefined;\n    }\n\n    if (this.stateObj.attributes.current_temperature != null) {\n      return `${formatNumber(\n        this.stateObj.attributes.current_temperature,\n        this.hass.locale\n      )} ${this.hass.config.unit_system.temperature}`;\n    }\n\n    if (this.stateObj.attributes.current_humidity != null) {\n      return `${formatNumber(\n        this.stateObj.attributes.current_humidity,\n        this.hass.locale\n      )} %`;\n    }\n\n    return undefined;\n  }\n\n  private _computeTarget(): string {\n    if (!this.hass || !this.stateObj) {\n      return \"\";\n    }\n\n    if (\n      this.stateObj.attributes.target_temp_low != null &&\n      this.stateObj.attributes.target_temp_high != null\n    ) {\n      return `${formatNumber(\n        this.stateObj.attributes.target_temp_low,\n        this.hass.locale\n      )}-${formatNumber(\n        this.stateObj.attributes.target_temp_high,\n        this.hass.locale\n      )} ${this.hass.config.unit_system.temperature}`;\n    }\n\n    if (this.stateObj.attributes.temperature != null) {\n      return `${formatNumber(\n        this.stateObj.attributes.temperature,\n        this.hass.locale\n      )} ${this.hass.config.unit_system.temperature}`;\n    }\n    if (\n      this.stateObj.attributes.target_humidity_low != null &&\n      this.stateObj.attributes.target_humidity_high != null\n    ) {\n      return `${formatNumber(\n        this.stateObj.attributes.target_humidity_low,\n        this.hass.locale\n      )}-${formatNumber(\n        this.stateObj.attributes.target_humidity_high,\n        this.hass.locale\n      )} %`;\n    }\n\n    if (this.stateObj.attributes.humidity != null) {\n      return `${formatNumber(\n        this.stateObj.attributes.humidity,\n        this.hass.locale\n      )} %`;\n    }\n\n    return \"\";\n  }\n\n  private _localizeState(): string {\n    if (UNAVAILABLE_STATES.includes(this.stateObj.state)) {\n      return this.hass.localize(`state.default.${this.stateObj.state}`);\n    }\n\n    const stateString = this.hass.localize(\n      `component.climate.state._.${this.stateObj.state}`\n    );\n\n    return this.stateObj.attributes.hvac_action\n      ? `${this.hass.localize(\n          `state_attributes.climate.hvac_action.${this.stateObj.attributes.hvac_action}`\n        )} (${stateString})`\n      : stateString;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        white-space: nowrap;\n      }\n\n      .target {\n        color: var(--primary-text-color);\n      }\n\n      .current {\n        color: var(--secondary-text-color);\n      }\n\n      .state-label {\n        font-weight: bold;\n        text-transform: capitalize;\n      }\n\n      .unit {\n        display: inline-block;\n        direction: ltr;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-climate-state\": HaClimateState;\n  }\n}\n","import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-climate-state\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-climate-entity-row\")\nclass HuiClimateEntityRow extends LitElement implements LovelaceRow {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config || !config.entity) {\n      throw new Error(\"Entity must be specified\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        <ha-climate-state .hass=${this.hass} .stateObj=${stateObj}>\n        </ha-climate-state>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-climate-state {\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-climate-entity-row\": HuiClimateEntityRow;\n  }\n}\n"],"names":[],"sourceRoot":""}