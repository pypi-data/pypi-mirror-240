{"version":3,"file":"c1b0a22b.js","mappings":";AA+JA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAGA;;;AAIA;;AAEA;AAEA;AACA;AACA;;AAEA;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;AAEA;AACA;;;AAIA;;;AAKA;;;AAIA;;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAIA;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA","sources":["webpack://home-assistant-frontend/./src/layouts/hass-tabs-subpage-data-table.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { computeRTLDirection } from \"../common/util/compute_rtl\";\nimport \"../components/data-table/ha-data-table\";\nimport type {\n  DataTableColumnContainer,\n  DataTableRowData,\n  HaDataTable,\n} from \"../components/data-table/ha-data-table\";\nimport type { HomeAssistant, Route } from \"../types\";\nimport \"./hass-tabs-subpage\";\nimport type { PageNavigation } from \"./hass-tabs-subpage\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"search-changed\": { value: string };\n    \"clear-filter\": undefined;\n  }\n}\n\n@customElement(\"hass-tabs-subpage-data-table\")\nexport class HaTabsSubpageDataTable extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public localizeFunc?: LocalizeFunc;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  /**\n   * Object with the columns.\n   * @type {Object}\n   */\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n\n  /**\n   * Data to show in the table.\n   * @type {Array}\n   */\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n\n  /**\n   * Should rows be selectable.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public selectable = false;\n\n  /**\n   * Should rows be clickable.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public clickable = false;\n\n  /**\n   * Do we need to add padding for a fab.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public hasFab = false;\n\n  /**\n   * Add an extra row at the bottom of the data table\n   * @type {TemplateResult}\n   */\n  @property({ attribute: false }) public appendRow?: TemplateResult;\n\n  /**\n   * Field with a unique id per entry in data.\n   * @type {String}\n   */\n  @property({ type: String }) public id = \"id\";\n\n  /**\n   * String to filter the data in the data table on.\n   * @type {String}\n   */\n  @property({ type: String }) public filter = \"\";\n\n  @property() public searchLabel?: string;\n\n  /**\n   * List of strings that show what the data is currently filtered by.\n   * @type {Array}\n   */\n  @property({ type: Array }) public activeFilters?;\n\n  /**\n   * Text to how how many items are hidden.\n   * @type {String}\n   */\n  @property() public hiddenLabel?: string;\n\n  /**\n   * How many items are hidden because of active filters.\n   * @type {Number}\n   */\n  @property({ type: Number }) public numHidden = 0;\n\n  /**\n   * What path to use when the back button is pressed.\n   * @type {String}\n   * @attr back-path\n   */\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  /**\n   * Function to call when the back button is pressed.\n   * @type {() => void}\n   */\n  @property() public backCallback?: () => void;\n\n  /**\n   * String to show when there are no records in the data table.\n   * @type {String}\n   */\n  @property({ type: String }) public noDataText?: string;\n\n  @property() public route!: Route;\n\n  /**\n   * Array of tabs to show on the page.\n   * @type {Array}\n   */\n  @property() public tabs: PageNavigation[] = [];\n\n  /**\n   * Force hides the filter menu.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public hideFilterMenu = false;\n\n  @query(\"ha-data-table\", true) private _dataTable!: HaDataTable;\n\n  public clearSelection() {\n    this._dataTable.clearSelection();\n  }\n\n  protected render(): TemplateResult {\n    const hiddenLabel = this.numHidden\n      ? this.hiddenLabel ||\n        this.hass.localize(\n          \"ui.components.data-table.hidden\",\n          \"number\",\n          this.numHidden\n        ) ||\n        this.numHidden\n      : undefined;\n\n    const filterInfo = this.activeFilters\n      ? html`${this.hass.localize(\"ui.components.data-table.filtering_by\")}\n        ${this.activeFilters.join(\", \")}\n        ${hiddenLabel ? `(${hiddenLabel})` : \"\"}`\n      : hiddenLabel;\n\n    const headerToolbar = html`<search-input\n      .hass=${this.hass}\n      .filter=${this.filter}\n      .suffix=${!this.narrow}\n      @value-changed=${this._handleSearchChange}\n      .label=${this.searchLabel ||\n      this.hass.localize(\"ui.components.data-table.search\")}\n    >\n      ${!this.narrow\n        ? html`<div\n            class=\"filters\"\n            slot=\"suffix\"\n            @click=${this._preventDefault}\n          >\n            ${filterInfo\n              ? html`<div class=\"active-filters\">\n                  ${filterInfo}\n                  <mwc-button @click=${this._clearFilter}>\n                    ${this.hass.localize(\"ui.components.data-table.clear\")}\n                  </mwc-button>\n                </div>`\n              : \"\"}\n            <slot name=\"filter-menu\"></slot>\n          </div>`\n        : \"\"}\n    </search-input>`;\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .localizeFunc=${this.localizeFunc}\n        .narrow=${this.narrow}\n        .isWide=${this.isWide}\n        .backPath=${this.backPath}\n        .backCallback=${this.backCallback}\n        .route=${this.route}\n        .tabs=${this.tabs}\n        .mainPage=${this.mainPage}\n        .supervisor=${this.supervisor}\n      >\n        ${!this.hideFilterMenu\n          ? html`\n              <div slot=\"toolbar-icon\">\n                ${this.narrow\n                  ? html`\n                      <div class=\"filter-menu\">\n                        ${this.numHidden || this.activeFilters\n                          ? html`<span class=\"badge\"\n                              >${this.numHidden || \"!\"}</span\n                            >`\n                          : \"\"}\n                        <slot name=\"filter-menu\"></slot>\n                      </div>\n                    `\n                  : \"\"}<slot name=\"toolbar-icon\"></slot>\n              </div>\n            `\n          : \"\"}\n        ${this.narrow\n          ? html`\n              <div slot=\"header\">\n                <slot name=\"header\">\n                  <div class=\"search-toolbar\">${headerToolbar}</div>\n                </slot>\n              </div>\n            `\n          : \"\"}\n        <ha-data-table\n          .hass=${this.hass}\n          .columns=${this.columns}\n          .data=${this.data}\n          .filter=${this.filter}\n          .selectable=${this.selectable}\n          .hasFab=${this.hasFab}\n          .id=${this.id}\n          .noDataText=${this.noDataText}\n          .dir=${computeRTLDirection(this.hass)}\n          .clickable=${this.clickable}\n          .appendRow=${this.appendRow}\n        >\n          ${!this.narrow\n            ? html`\n                <div slot=\"header\">\n                  <slot name=\"header\">\n                    <div class=\"table-header\">${headerToolbar}</div>\n                  </slot>\n                </div>\n              `\n            : html` <div slot=\"header\"></div> `}\n        </ha-data-table>\n        <div slot=\"fab\"><slot name=\"fab\"></slot></div>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private _preventDefault(ev) {\n    ev.preventDefault();\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    if (this.filter === ev.detail.value) {\n      return;\n    }\n    this.filter = ev.detail.value;\n    fireEvent(this, \"search-changed\", { value: this.filter });\n  }\n\n  private _clearFilter() {\n    fireEvent(this, \"clear-filter\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-data-table {\n        width: 100%;\n        height: 100%;\n        --data-table-border-width: 0;\n      }\n      :host(:not([narrow])) ha-data-table {\n        height: calc(100vh - 1px - var(--header-height));\n        display: block;\n      }\n      :host([narrow]) hass-tabs-subpage {\n        --main-title-margin: 0;\n      }\n      .table-header {\n        display: flex;\n        align-items: center;\n        --mdc-shape-small: 0;\n        height: 56px;\n      }\n      .search-toolbar {\n        display: flex;\n        align-items: center;\n        color: var(--secondary-text-color);\n      }\n      search-input {\n        --mdc-text-field-fill-color: var(--sidebar-background-color);\n        --mdc-text-field-idle-line-color: var(--divider-color);\n        --text-field-overflow: visible;\n        z-index: 5;\n      }\n      .table-header search-input {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        left: 0;\n      }\n      .search-toolbar search-input {\n        display: block;\n        width: 100%;\n        color: var(--secondary-text-color);\n        --mdc-ripple-color: transparant;\n      }\n      .filters {\n        --mdc-text-field-fill-color: var(--input-fill-color);\n        --mdc-text-field-idle-line-color: var(--input-idle-line-color);\n        --mdc-shape-small: 4px;\n        --text-field-overflow: initial;\n        display: flex;\n        justify-content: flex-end;\n        margin-right: 8px;\n        color: var(--primary-text-color);\n      }\n      .active-filters {\n        color: var(--primary-text-color);\n        position: relative;\n        display: flex;\n        align-items: center;\n        padding: 2px 2px 2px 8px;\n        margin-left: 4px;\n        font-size: 14px;\n        width: max-content;\n        cursor: initial;\n      }\n      .active-filters ha-svg-icon {\n        color: var(--primary-color);\n      }\n      .active-filters mwc-button {\n        margin-left: 8px;\n      }\n      .active-filters::before {\n        background-color: var(--primary-color);\n        opacity: 0.12;\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        content: \"\";\n      }\n      .badge {\n        min-width: 20px;\n        box-sizing: border-box;\n        border-radius: 50%;\n        font-weight: 400;\n        background-color: var(--primary-color);\n        line-height: 20px;\n        text-align: center;\n        padding: 0px 4px;\n        color: var(--text-primary-color);\n        position: absolute;\n        right: 0;\n        top: 4px;\n        font-size: 0.65em;\n      }\n      .filter-menu {\n        position: relative;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage-data-table\": HaTabsSubpageDataTable;\n  }\n}\n"],"names":[],"sourceRoot":""}