"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[66532],{66532:function(t,e,s){s.r(e),s.d(e,{CastManager:function(){return h},getCastManager:function(){return d}});var n=s(69470);let i;var r=s(54049),a=s(66628),o=s(91794);function c(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var n=s.call(t,e||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}let u;class h{constructor(t){c(this,"auth",void 0),c(this,"status",void 0),c(this,"_eventListeners",{}),this.auth=t;const e=this.castContext;e.setOptions({receiverApplicationId:r.$Q,autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED}),e.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,(t=>this._sessionStateChanged(t))),e.addEventListener(cast.framework.CastContextEventType.CAST_STATE_CHANGED,(t=>this._castStateChanged(t)))}addEventListener(t,e){return t in this._eventListeners||(this._eventListeners[t]=[]),this._eventListeners[t].push(e),()=>{this._eventListeners[t].splice(this._eventListeners[t].indexOf(e))}}get castConnectedToOurHass(){return void 0!==this.status&&void 0!==this.auth&&this.status.connected&&(this.status.hassUrl===this.auth.data.hassUrl||r.Hq&&this.status.hassUrl===a.M)}sendMessage(t){this.castSession.sendMessage(r.py,t)}get castState(){return this.castContext.getCastState()}get castContext(){return cast.framework.CastContext.getInstance()}get castSession(){return this.castContext.getCurrentSession()}requestSession(){return this.castContext.requestSession()}_fireEvent(t){for(const e of this._eventListeners[t]||[])e()}_receiveMessage(t){"receiver_status"===t.type&&(this.status=t,this._fireEvent("connection-changed"))}_sessionStateChanged(t){"SESSION_STARTED"===t.sessionState||"SESSION_RESUMED"===t.sessionState?(this.auth?(0,o.Ni)(this,this.auth):this.sendMessage({type:"get_status"}),this._attachMessageListener()):"SESSION_ENDED"===t.sessionState&&(this.status=void 0,this._fireEvent("connection-changed"))}_castStateChanged(t){this._fireEvent("state-changed")}_attachMessageListener(){this.castSession.addMessageListener(r.py,((t,e)=>this._receiveMessage(JSON.parse(e))))}}const d=t=>(u||(u=(()=>{if(i)return i;i=new Promise((t=>{window.__onGCastApiAvailable=t}));const t=document.createElement("div");return t.id="cast",document.body.append(t),(0,n.fs)("https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"),i})().then((e=>{if(!e)throw new Error("No Cast API available");return new h(t)}))),u)},69470:function(t,e,s){s.d(e,{$y:function(){return a},fs:function(){return r},j:function(){return i}});const n=(t,e,s)=>new Promise(((n,i)=>{const r=document.createElement(t);let a="src",o="body";switch(r.onload=()=>n(e),r.onerror=()=>i(e),t){case"script":r.async=!0,s&&(r.type=s);break;case"link":r.type="text/css",r.rel="stylesheet",a="href",o="head"}r[a]=e,document[o].appendChild(r)})),i=t=>n("link",t),r=t=>n("script",t),a=t=>n("script",t,"module")}}]);