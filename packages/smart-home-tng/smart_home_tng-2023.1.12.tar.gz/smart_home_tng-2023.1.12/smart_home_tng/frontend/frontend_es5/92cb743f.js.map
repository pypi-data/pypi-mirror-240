{"version":3,"file":"92cb743f.js","mappings":";;AAyBA;;;;AAKA;;;AASA;AACA;;;;AAIA;;;;;;AAUA;;;AAGA;;;AAIA;;;;;;;;;;;;;;;;AAoBA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-sun.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport \"../../../components/ha-relative-time\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"more-info-sun\")\nclass MoreInfoSun extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: HassEntity;\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n\n    const risingDate = new Date(this.stateObj.attributes.next_rising);\n    const settingDate = new Date(this.stateObj.attributes.next_setting);\n    const order = risingDate > settingDate ? [\"set\", \"ris\"] : [\"ris\", \"set\"];\n\n    return html`\n      <hr />\n      ${order.map(\n        (item) => html`\n          <div class=\"row\">\n            <div class=\"key\">\n              <span\n                >${item === \"ris\"\n                  ? this.hass.localize(\n                      \"ui.dialogs.more_info_control.sun.rising\"\n                    )\n                  : this.hass.localize(\n                      \"ui.dialogs.more_info_control.sun.setting\"\n                    )}</span\n              >\n              <ha-relative-time\n                .hass=${this.hass}\n                .datetime=${item === \"ris\" ? risingDate : settingDate}\n              ></ha-relative-time>\n            </div>\n            <div class=\"value\">\n              ${formatTime(\n                item === \"ris\" ? risingDate : settingDate,\n                this.hass.locale\n              )}\n            </div>\n          </div>\n        `\n      )}\n      <div class=\"row\">\n        <div class=\"key\">\n          ${this.hass.localize(\"ui.dialogs.more_info_control.sun.elevation\")}\n        </div>\n        <div class=\"value\">\n          ${formatNumber(this.stateObj.attributes.elevation, this.hass.locale)}\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .row {\n        margin: 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n      }\n      ha-relative-time {\n        display: inline-block;\n        white-space: nowrap;\n      }\n      hr {\n        border-color: var(--divider-color);\n        border-bottom: none;\n        margin: 16px 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-sun\": MoreInfoSun;\n  }\n}\n"],"names":[],"sourceRoot":""}