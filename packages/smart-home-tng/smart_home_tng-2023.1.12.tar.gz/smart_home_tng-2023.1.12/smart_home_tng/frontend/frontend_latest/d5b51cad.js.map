{"version":3,"file":"d5b51cad.js","mappings":";;AA+BA;AACA;AACA;AACA;AACA;AACA;;;AAIA;;AAcA;;;AAKA;;AAGA;;;AAOA;;AA+BA;;AAIA;AACA;;AAKA","sources":["webpack://home-assistant-frontend/./src/panels/config/integrations/integration-panels/zwave_js/zwave_js-provisioned.ts"],"sourcesContent":["import { mdiCheckCircle, mdiCloseCircleOutline, mdiDelete } from \"@mdi/js\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { DataTableColumnContainer } from \"../../../../../components/data-table/ha-data-table\";\nimport {\n  ZwaveJSProvisioningEntry,\n  fetchZwaveProvisioningEntries,\n  SecurityClass,\n  unprovisionZwaveSmartStartNode,\n} from \"../../../../../data/zwave_js\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport \"../../../../../layouts/hass-tabs-subpage-data-table\";\nimport { HomeAssistant, Route } from \"../../../../../types\";\nimport { configTabs } from \"./zwave_js-config-router\";\n\n@customElement(\"zwave_js-provisioned\")\nclass ZWaveJSProvisioned extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Object }) public route!: Route;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property() public configEntryId!: string;\n\n  @state() private _provisioningEntries: ZwaveJSProvisioningEntry[] = [];\n\n  protected render() {\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        .tabs=${configTabs}\n        .columns=${this._columns(this.narrow)}\n        .data=${this._provisioningEntries}\n      >\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  private _columns = memoizeOne(\n    (narrow: boolean): DataTableColumnContainer => ({\n      included: {\n        title: this.hass.localize(\n          \"ui.panel.config.zwave_js.provisioned.included\"\n        ),\n        type: \"icon\",\n        width: \"100px\",\n        template: (_info, provisioningEntry: any) =>\n          provisioningEntry.additional_properties.nodeId\n            ? html`\n                <ha-svg-icon\n                  .label=${this.hass.localize(\n                    \"ui.panel.config.zwave_js.provisioned.included\"\n                  )}\n                  .path=${mdiCheckCircle}\n                ></ha-svg-icon>\n              `\n            : html`\n                <ha-svg-icon\n                  .label=${this.hass.localize(\n                    \"ui.panel.config.zwave_js.provisioned.not_included\"\n                  )}\n                  .path=${mdiCloseCircleOutline}\n                ></ha-svg-icon>\n              `,\n      },\n      dsk: {\n        title: this.hass.localize(\"ui.panel.config.zwave_js.provisioned.dsk\"),\n        sortable: true,\n        filterable: true,\n        grows: true,\n      },\n      security_classes: {\n        title: this.hass.localize(\n          \"ui.panel.config.zwave_js.provisioned.security_classes\"\n        ),\n        width: \"30%\",\n        hidden: narrow,\n        filterable: true,\n        sortable: true,\n        template: (securityClasses: SecurityClass[]) =>\n          securityClasses\n            .map((secClass) =>\n              this.hass.localize(\n                `ui.panel.config.zwave_js.security_classes.${SecurityClass[secClass]}.title`\n              )\n            )\n            .join(\", \"),\n      },\n      unprovision: {\n        title: this.hass.localize(\n          \"ui.panel.config.zwave_js.provisioned.unprovison\"\n        ),\n        type: \"icon-button\",\n        width: \"100px\",\n        template: (_info, provisioningEntry: any) => html`\n          <ha-icon-button\n            .label=${this.hass.localize(\n              \"ui.panel.config.zwave_js.provisioned.unprovison\"\n            )}\n            .path=${mdiDelete}\n            .provisioningEntry=${provisioningEntry}\n            @click=${this._unprovision}\n          ></ha-icon-button>\n        `,\n      },\n    })\n  );\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n  }\n\n  private async _fetchData() {\n    this._provisioningEntries = await fetchZwaveProvisioningEntries(\n      this.hass!,\n      this.configEntryId\n    );\n  }\n\n  private _unprovision = async (ev) => {\n    const dsk = ev.currentTarget.provisioningEntry.dsk;\n\n    const confirm = await showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.zwave_js.provisioned.confirm_unprovision_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.zwave_js.provisioned.confirm_unprovision_text\"\n      ),\n      confirmText: this.hass.localize(\n        \"ui.panel.config.zwave_js.provisioned.unprovison\"\n      ),\n    });\n\n    if (!confirm) {\n      return;\n    }\n\n    await unprovisionZwaveSmartStartNode(this.hass, this.configEntryId, dsk);\n    this._fetchData();\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"zwave_js-provisioned\": ZWaveJSProvisioned;\n  }\n}\n"],"names":[],"sourceRoot":""}