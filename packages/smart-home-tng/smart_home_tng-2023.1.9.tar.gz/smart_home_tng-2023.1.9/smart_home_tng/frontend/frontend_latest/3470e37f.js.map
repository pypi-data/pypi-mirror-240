{"version":3,"file":"3470e37f.js","mappings":";;;AAwCA;AACA;;;AAGA;;;AAIA;AACA;;;AAGA;;;;AAKA;;;AAGA;;AAEA;AACA;;;AA7BA;;;;;;;;;;AAkDA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/editor/card-editor/hui-dialog-delete-card.ts"],"sourcesContent":["import deepFreeze from \"deep-freeze\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport type { LovelaceCardConfig } from \"../../../../data/lovelace\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport \"./hui-card-preview\";\nimport type { DeleteCardDialogParams } from \"./show-delete-card-dialog\";\n\n@customElement(\"hui-dialog-delete-card\")\nexport class HuiDialogDeleteCard extends LitElement {\n  @property() protected hass!: HomeAssistant;\n\n  @state() private _params?: DeleteCardDialogParams;\n\n  @state() private _cardConfig?: LovelaceCardConfig;\n\n  public async showDialog(params: DeleteCardDialogParams): Promise<void> {\n    this._params = params;\n    this._cardConfig = params.cardConfig;\n    if (!Object.isFrozen(this._cardConfig)) {\n      this._cardConfig = deepFreeze(this._cardConfig);\n    }\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._cardConfig = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.panel.lovelace.cards.confirm_delete\")}\n      >\n        <div>\n          ${this._cardConfig\n            ? html`\n                <div class=\"element-preview\">\n                  <hui-card-preview\n                    .hass=${this.hass}\n                    .config=${this._cardConfig}\n                  ></hui-card-preview>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          dialogInitialFocus\n        >\n          ${this.hass!.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button slot=\"primaryAction\" class=\"warning\" @click=${this._delete}>\n          ${this.hass!.localize(\"ui.common.delete\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        .element-preview {\n          position: relative;\n        }\n        hui-card-preview {\n          margin: 4px auto;\n          max-width: 500px;\n          display: block;\n          width: 100%;\n        }\n      `,\n    ];\n  }\n\n  private _delete(): void {\n    if (!this._params?.deleteCard) {\n      return;\n    }\n    this._params.deleteCard();\n    this.closeDialog();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-delete-card\": HuiDialogDeleteCard;\n  }\n}\n"],"names":[],"sourceRoot":""}