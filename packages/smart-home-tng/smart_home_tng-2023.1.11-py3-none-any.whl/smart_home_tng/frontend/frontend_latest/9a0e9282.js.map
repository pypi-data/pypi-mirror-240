{"version":3,"file":"9a0e9282.js","mappings":";AAsDA;AACA;;AAGA;AACA;;AAEA;;AAIA;;;;;;;;;;;;AAuBA","sources":["webpack://home-assistant-frontend/./src/managers/notification-manager.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property, state, query } from \"lit/decorators\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport \"../components/ha-toast\";\nimport type { HaToast } from \"../components/ha-toast\";\nimport type { HomeAssistant } from \"../types\";\n\nexport interface ShowToastParams {\n  message: string;\n  action?: ToastActionParams;\n  duration?: number;\n  dismissable?: boolean;\n}\n\nexport interface ToastActionParams {\n  action: () => void;\n  text: string;\n}\n\nclass NotificationManager extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _action?: ToastActionParams;\n\n  @state() private _noCancelOnOutsideClick = false;\n\n  @query(\"ha-toast\") private _toast!: HaToast;\n\n  public async showDialog({\n    message,\n    action,\n    duration,\n    dismissable,\n  }: ShowToastParams) {\n    let toast = this._toast;\n    // Can happen on initial load\n    if (!toast) {\n      await this.updateComplete;\n      toast = this._toast;\n    }\n    toast.setAttribute(\"dir\", computeRTL(this.hass) ? \"rtl\" : \"ltr\");\n    this._action = action || undefined;\n    this._noCancelOnOutsideClick =\n      dismissable === undefined ? false : !dismissable;\n    toast.hide();\n    toast.show({\n      text: message,\n      duration: duration === undefined ? 3000 : duration,\n    });\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-toast .noCancelOnOutsideClick=${this._noCancelOnOutsideClick}>\n        ${this._action\n          ? html`\n              <mwc-button\n                .label=${this._action.text}\n                @click=${this.buttonClicked}\n              ></mwc-button>\n            `\n          : \"\"}\n      </ha-toast>\n    `;\n  }\n\n  private buttonClicked() {\n    this._toast.hide();\n    if (this._action) {\n      this._action.action();\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-toast {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 8px 12px;\n      }\n      mwc-button {\n        color: var(--primary-color);\n        font-weight: bold;\n        margin-left: 8px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"notification-manager\", NotificationManager);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"notification-manager\": NotificationManager;\n  }\n\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-notification\": ShowToastParams;\n  }\n}\n"],"names":[],"sourceRoot":""}