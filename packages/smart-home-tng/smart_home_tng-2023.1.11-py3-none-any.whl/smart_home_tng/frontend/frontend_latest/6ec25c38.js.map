{"version":3,"file":"6ec25c38.js","mappings":";;AA4DA;AACA;AACA;;AAEA;;AAEA;;;;AAMA;AACA;AACA;;;;AAMA;;;;AAIA;AACA;AACA;;AAEA;;;;;;AAMA;AAGA;;;AAGA;;;AAIA;AAGA;AAEA;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA","sources":["webpack://home-assistant-frontend/./src/panels/config/integrations/integration-panels/zha/zha-add-group-page.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport type { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { css, CSSResultGroup, html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport type { HASSDomEvent } from \"../../../../../common/dom/fire_event\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport type { SelectionChangedEvent } from \"../../../../../components/data-table/ha-data-table\";\nimport \"../../../../../components/ha-circular-progress\";\nimport {\n  addGroup,\n  fetchGroupableDevices,\n  ZHADeviceEndpoint,\n  ZHAGroup,\n} from \"../../../../../data/zha\";\nimport \"../../../../../layouts/hass-error-screen\";\nimport \"../../../../../layouts/hass-subpage\";\nimport type { PolymerChangedEvent } from \"../../../../../polymer-types\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport \"../../../ha-config-section\";\nimport \"./zha-device-endpoint-data-table\";\nimport type { ZHADeviceEndpointDataTable } from \"./zha-device-endpoint-data-table\";\n\n@customElement(\"zha-add-group-page\")\nexport class ZHAAddGroupPage extends LitElement {\n  @property({ type: Object }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property({ type: Array }) public deviceEndpoints: ZHADeviceEndpoint[] = [];\n\n  @state() private _processingAdd = false;\n\n  @state() private _groupName = \"\";\n\n  @query(\"zha-device-endpoint-data-table\", true)\n  private _zhaDevicesDataTable!: ZHADeviceEndpointDataTable;\n\n  private _firstUpdatedCalled = false;\n\n  private _selectedDevicesToAdd: string[] = [];\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hass && this._firstUpdatedCalled) {\n      this._fetchData();\n    }\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    if (this.hass) {\n      this._fetchData();\n    }\n    this._firstUpdatedCalled = true;\n  }\n\n  protected render() {\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.zha.groups.create_group\")}\n      >\n        <ha-config-section .isWide=${!this.narrow}>\n          <p slot=\"introduction\">\n            ${this.hass.localize(\n              \"ui.panel.config.zha.groups.create_group_details\"\n            )}\n          </p>\n          <paper-input\n            type=\"string\"\n            .value=${this._groupName}\n            @value-changed=${this._handleNameChange}\n            placeholder=${this.hass!.localize(\n              \"ui.panel.config.zha.groups.group_name_placeholder\"\n            )}\n          ></paper-input>\n\n          <div class=\"header\">\n            ${this.hass.localize(\"ui.panel.config.zha.groups.add_members\")}\n          </div>\n\n          <zha-device-endpoint-data-table\n            .hass=${this.hass}\n            .deviceEndpoints=${this.deviceEndpoints}\n            .narrow=${this.narrow}\n            selectable\n            @selection-changed=${this._handleAddSelectionChanged}\n          >\n          </zha-device-endpoint-data-table>\n\n          <div class=\"buttons\">\n            <mwc-button\n              .disabled=${!this._groupName ||\n              this._groupName === \"\" ||\n              this._processingAdd}\n              @click=${this._createGroup}\n              class=\"button\"\n            >\n              ${this._processingAdd\n                ? html`<ha-circular-progress\n                    active\n                    size=\"small\"\n                    .title=${this.hass!.localize(\n                      \"ui.panel.config.zha.groups.creating_group\"\n                    )}\n                  ></ha-circular-progress>`\n                : \"\"}\n              ${this.hass!.localize(\n                \"ui.panel.config.zha.groups.create\"\n              )}</mwc-button\n            >\n          </div>\n        </ha-config-section>\n      </hass-subpage>\n    `;\n  }\n\n  private async _fetchData() {\n    this.deviceEndpoints = await fetchGroupableDevices(this.hass!);\n  }\n\n  private _handleAddSelectionChanged(\n    ev: HASSDomEvent<SelectionChangedEvent>\n  ): void {\n    this._selectedDevicesToAdd = ev.detail.value;\n  }\n\n  private async _createGroup(): Promise<void> {\n    this._processingAdd = true;\n    const members = this._selectedDevicesToAdd.map((member) => {\n      const memberParts = member.split(\"_\");\n      return { ieee: memberParts[0], endpoint_id: memberParts[1] };\n    });\n    const group: ZHAGroup = await addGroup(this.hass, this._groupName, members);\n    this._selectedDevicesToAdd = [];\n    this._processingAdd = false;\n    this._groupName = \"\";\n    this._zhaDevicesDataTable.clearSelection();\n    navigate(`/config/zha/group/${group.group_id}`, { replace: true });\n  }\n\n  private _handleNameChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this._groupName = target.value || \"\";\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        .header {\n          font-family: var(--paper-font-display1_-_font-family);\n          -webkit-font-smoothing: var(\n            --paper-font-display1_-_-webkit-font-smoothing\n          );\n          font-size: var(--paper-font-display1_-_font-size);\n          font-weight: var(--paper-font-display1_-_font-weight);\n          letter-spacing: var(--paper-font-display1_-_letter-spacing);\n          line-height: var(--paper-font-display1_-_line-height);\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .button {\n          float: right;\n        }\n\n        ha-config-section *:last-child {\n          padding-bottom: 24px;\n        }\n        .buttons {\n          align-items: flex-end;\n          padding: 8px;\n        }\n        .buttons .warning {\n          --mdc-theme-primary: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n"],"names":[],"sourceRoot":""}