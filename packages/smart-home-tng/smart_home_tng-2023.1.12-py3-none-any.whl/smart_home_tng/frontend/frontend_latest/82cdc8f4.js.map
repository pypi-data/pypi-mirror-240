{"version":3,"file":"82cdc8f4.js","mappings":";;AA8BA;AACA;AACA;;;;;AAOA;;;;AAMA;;AAIA;;;;AAMA;AAGA;;;AAGA;AACA;;;;;AAOA;AACA;;AAEA;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;AAoEA","sources":["webpack://home-assistant-frontend/./src/panels/config/cloud/forgot-password/cloud-forgot-password.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-card\";\nimport type { HaTextField } from \"../../../../components/ha-textfield\";\nimport \"../../../../components/ha-textfield\";\nimport { cloudForgotPassword } from \"../../../../data/cloud\";\nimport \"../../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"cloud-forgot-password\")\nexport class CloudForgotPassword extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property() public email?: string;\n\n  @state() public _requestInProgress = false;\n\n  @state() private _error?: string;\n\n  @query(\"#email\", true) private _emailField!: HaTextField;\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\n          \"ui.panel.config.cloud.forgot_password.title\"\n        )}\n      >\n        <div class=\"content\">\n          <ha-card\n            outlined\n            .header=${this.hass.localize(\n              \"ui.panel.config.cloud.forgot_password.subtitle\"\n            )}\n          >\n            <div class=\"card-content\">\n              <p>\n                ${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.instructions\"\n                )}\n              </p>\n              ${this._error\n                ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n                : \"\"}\n              <ha-textfield\n                autofocus\n                id=\"email\"\n                label=${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.email\"\n                )}\n                .value=${this.email}\n                type=\"email\"\n                required\n                @keydown=${this._keyDown}\n                .validationMessage=${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.email_error_msg\"\n                )}\n              ></ha-textfield>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button\n                @click=${this._handleEmailPasswordReset}\n                .progress=${this._requestInProgress}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.send_reset_email\"\n                )}\n              </ha-progress-button>\n            </div>\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private _keyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\") {\n      this._handleEmailPasswordReset();\n    }\n  }\n\n  private async _handleEmailPasswordReset() {\n    const emailField = this._emailField;\n\n    const email = emailField.value;\n\n    if (!emailField.reportValidity()) {\n      emailField.focus();\n      return;\n    }\n\n    this._requestInProgress = true;\n\n    try {\n      await cloudForgotPassword(this.hass, email);\n      // @ts-ignore\n      fireEvent(this, \"email-changed\", { value: email });\n      this._requestInProgress = false;\n      // @ts-ignore\n      fireEvent(this, \"cloud-done\", {\n        flashMessage: this.hass.localize(\n          \"ui.panel.config.cloud.forgot_password.check_your_email\"\n        ),\n      });\n    } catch (err: any) {\n      this._requestInProgress = false;\n      this._error =\n        err && err.body && err.body.message\n          ? err.body.message\n          : \"Unknown error\";\n    }\n  }\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding-bottom: 24px;\n        }\n        ha-card {\n          max-width: 600px;\n          margin: 0 auto;\n          margin-top: 24px;\n        }\n        h1 {\n          margin: 0;\n        }\n        ha-textfield {\n          width: 100%;\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .card-actions a {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-forgot-password\": CloudForgotPassword;\n  }\n}\n"],"names":[],"sourceRoot":""}