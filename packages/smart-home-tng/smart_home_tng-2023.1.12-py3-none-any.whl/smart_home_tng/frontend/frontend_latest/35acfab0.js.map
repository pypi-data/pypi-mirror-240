{"version":3,"file":"35acfab0.js","mappings":";AAoDA;;AAIA;AACA;AACA;;AAKA;AAIA;;;;;;;;;;;;;;;;;;;AAqBA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/header-footer/hui-buttons-header-footer.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult } from \"lit\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { HomeAssistant } from \"../../../types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-buttons-base\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { ButtonsHeaderFooterConfig } from \"./types\";\n\n@customElement(\"hui-buttons-header-footer\")\nexport class HuiButtonsHeaderFooter\n  extends LitElement\n  implements LovelaceHeaderFooter\n{\n  public static getStubConfig(): Record<string, unknown> {\n    return { entities: [] };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public type!: \"header\" | \"footer\";\n\n  @state() private _configEntities?: EntityConfig[];\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(config: ButtonsHeaderFooterConfig): void {\n    this._configEntities = processConfigEntities(config.entities).map(\n      (entityConfig) => {\n        const conf = {\n          tap_action: { action: \"toggle\" },\n          hold_action: { action: \"more-info\" },\n          ...entityConfig,\n        };\n        if (computeDomain(entityConfig.entity) === \"scene\") {\n          conf.tap_action = {\n            action: \"call-service\",\n            service: \"scene.turn_on\",\n            target: { entity_id: conf.entity },\n          };\n        }\n        return conf;\n      }\n    );\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      ${this.type === \"footer\"\n        ? html`<li class=\"divider footer\" role=\"separator\"></li>`\n        : \"\"}\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n        class=${classMap({\n          footer: this.type === \"footer\",\n          header: this.type === \"header\",\n        })}\n      ></hui-buttons-base>\n      ${this.type === \"header\"\n        ? html`<li class=\"divider header\" role=\"separator\"></li>`\n        : \"\"}\n    `;\n  }\n\n  static styles = css`\n    .divider {\n      height: 0;\n      margin: 16px 0;\n      list-style-type: none;\n      border: none;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n      border-bottom-color: var(--divider-color);\n    }\n    .divider.header {\n      margin-top: 0;\n    }\n    hui-buttons-base.footer {\n      --padding-bottom: 16px;\n    }\n    hui-buttons-base.header {\n      --padding-top: 16px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-header-footer\": HuiButtonsHeaderFooter;\n  }\n}\n"],"names":[],"sourceRoot":""}