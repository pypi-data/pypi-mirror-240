{"version":3,"file":"3cffb2b2.js","mappings":";AA8CA;;;;AAKA;;;AAIA;AAKA;AACA;AACA;AACA;AACA;;;;AAIA;;AAIA;;AAEA;;;;;AAMA;AACA;;AAEA;AAEA;;;;;AAKA;AACA;;;AAGA;;;;;;AAOA;AACA;AAtGA;;AA0GA;;AAGA;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA","sources":["webpack://home-assistant-frontend/./src/components/ha-file-upload.ts"],"sourcesContent":["import { styles } from \"@material/mwc-textfield/mwc-textfield.css\";\nimport { mdiClose } from \"@mdi/js\";\nimport { css, html, LitElement, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-circular-progress\";\nimport \"./ha-icon-button\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"file-picked\": { files: FileList };\n  }\n}\n\n@customElement(\"ha-file-upload\")\nexport class HaFileUpload extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public accept!: string;\n\n  @property() public icon?: string;\n\n  @property() public label!: string;\n\n  @property() public value: string | TemplateResult | null = null;\n\n  @property({ type: Boolean }) private uploading = false;\n\n  @property({ type: Boolean, attribute: \"auto-open-file-dialog\" })\n  private autoOpenFileDialog = false;\n\n  @state() private _drag = false;\n\n  @query(\"#input\") private _input?: HTMLInputElement;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    if (this.autoOpenFileDialog) {\n      this._openFilePicker();\n    }\n  }\n\n  public render(): TemplateResult {\n    return html`\n      ${this.uploading\n        ? html`<ha-circular-progress\n            alt=\"Uploading\"\n            size=\"large\"\n            active\n          ></ha-circular-progress>`\n        : html`\n            <label\n              for=\"input\"\n              class=\"mdc-text-field mdc-text-field--filled ${classMap({\n                \"mdc-text-field--focused\": this._drag,\n                \"mdc-text-field--with-leading-icon\": Boolean(this.icon),\n                \"mdc-text-field--with-trailing-icon\": Boolean(this.value),\n              })}\"\n              @drop=${this._handleDrop}\n              @dragenter=${this._handleDragStart}\n              @dragover=${this._handleDragStart}\n              @dragleave=${this._handleDragEnd}\n              @dragend=${this._handleDragEnd}\n            >\n              <span class=\"mdc-text-field__ripple\"></span>\n              <span\n                class=\"mdc-floating-label ${this.value || this._drag\n                  ? \"mdc-floating-label--float-above\"\n                  : \"\"}\"\n                id=\"label\"\n                >${this.label}</span\n              >\n              ${this.icon\n                ? html`<span\n                    class=\"mdc-text-field__icon mdc-text-field__icon--leading\"\n                    tabindex=\"-1\"\n                  >\n                    <ha-icon-button\n                      @click=${this._openFilePicker}\n                      .path=${this.icon}\n                    ></ha-icon-button>\n                  </span>`\n                : \"\"}\n              <div class=\"value\">${this.value}</div>\n              <input\n                id=\"input\"\n                type=\"file\"\n                class=\"mdc-text-field__input file\"\n                accept=${this.accept}\n                @change=${this._handleFilePicked}\n                aria-labelledby=\"label\"\n              />\n              ${this.value\n                ? html`<span\n                    class=\"mdc-text-field__icon mdc-text-field__icon--trailing\"\n                    tabindex=\"1\"\n                  >\n                    <ha-icon-button\n                      slot=\"suffix\"\n                      @click=${this._clearValue}\n                      .label=${this.hass?.localize(\"ui.common.close\") ||\n                      \"close\"}\n                      .path=${mdiClose}\n                    ></ha-icon-button>\n                  </span>`\n                : \"\"}\n              <span\n                class=\"mdc-line-ripple ${this._drag\n                  ? \"mdc-line-ripple--active\"\n                  : \"\"}\"\n              ></span>\n            </label>\n          `}\n    `;\n  }\n\n  private _openFilePicker() {\n    this._input?.click();\n  }\n\n  private _handleDrop(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (ev.dataTransfer?.files) {\n      fireEvent(this, \"file-picked\", { files: ev.dataTransfer.files });\n    }\n    this._drag = false;\n  }\n\n  private _handleDragStart(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = true;\n  }\n\n  private _handleDragEnd(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = false;\n  }\n\n  private _handleFilePicked(ev) {\n    fireEvent(this, \"file-picked\", { files: ev.target.files });\n  }\n\n  private _clearValue(ev: Event) {\n    ev.preventDefault();\n    this.value = null;\n    fireEvent(this, \"change\");\n  }\n\n  static get styles() {\n    return [\n      styles,\n      css`\n        :host {\n          display: block;\n        }\n        .mdc-text-field--filled {\n          height: auto;\n          padding-top: 16px;\n          cursor: pointer;\n        }\n        .mdc-text-field--filled.mdc-text-field--with-trailing-icon {\n          padding-top: 28px;\n        }\n        .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon {\n          color: var(--secondary-text-color);\n        }\n        .mdc-text-field--filled.mdc-text-field--with-trailing-icon\n          .mdc-text-field__icon {\n          align-self: flex-end;\n        }\n        .mdc-text-field__icon--leading {\n          margin-bottom: 12px;\n          inset-inline-start: initial;\n          inset-inline-end: 0px;\n          direction: var(--direction);\n        }\n        .mdc-text-field--filled .mdc-floating-label--float-above {\n          transform: scale(0.75);\n          top: 8px;\n        }\n        .mdc-floating-label {\n          inset-inline-start: 16px !important;\n          inset-inline-end: initial !important;\n          direction: var(--direction);\n        }\n        .mdc-text-field--filled .mdc-floating-label {\n          inset-inline-start: 48px !important;\n          inset-inline-end: initial !important;\n          direction: var(--direction);\n        }\n        .dragged:before {\n          position: var(--layout-fit_-_position);\n          top: var(--layout-fit_-_top);\n          right: var(--layout-fit_-_right);\n          bottom: var(--layout-fit_-_bottom);\n          left: var(--layout-fit_-_left);\n          background: currentColor;\n          content: \"\";\n          opacity: var(--dark-divider-opacity);\n          pointer-events: none;\n          border-radius: 4px;\n        }\n        .value {\n          width: 100%;\n        }\n        input.file {\n          display: none;\n        }\n        img {\n          max-width: 100%;\n          max-height: 125px;\n        }\n        ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          --mdc-icon-size: 20px;\n        }\n        ha-circular-progress {\n          display: block;\n          text-align-last: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-file-upload\": HaFileUpload;\n  }\n}\n"],"names":[],"sourceRoot":""}