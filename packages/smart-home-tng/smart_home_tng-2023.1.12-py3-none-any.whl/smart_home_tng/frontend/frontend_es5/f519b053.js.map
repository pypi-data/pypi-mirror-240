{"version":3,"file":"f519b053.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAybA;;AClZA;;AAIA;;;AAGA;AAEA;;AAGA;;AAEA;;;;AAKA;;;AAIA;;AAGA;;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;;ACtCA;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+CA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/iron-flex-layout/iron-flex-layout-classes.js","webpack://home-assistant-frontend/./src/components/ha-attributes.ts","webpack://home-assistant-frontend/./src/components/ha-labeled-slider.js","webpack://home-assistant-frontend/./src/components/ha-select.ts","webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-fan.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nA set of layout classes that let you specify layout properties directly in\nmarkup. You must include this file in every element that needs to use them.\n\nSample use:\n\n    import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\n\n    const template = html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\"></style>\n      <style>\n        .test { width: 100px; }\n      </style>\n      <div class=\"layout horizontal center-center\">\n        <div class=\"test\">horizontal layout center alignment</div>\n      </div>\n    `;\n    document.body.appendChild(template.content);\n\nThe following imports are available:\n - iron-flex\n - iron-flex-reverse\n - iron-flex-alignment\n - iron-flex-factors\n - iron-positioning\n*/\n\nconst template = html`\n/* Most common used flex styles*/\n<dom-module id=\"iron-flex\">\n  <template>\n    <style>\n      .layout.horizontal,\n      .layout.vertical {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      }\n\n      .layout.inline {\n        display: -ms-inline-flexbox;\n        display: -webkit-inline-flex;\n        display: inline-flex;\n      }\n\n      .layout.horizontal {\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      }\n\n      .layout.vertical {\n        -ms-flex-direction: column;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n      }\n\n      .layout.wrap {\n        -ms-flex-wrap: wrap;\n        -webkit-flex-wrap: wrap;\n        flex-wrap: wrap;\n      }\n\n      .layout.no-wrap {\n        -ms-flex-wrap: nowrap;\n        -webkit-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n      }\n\n      .layout.center,\n      .layout.center-center {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      }\n\n      .layout.center-justified,\n      .layout.center-center {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      }\n\n      .flex {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      }\n\n      .flex-auto {\n        -ms-flex: 1 1 auto;\n        -webkit-flex: 1 1 auto;\n        flex: 1 1 auto;\n      }\n\n      .flex-none {\n        -ms-flex: none;\n        -webkit-flex: none;\n        flex: none;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Basic flexbox reverse styles */\n<dom-module id=\"iron-flex-reverse\">\n  <template>\n    <style>\n      .layout.horizontal-reverse,\n      .layout.vertical-reverse {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      }\n\n      .layout.horizontal-reverse {\n        -ms-flex-direction: row-reverse;\n        -webkit-flex-direction: row-reverse;\n        flex-direction: row-reverse;\n      }\n\n      .layout.vertical-reverse {\n        -ms-flex-direction: column-reverse;\n        -webkit-flex-direction: column-reverse;\n        flex-direction: column-reverse;\n      }\n\n      .layout.wrap-reverse {\n        -ms-flex-wrap: wrap-reverse;\n        -webkit-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Flexbox alignment */\n<dom-module id=\"iron-flex-alignment\">\n  <template>\n    <style>\n      /**\n       * Alignment in cross axis.\n       */\n      .layout.start {\n        -ms-flex-align: start;\n        -webkit-align-items: flex-start;\n        align-items: flex-start;\n      }\n\n      .layout.center,\n      .layout.center-center {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      }\n\n      .layout.end {\n        -ms-flex-align: end;\n        -webkit-align-items: flex-end;\n        align-items: flex-end;\n      }\n\n      .layout.baseline {\n        -ms-flex-align: baseline;\n        -webkit-align-items: baseline;\n        align-items: baseline;\n      }\n\n      /**\n       * Alignment in main axis.\n       */\n      .layout.start-justified {\n        -ms-flex-pack: start;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      }\n\n      .layout.center-justified,\n      .layout.center-center {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      }\n\n      .layout.end-justified {\n        -ms-flex-pack: end;\n        -webkit-justify-content: flex-end;\n        justify-content: flex-end;\n      }\n\n      .layout.around-justified {\n        -ms-flex-pack: distribute;\n        -webkit-justify-content: space-around;\n        justify-content: space-around;\n      }\n\n      .layout.justified {\n        -ms-flex-pack: justify;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n      }\n\n      /**\n       * Self alignment.\n       */\n      .self-start {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      }\n\n      .self-center {\n        -ms-align-self: center;\n        -webkit-align-self: center;\n        align-self: center;\n      }\n\n      .self-end {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      }\n\n      .self-stretch {\n        -ms-align-self: stretch;\n        -webkit-align-self: stretch;\n        align-self: stretch;\n      }\n\n      .self-baseline {\n        -ms-align-self: baseline;\n        -webkit-align-self: baseline;\n        align-self: baseline;\n      }\n\n      /**\n       * multi-line alignment in main axis.\n       */\n      .layout.start-aligned {\n        -ms-flex-line-pack: start;  /* IE10 */\n        -ms-align-content: flex-start;\n        -webkit-align-content: flex-start;\n        align-content: flex-start;\n      }\n\n      .layout.end-aligned {\n        -ms-flex-line-pack: end;  /* IE10 */\n        -ms-align-content: flex-end;\n        -webkit-align-content: flex-end;\n        align-content: flex-end;\n      }\n\n      .layout.center-aligned {\n        -ms-flex-line-pack: center;  /* IE10 */\n        -ms-align-content: center;\n        -webkit-align-content: center;\n        align-content: center;\n      }\n\n      .layout.between-aligned {\n        -ms-flex-line-pack: justify;  /* IE10 */\n        -ms-align-content: space-between;\n        -webkit-align-content: space-between;\n        align-content: space-between;\n      }\n\n      .layout.around-aligned {\n        -ms-flex-line-pack: distribute;  /* IE10 */\n        -ms-align-content: space-around;\n        -webkit-align-content: space-around;\n        align-content: space-around;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Non-flexbox positioning helper styles */\n<dom-module id=\"iron-flex-factors\">\n  <template>\n    <style>\n      .flex,\n      .flex-1 {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      }\n\n      .flex-2 {\n        -ms-flex: 2;\n        -webkit-flex: 2;\n        flex: 2;\n      }\n\n      .flex-3 {\n        -ms-flex: 3;\n        -webkit-flex: 3;\n        flex: 3;\n      }\n\n      .flex-4 {\n        -ms-flex: 4;\n        -webkit-flex: 4;\n        flex: 4;\n      }\n\n      .flex-5 {\n        -ms-flex: 5;\n        -webkit-flex: 5;\n        flex: 5;\n      }\n\n      .flex-6 {\n        -ms-flex: 6;\n        -webkit-flex: 6;\n        flex: 6;\n      }\n\n      .flex-7 {\n        -ms-flex: 7;\n        -webkit-flex: 7;\n        flex: 7;\n      }\n\n      .flex-8 {\n        -ms-flex: 8;\n        -webkit-flex: 8;\n        flex: 8;\n      }\n\n      .flex-9 {\n        -ms-flex: 9;\n        -webkit-flex: 9;\n        flex: 9;\n      }\n\n      .flex-10 {\n        -ms-flex: 10;\n        -webkit-flex: 10;\n        flex: 10;\n      }\n\n      .flex-11 {\n        -ms-flex: 11;\n        -webkit-flex: 11;\n        flex: 11;\n      }\n\n      .flex-12 {\n        -ms-flex: 12;\n        -webkit-flex: 12;\n        flex: 12;\n      }\n    </style>\n  </template>\n</dom-module>\n<dom-module id=\"iron-positioning\">\n  <template>\n    <style>\n      .block {\n        display: block;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      .invisible {\n        visibility: hidden !important;\n      }\n\n      .relative {\n        position: relative;\n      }\n\n      .fit {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      body.fullbleed {\n        margin: 0;\n        height: 100vh;\n      }\n\n      .scroll {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n      }\n\n      /* fixed position */\n      .fixed-bottom,\n      .fixed-left,\n      .fixed-right,\n      .fixed-top {\n        position: fixed;\n      }\n\n      .fixed-top {\n        top: 0;\n        left: 0;\n        right: 0;\n      }\n\n      .fixed-right {\n        top: 0;\n        right: 0;\n        bottom: 0;\n      }\n\n      .fixed-bottom {\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      .fixed-left {\n        top: 0;\n        bottom: 0;\n        left: 0;\n      }\n    </style>\n  </template>\n</dom-module>\n`;\ntemplate.setAttribute('style', 'display: none;');\ndocument.head.appendChild(template.content);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport {\n  formatAttributeName,\n  formatAttributeValue,\n  STATE_ATTRIBUTES,\n} from \"../data/entity_attributes\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\n\nimport \"./ha-expansion-panel\";\n\n@customElement(\"ha-attributes\")\nclass HaAttributes extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: HassEntity;\n\n  @property({ attribute: \"extra-filters\" }) public extraFilters?: string;\n\n  @state() private _expanded = false;\n\n  protected render(): TemplateResult {\n    if (!this.stateObj) {\n      return html``;\n    }\n\n    const attributes = this.computeDisplayAttributes(\n      STATE_ATTRIBUTES.concat(\n        this.extraFilters ? this.extraFilters.split(\",\") : []\n      )\n    );\n    if (attributes.length === 0) {\n      return html``;\n    }\n\n    return html`\n      <ha-expansion-panel\n        .header=${this.hass.localize(\n          \"ui.components.attributes.expansion_header\"\n        )}\n        outlined\n        @expanded-will-change=${this.expandedChanged}\n      >\n        <div class=\"attribute-container\">\n          ${this._expanded\n            ? html`\n                ${attributes.map(\n                  (attribute) => html`\n                    <div class=\"data-entry\">\n                      <div class=\"key\">${formatAttributeName(attribute)}</div>\n                      <div class=\"value\">\n                        ${this.formatAttribute(attribute)}\n                      </div>\n                    </div>\n                  `\n                )}\n              `\n            : \"\"}\n        </div>\n      </ha-expansion-panel>\n      ${this.stateObj.attributes.attribution\n        ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .attribute-container {\n          margin-bottom: 8px;\n          direction: ltr;\n        }\n        .data-entry {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n        }\n        .data-entry .value {\n          max-width: 60%;\n          overflow-wrap: break-word;\n          text-align: right;\n        }\n        .key {\n          flex-grow: 1;\n        }\n        .attribution {\n          color: var(--secondary-text-color);\n          text-align: center;\n          margin-top: 16px;\n        }\n        pre {\n          font-family: inherit;\n          font-size: inherit;\n          margin: 0px;\n          overflow-wrap: break-word;\n          white-space: pre-line;\n        }\n        hr {\n          border-color: var(--divider-color);\n          border-bottom: none;\n          margin: 16px 0;\n        }\n      `,\n    ];\n  }\n\n  private computeDisplayAttributes(filtersArray: string[]): string[] {\n    if (!this.stateObj) {\n      return [];\n    }\n    return Object.keys(this.stateObj.attributes).filter(\n      (key) => filtersArray.indexOf(key) === -1\n    );\n  }\n\n  private formatAttribute(attribute: string): string | TemplateResult {\n    if (!this.stateObj) {\n      return \"—\";\n    }\n    const value = this.stateObj.attributes[attribute];\n    return formatAttributeValue(this.hass, value);\n  }\n\n  private expandedChanged(ev) {\n    this._expanded = ev.detail.expanded;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-attributes\": HaAttributes;\n  }\n}\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"./ha-icon\";\nimport \"./ha-slider\";\n\nclass HaLabeledSlider extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        .title {\n          margin: 5px 0 8px;\n          color: var(--primary-text-color);\n        }\n\n        .slider-container {\n          display: flex;\n        }\n\n        ha-icon {\n          margin-top: 4px;\n          color: var(--secondary-text-color);\n        }\n\n        ha-slider {\n          flex-grow: 1;\n          background-image: var(--ha-slider-background);\n          border-radius: 4px;\n        }\n      </style>\n\n      <div class=\"title\">[[_getTitle()]]</div>\n      <div class=\"extra-container\"><slot name=\"extra\"></slot></div>\n      <div class=\"slider-container\">\n        <ha-icon icon=\"[[icon]]\" hidden$=\"[[!icon]]\"></ha-icon>\n        <ha-slider\n          min=\"[[min]]\"\n          max=\"[[max]]\"\n          step=\"[[step]]\"\n          pin=\"[[pin]]\"\n          disabled=\"[[disabled]]\"\n          value=\"{{value}}\"\n        ></ha-slider>\n      </div>\n      <template is=\"dom-if\" if=\"[[helper]]\">\n        <ha-input-helper-text>[[helper]]</ha-input-helper-text>\n      </template>\n    `;\n  }\n\n  _getTitle() {\n    return `${this.caption}${this.caption && this.required ? \" *\" : \"\"}`;\n  }\n\n  static get properties() {\n    return {\n      caption: String,\n      disabled: Boolean,\n      required: Boolean,\n      min: Number,\n      max: Number,\n      pin: Boolean,\n      step: Number,\n      helper: String,\n\n      extra: {\n        type: Boolean,\n        value: false,\n      },\n      ignoreBarTouch: {\n        type: Boolean,\n        value: true,\n      },\n      icon: {\n        type: String,\n        value: \"\",\n      },\n      value: {\n        type: Number,\n        notify: true,\n      },\n    };\n  }\n}\n\ncustomElements.define(\"ha-labeled-slider\", HaLabeledSlider);\n","import { SelectBase } from \"@material/mwc-select/mwc-select-base\";\nimport { styles } from \"@material/mwc-select/mwc-select.css\";\nimport { css, html, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { debounce } from \"../common/util/debounce\";\nimport { nextRender } from \"../common/util/render-status\";\n\n@customElement(\"ha-select\")\nexport class HaSelect extends SelectBase {\n  // @ts-ignore\n  @property({ type: Boolean }) public icon?: boolean;\n\n  protected override renderLeadingIcon() {\n    if (!this.icon) {\n      return nothing;\n    }\n\n    return html`<span class=\"mdc-select__icon\"\n      ><slot name=\"icon\"></slot\n    ></span>`;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"translations-updated\", this._translationsUpdated);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\n      \"translations-updated\",\n      this._translationsUpdated\n    );\n  }\n\n  private _translationsUpdated = debounce(async () => {\n    await nextRender();\n    this.layoutOptions();\n  }, 500);\n\n  static override styles = [\n    styles,\n    css`\n      .mdc-select:not(.mdc-select--disabled) .mdc-select__icon {\n        color: var(--secondary-text-color);\n      }\n      .mdc-select__anchor {\n        width: var(--ha-select-min-width, 200px);\n      }\n      .mdc-select--filled .mdc-floating-label {\n        inset-inline-start: 12px;\n        inset-inline-end: initial;\n        direction: var(--direction);\n      }\n      .mdc-select--filled.mdc-select--with-leading-icon .mdc-floating-label {\n        inset-inline-start: 48px;\n        inset-inline-end: initial;\n        direction: var(--direction);\n      }\n      .mdc-select .mdc-select__anchor {\n        padding-inline-start: 12px;\n        padding-inline-end: 0px;\n        direction: var(--direction);\n      }\n      .mdc-select__anchor .mdc-floating-label--float-above {\n        transform-origin: var(--float-start);\n      }\n    `,\n  ];\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-select\": HaSelect;\n  }\n}\n","import \"@material/mwc-list/mwc-list-item\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { attributeClassNames } from \"../../../common/entity/attribute_class_names\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-attributes\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-labeled-slider\";\nimport \"../../../components/ha-select\";\nimport \"../../../components/ha-switch\";\nimport { SUPPORT_SET_SPEED } from \"../../../data/fan\";\nimport { EventsMixin } from \"../../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass MoreInfoFan extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex\"></style>\n      <style>\n        .container-preset_modes,\n        .container-direction,\n        .container-percentage,\n        .container-oscillating {\n          display: none;\n        }\n\n        .has-percentage .container-percentage,\n        .has-preset_modes .container-preset_modes,\n        .has-direction .container-direction,\n        .has-oscillating .container-oscillating {\n          display: block;\n          margin-top: 8px;\n        }\n\n        ha-select {\n          width: 100%;\n        }\n      </style>\n\n      <div class$=\"[[computeClassNames(stateObj)]]\">\n        <div class=\"container-percentage\">\n          <ha-labeled-slider\n            caption=\"[[localize('ui.card.fan.speed')]]\"\n            min=\"0\"\n            max=\"100\"\n            step=\"[[computePercentageStepSize(stateObj)]]\"\n            value=\"{{percentageSliderValue}}\"\n            on-change=\"percentageChanged\"\n            pin=\"\"\n            extra=\"\"\n          ></ha-labeled-slider>\n        </div>\n\n        <div class=\"container-preset_modes\">\n          <ha-select\n            label=\"[[localize('ui.card.fan.preset_mode')]]\"\n            value=\"[[stateObj.attributes.preset_mode]]\"\n            on-selected=\"presetModeChanged\"\n            fixedMenuPosition\n            naturalMenuWidth\n            on-closed=\"stopPropagation\"\n          >\n            <template\n              is=\"dom-repeat\"\n              items=\"[[stateObj.attributes.preset_modes]]\"\n            >\n              <mwc-list-item value=\"[[item]]\">[[item]]</mwc-list-item>\n            </template>\n          </ha-select>\n        </div>\n\n        <div class=\"container-oscillating\">\n          <div class=\"center horizontal layout single-row\">\n            <div class=\"flex\">[[localize('ui.card.fan.oscillate')]]</div>\n            <ha-switch\n              checked=\"[[oscillationToggleChecked]]\"\n              on-change=\"oscillationToggleChanged\"\n            >\n            </ha-switch>\n          </div>\n        </div>\n\n        <div class=\"container-direction\">\n          <div class=\"direction\">\n            <div>[[localize('ui.card.fan.direction')]]</div>\n            <ha-icon-button\n              on-click=\"onDirectionReverse\"\n              title=\"[[localize('ui.card.fan.reverse')]]\"\n              disabled=\"[[computeIsRotatingReverse(stateObj)]]\"\n            >\n              <ha-icon icon=\"hass:rotate-left\"></ha-icon>\n            </ha-icon-button>\n            <ha-icon-button\n              on-click=\"onDirectionForward\"\n              title=\"[[localize('ui.card.fan.forward')]]\"\n              disabled=\"[[computeIsRotatingForward(stateObj)]]\"\n            >\n              <ha-icon icon=\"hass:rotate-right\"></ha-icon>\n            </ha-icon-button>\n          </div>\n        </div>\n      </div>\n\n      <ha-attributes\n        hass=\"[[hass]]\"\n        state-obj=\"[[stateObj]]\"\n        extra-filters=\"percentage_step,speed,preset_mode,preset_modes,speed_list,percentage,oscillating,direction\"\n      ></ha-attributes>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      stateObj: {\n        type: Object,\n        observer: \"stateObjChanged\",\n      },\n\n      oscillationToggleChecked: {\n        type: Boolean,\n      },\n\n      percentageSliderValue: {\n        type: Number,\n      },\n    };\n  }\n\n  stateObjChanged(newVal, oldVal) {\n    if (newVal) {\n      this.setProperties({\n        oscillationToggleChecked: newVal.attributes.oscillating,\n        percentageSliderValue: newVal.attributes.percentage,\n      });\n    }\n\n    if (oldVal) {\n      setTimeout(() => {\n        this.fire(\"iron-resize\");\n      }, 500);\n    }\n  }\n\n  computePercentageStepSize(stateObj) {\n    if (stateObj.attributes.percentage_step) {\n      return stateObj.attributes.percentage_step;\n    }\n    return 1;\n  }\n\n  computeClassNames(stateObj) {\n    return (\n      \"more-info-fan \" +\n      (supportsFeature(stateObj, SUPPORT_SET_SPEED) ? \"has-percentage \" : \"\") +\n      (stateObj.attributes.preset_modes &&\n      stateObj.attributes.preset_modes.length\n        ? \"has-preset_modes \"\n        : \"\") +\n      attributeClassNames(stateObj, [\"oscillating\", \"direction\"])\n    );\n  }\n\n  presetModeChanged(ev) {\n    const oldVal = this.stateObj.attributes.preset_mode;\n    const newVal = ev.target.value;\n\n    if (!newVal || oldVal === newVal) return;\n\n    this.hass.callService(\"fan\", \"set_preset_mode\", {\n      entity_id: this.stateObj.entity_id,\n      preset_mode: newVal,\n    });\n  }\n\n  stopPropagation(ev) {\n    ev.stopPropagation();\n  }\n\n  percentageChanged(ev) {\n    const oldVal = parseInt(this.stateObj.attributes.percentage, 10);\n    const newVal = ev.target.value;\n\n    if (isNaN(newVal) || oldVal === newVal) return;\n\n    this.hass.callService(\"fan\", \"set_percentage\", {\n      entity_id: this.stateObj.entity_id,\n      percentage: newVal,\n    });\n  }\n\n  oscillationToggleChanged(ev) {\n    const oldVal = this.stateObj.attributes.oscillating;\n    const newVal = ev.target.checked;\n\n    if (oldVal === newVal) return;\n\n    this.hass.callService(\"fan\", \"oscillate\", {\n      entity_id: this.stateObj.entity_id,\n      oscillating: newVal,\n    });\n  }\n\n  onDirectionReverse() {\n    this.hass.callService(\"fan\", \"set_direction\", {\n      entity_id: this.stateObj.entity_id,\n      direction: \"reverse\",\n    });\n  }\n\n  onDirectionForward() {\n    this.hass.callService(\"fan\", \"set_direction\", {\n      entity_id: this.stateObj.entity_id,\n      direction: \"forward\",\n    });\n  }\n\n  computeIsRotatingReverse(stateObj) {\n    return stateObj.attributes.direction === \"reverse\";\n  }\n\n  computeIsRotatingForward(stateObj) {\n    return stateObj.attributes.direction === \"forward\";\n  }\n}\n\ncustomElements.define(\"more-info-fan\", MoreInfoFan);\n"],"names":[],"sourceRoot":""}