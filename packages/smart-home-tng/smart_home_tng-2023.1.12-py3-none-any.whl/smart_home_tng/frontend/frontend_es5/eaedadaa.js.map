{"version":3,"file":"eaedadaa.js","mappings":";;AAqHA;AACA;;;;AAIA;AACA;AACA;;;;;;;AApBA;;AAEA;;AANA;;;;;;;;;;;;;;;;;;;;AA0DA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/cards/hui-logbook-card.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport \"../../../components/ha-card\";\nimport type { HomeAssistant } from \"../../../types\";\nimport \"../../logbook/ha-logbook\";\nimport type { HaLogbook } from \"../../logbook/ha-logbook\";\nimport { findEntities } from \"../common/find-entities\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-warning\";\nimport type { EntityConfig } from \"../entity-rows/types\";\nimport type { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport type { LogbookCardConfig } from \"./types\";\n\n@customElement(\"hui-logbook-card\")\nexport class HuiLogbookCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-logbook-card-editor\");\n    return document.createElement(\"hui-logbook-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFill: string[]\n  ) {\n    const includeDomains = [\"light\", \"switch\"];\n    const maxEntities = 3;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFill,\n      includeDomains\n    );\n\n    return {\n      entities: foundEntities,\n    };\n  }\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: LogbookCardConfig;\n\n  @state() private _time?: HaLogbook[\"time\"];\n\n  @state() private _entityId?: string[];\n\n  public getCardSize(): number {\n    return 9 + (this._config?.title ? 1 : 0);\n  }\n\n  public setConfig(config: LogbookCardConfig): void {\n    if (!config.entities.length) {\n      throw new Error(\"Entities must be specified\");\n    }\n\n    this._config = {\n      hours_to_show: 24,\n      ...config,\n    };\n    this._time = {\n      recent: this._config!.hours_to_show! * 60 * 60,\n    };\n    this._entityId = processConfigEntities<EntityConfig>(config.entities).map(\n      (entity) => entity.entity\n    );\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const configChanged = changedProperties.has(\"_config\");\n    const hassChanged = changedProperties.has(\"hass\");\n    const oldHass = changedProperties.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProperties.get(\"_config\") as LogbookCardConfig;\n\n    if (\n      (hassChanged && oldHass?.themes !== this.hass.themes) ||\n      (configChanged && oldConfig?.theme !== this._config.theme)\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    if (!isComponentLoaded(this.hass, \"logbook\")) {\n      return html`\n        <hui-warning>\n          ${this.hass.localize(\n            \"ui.components.logbook.not_loaded\",\n            \"platform\",\n            \"logbook\"\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <ha-card\n        .header=${this._config!.title}\n        class=${classMap({ \"no-header\": !this._config!.title })}\n      >\n        <div class=\"content\">\n          <ha-logbook\n            .hass=${this.hass}\n            .time=${this._time}\n            .entityIds=${this._entityId}\n            narrow\n            relative-time\n            virtualize\n          ></ha-logbook>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        ha-card {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n\n        .content {\n          padding: 0 16px 16px;\n        }\n\n        .no-header .content {\n          padding-top: 16px;\n        }\n\n        ha-logbook {\n          height: 385px;\n          display: block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-logbook-card\": HuiLogbookCard;\n  }\n}\n"],"names":[],"sourceRoot":""}