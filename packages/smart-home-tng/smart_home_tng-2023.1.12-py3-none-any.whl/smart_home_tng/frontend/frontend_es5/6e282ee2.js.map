{"version":3,"file":"6e282ee2.js","mappings":";AAyIA;;;;;;;;;;;;AAcA;;AAIA;;;;;AAMA;;AAIA;;;;;AAMA;AAGA;;;;;;AAQA;;AAIA;;;;;AAMA;AAGA;;;;AAKA;;;;AA6BA;;;;AAOA;;AAMA;;;AAIA;;AAEA;;;;AAOA;;AAEA;AAGA;AAEA;;;;;AAMA;;;AAIA;;;AAGA;;;;AAOA;;AAEA;AAGA;AAEA;;;;AAgDA;;;;AAOA;;AAMA;;;AAIA;;;AAGA;;;;AAOA;;AAEA;;;;;;AAQA;;;;AAOA;;AAMA;;;AAIA;;;AAMA;;;;AAOA;;AAEA;AAGA;AAEA;;;AAIA;;AAIA;;;AAIA;;;AAMA;;;;AAOA;;AAEA;AAGA;AAEA;;;;AAoDA;;;;AAOA;;AAMA;;;AAIA;;AAEA;;;AAIA;AAUA;;;;AAMA;;AAEA;;;AAIA;AAMA;AAEA;AAEA;;;;AAkDA;;;;AAOA;;AAMA;;;AAIA;;AAEA;;;AAIA;AAUA;;;;AAMA;;AAEA;;;AAIA;AAMA;AAEA;AAGA;;;AAIA;;AAIA;;;AAIA;;;AAGA;;;AAIA;AAQA;;;;AAMA;;AAEA;;;AAIA;AAIA;AAEA;AAEA;;;;AAkDA;;;;AAOA;;AAMA;;;AAIA;AACA;;AAEA;;;AAIA;AAMA;;;;AAMA;;AAEA;;;AAIA;AAMA;AAEA;AAEA;;;AAIA;;AAIA;;;AAIA;AACA;;AAEA;;;AAIA;AAQA;;;;AAMA;;AAEA;;;AAIA;AAIA;AAEA;AAEA;;;AAIA;;AAIA;;;;AAOA;AAQA;;;;;AAMA;;AASA;;;;;AAOA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/cards/energy/hui-energy-sources-table-card.ts"],"sourcesContent":["// @ts-ignore\nimport dataTableStyles from \"@material/data-table/dist/mdc.data-table.min.css\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  TemplateResult,\n  unsafeCSS,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport {\n  rgb2hex,\n  lab2rgb,\n  rgb2lab,\n  hex2rgb,\n} from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/ha-card\";\nimport {\n  EnergyData,\n  energySourcesByType,\n  getEnergyDataCollection,\n  getEnergyGasUnit,\n} from \"../../../../data/energy\";\nimport {\n  calculateStatisticSumGrowth,\n  getStatisticLabel,\n} from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCard } from \"../../types\";\nimport { EnergySourcesTableCardConfig } from \"../types\";\n\n@customElement(\"hui-energy-sources-table-card\")\nexport class HuiEnergySourcesTableCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: EnergySourcesTableCardConfig;\n\n  @state() private _data?: EnergyData;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => {\n        this._data = data;\n      }),\n    ];\n  }\n\n  public getCardSize(): Promise<number> | number {\n    return 3;\n  }\n\n  public setConfig(config: EnergySourcesTableCardConfig): void {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    if (!this._data) {\n      return html`${this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.loading\"\n      )}`;\n    }\n\n    let totalGrid = 0;\n    let totalGridCost = 0;\n    let totalSolar = 0;\n    let totalBattery = 0;\n    let totalGas = 0;\n    let totalGasCost = 0;\n\n    let totalGridCompare = 0;\n    let totalGridCostCompare = 0;\n    let totalSolarCompare = 0;\n    let totalBatteryCompare = 0;\n    let totalGasCompare = 0;\n    let totalGasCostCompare = 0;\n\n    const types = energySourcesByType(this._data.prefs);\n\n    const computedStyles = getComputedStyle(this);\n    const solarColor = computedStyles\n      .getPropertyValue(\"--energy-solar-color\")\n      .trim();\n    const batteryFromColor = computedStyles\n      .getPropertyValue(\"--energy-battery-out-color\")\n      .trim();\n    const batteryToColor = computedStyles\n      .getPropertyValue(\"--energy-battery-in-color\")\n      .trim();\n    const returnColor = computedStyles\n      .getPropertyValue(\"--energy-grid-return-color\")\n      .trim();\n    const consumptionColor = computedStyles\n      .getPropertyValue(\"--energy-grid-consumption-color\")\n      .trim();\n    const gasColor = computedStyles\n      .getPropertyValue(\"--energy-gas-color\")\n      .trim();\n\n    const showCosts =\n      types.grid?.[0].flow_from.some(\n        (flow) =>\n          flow.stat_cost || flow.entity_energy_price || flow.number_energy_price\n      ) ||\n      types.grid?.[0].flow_to.some(\n        (flow) =>\n          flow.stat_compensation ||\n          flow.entity_energy_price ||\n          flow.number_energy_price\n      ) ||\n      types.gas?.some(\n        (flow) =>\n          flow.stat_cost || flow.entity_energy_price || flow.number_energy_price\n      );\n\n    const gasUnit =\n      getEnergyGasUnit(this._data.prefs, this._data.statsMetadata) || \"\";\n\n    const compare = this._data.statsCompare !== undefined;\n\n    return html` <ha-card>\n      ${this._config.title\n        ? html`<h1 class=\"card-header\">${this._config.title}</h1>`\n        : \"\"}\n      <div class=\"mdc-data-table\">\n        <div class=\"mdc-data-table__table-container\">\n          <table class=\"mdc-data-table__table\" aria-label=\"Energy sources\">\n            <thead>\n              <tr class=\"mdc-data-table__header-row\">\n                <th class=\"mdc-data-table__header-cell\"></th>\n                <th\n                  class=\"mdc-data-table__header-cell\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_sources_table.source\"\n                  )}\n                </th>\n                ${compare\n                  ? html`<th\n                        class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                        role=\"columnheader\"\n                        scope=\"col\"\n                      >\n                        ${this.hass.localize(\n                          \"ui.panel.lovelace.cards.energy.energy_sources_table.previous_energy\"\n                        )}\n                      </th>\n                      ${showCosts\n                        ? html`<th\n                            class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                            role=\"columnheader\"\n                            scope=\"col\"\n                          >\n                            ${this.hass.localize(\n                              \"ui.panel.lovelace.cards.energy.energy_sources_table.previous_cost\"\n                            )}\n                          </th>`\n                        : \"\"}`\n                  : \"\"}\n                <th\n                  class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_sources_table.energy\"\n                  )}\n                </th>\n                ${showCosts\n                  ? html` <th\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                      role=\"columnheader\"\n                      scope=\"col\"\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.cost\"\n                      )}\n                    </th>`\n                  : \"\"}\n              </tr>\n            </thead>\n            <tbody class=\"mdc-data-table__content\">\n              ${types.solar?.map((source, idx) => {\n                const energy =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                totalSolar += energy;\n\n                const compareEnergy =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                totalSolarCompare += compareEnergy;\n\n                const modifiedColor =\n                  idx > 0\n                    ? this.hass.themes.darkMode\n                      ? labBrighten(rgb2lab(hex2rgb(solarColor)), idx)\n                      : labDarken(rgb2lab(hex2rgb(solarColor)), idx)\n                    : undefined;\n                const color = modifiedColor\n                  ? rgb2hex(lab2rgb(modifiedColor))\n                  : solarColor;\n\n                return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        borderColor: color,\n                        backgroundColor: color + \"7F\",\n                      })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(\n                      this.hass,\n                      source.stat_energy_from,\n                      this._data?.statsMetadata[source.stat_energy_from]\n                    )}\n                  </th>\n                  ${compare\n                    ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(compareEnergy, this.hass.locale)} kWh\n                        </td>\n                        ${showCosts\n                          ? html`<td class=\"mdc-data-table__cell\"></td>`\n                          : \"\"}`\n                    : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} kWh\n                  </td>\n                  ${showCosts\n                    ? html`<td class=\"mdc-data-table__cell\"></td>`\n                    : \"\"}\n                </tr>`;\n              })}\n              ${types.solar\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      Solar total\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalSolarCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalSolar, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.battery?.map((source, idx) => {\n                const energyFrom =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                const energyTo =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_to]\n                  ) || 0;\n                totalBattery += energyFrom - energyTo;\n\n                const energyFromCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                const energyToCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_to]\n                    )) ||\n                  0;\n                totalBatteryCompare += energyFromCompare - energyToCompare;\n\n                const modifiedFromColor =\n                  idx > 0\n                    ? this.hass.themes.darkMode\n                      ? labBrighten(rgb2lab(hex2rgb(batteryFromColor)), idx)\n                      : labDarken(rgb2lab(hex2rgb(batteryFromColor)), idx)\n                    : undefined;\n                const fromColor = modifiedFromColor\n                  ? rgb2hex(lab2rgb(modifiedFromColor))\n                  : batteryFromColor;\n                const modifiedToColor =\n                  idx > 0\n                    ? this.hass.themes.darkMode\n                      ? labBrighten(rgb2lab(hex2rgb(batteryToColor)), idx)\n                      : labDarken(rgb2lab(hex2rgb(batteryToColor)), idx)\n                    : undefined;\n                const toColor = modifiedToColor\n                  ? rgb2hex(lab2rgb(modifiedToColor))\n                  : batteryToColor;\n\n                return html`<tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: fromColor,\n                          backgroundColor: fromColor + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        source.stat_energy_from,\n                        this._data?.statsMetadata[source.stat_energy_from]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(energyFromCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyFrom, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>\n                  <tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: toColor,\n                          backgroundColor: toColor + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        source.stat_energy_to,\n                        this._data?.statsMetadata[source.stat_energy_to]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              energyToCompare * -1,\n                              this.hass.locale\n                            )}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyTo * -1, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`;\n              })}\n              ${types.battery\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.battery_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              totalBatteryCompare,\n                              this.hass.locale\n                            )}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalBattery, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.grid?.map(\n                (source) => html`${source.flow_from.map((flow, idx) => {\n                  const energy =\n                    calculateStatisticSumGrowth(\n                      this._data!.stats[flow.stat_energy_from]\n                    ) || 0;\n                  totalGrid += energy;\n\n                  const compareEnergy =\n                    (compare &&\n                      calculateStatisticSumGrowth(\n                        this._data!.statsCompare[flow.stat_energy_from]\n                      )) ||\n                    0;\n                  totalGridCompare += compareEnergy;\n\n                  const cost_stat =\n                    flow.stat_cost ||\n                    this._data!.info.cost_sensors[flow.stat_energy_from];\n                  const cost = cost_stat\n                    ? calculateStatisticSumGrowth(\n                        this._data!.stats[cost_stat]\n                      ) || 0\n                    : null;\n                  if (cost !== null) {\n                    totalGridCost += cost;\n                  }\n\n                  const costCompare =\n                    compare && cost_stat\n                      ? calculateStatisticSumGrowth(\n                          this._data!.statsCompare[cost_stat]\n                        ) || 0\n                      : null;\n                  if (costCompare !== null) {\n                    totalGridCostCompare += costCompare;\n                  }\n\n                  const modifiedColor =\n                    idx > 0\n                      ? this.hass.themes.darkMode\n                        ? labBrighten(rgb2lab(hex2rgb(consumptionColor)), idx)\n                        : labDarken(rgb2lab(hex2rgb(consumptionColor)), idx)\n                      : undefined;\n                  const color = modifiedColor\n                    ? rgb2hex(lab2rgb(modifiedColor))\n                    : consumptionColor;\n\n                  return html`<tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: color,\n                          backgroundColor: color + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        flow.stat_energy_from,\n                        this._data?.statsMetadata[flow.stat_energy_from]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(compareEnergy, this.hass.locale)} kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${costCompare !== null\n                                  ? formatNumber(\n                                      costCompare,\n                                      this.hass.locale,\n                                      {\n                                        style: \"currency\",\n                                        currency: this.hass.config.currency!,\n                                      }\n                                    )\n                                  : \"\"}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energy, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${cost !== null\n                            ? formatNumber(cost, this.hass.locale, {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              })\n                            : \"\"}\n                        </td>`\n                      : \"\"}\n                  </tr>`;\n                })}\n                ${source.flow_to.map((flow, idx) => {\n                  const energy =\n                    (calculateStatisticSumGrowth(\n                      this._data!.stats[flow.stat_energy_to]\n                    ) || 0) * -1;\n                  totalGrid += energy;\n                  const cost_stat =\n                    flow.stat_compensation ||\n                    this._data!.info.cost_sensors[flow.stat_energy_to];\n                  const cost = cost_stat\n                    ? (calculateStatisticSumGrowth(\n                        this._data!.stats[cost_stat]\n                      ) || 0) * -1\n                    : null;\n                  if (cost !== null) {\n                    totalGridCost += cost;\n                  }\n\n                  const energyCompare =\n                    ((compare &&\n                      calculateStatisticSumGrowth(\n                        this._data!.statsCompare[flow.stat_energy_to]\n                      )) ||\n                      0) * -1;\n                  totalGridCompare += energyCompare;\n\n                  const costCompare =\n                    compare && cost_stat\n                      ? (calculateStatisticSumGrowth(\n                          this._data!.statsCompare[cost_stat]\n                        ) || 0) * -1\n                      : null;\n                  if (costCompare !== null) {\n                    totalGridCostCompare += costCompare;\n                  }\n\n                  const modifiedColor =\n                    idx > 0\n                      ? this.hass.themes.darkMode\n                        ? labBrighten(rgb2lab(hex2rgb(returnColor)), idx)\n                        : labDarken(rgb2lab(hex2rgb(returnColor)), idx)\n                      : undefined;\n                  const color = modifiedColor\n                    ? rgb2hex(lab2rgb(modifiedColor))\n                    : returnColor;\n\n                  return html`<tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: color,\n                          backgroundColor: color + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        flow.stat_energy_to,\n                        this._data?.statsMetadata[flow.stat_energy_to]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(energyCompare, this.hass.locale)} kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${costCompare !== null\n                                  ? formatNumber(\n                                      costCompare,\n                                      this.hass.locale,\n                                      {\n                                        style: \"currency\",\n                                        currency: this.hass.config.currency!,\n                                      }\n                                    )\n                                  : \"\"}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energy, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${cost !== null\n                            ? formatNumber(cost, this.hass.locale, {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              })\n                            : \"\"}\n                        </td>`\n                      : \"\"}\n                  </tr>`;\n                })}`\n              )}\n              ${types.grid\n                ? html` <tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.grid_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGridCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${formatNumber(\n                                  totalGridCostCompare,\n                                  this.hass.locale,\n                                  {\n                                    style: \"currency\",\n                                    currency: this.hass.config.currency!,\n                                  }\n                                )}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGrid, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(totalGridCost, this.hass.locale, {\n                            style: \"currency\",\n                            currency: this.hass.config.currency!,\n                          })}\n                        </td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.gas?.map((source, idx) => {\n                const energy =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                totalGas += energy;\n\n                const energyCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                totalGasCompare += energyCompare;\n\n                const cost_stat =\n                  source.stat_cost ||\n                  this._data!.info.cost_sensors[source.stat_energy_from];\n                const cost = cost_stat\n                  ? calculateStatisticSumGrowth(this._data!.stats[cost_stat]) ||\n                    0\n                  : null;\n                if (cost !== null) {\n                  totalGasCost += cost;\n                }\n\n                const costCompare =\n                  compare && cost_stat\n                    ? calculateStatisticSumGrowth(\n                        this._data!.statsCompare[cost_stat]\n                      ) || 0\n                    : null;\n                if (costCompare !== null) {\n                  totalGasCostCompare += costCompare;\n                }\n\n                const modifiedColor =\n                  idx > 0\n                    ? this.hass.themes.darkMode\n                      ? labBrighten(rgb2lab(hex2rgb(gasColor)), idx)\n                      : labDarken(rgb2lab(hex2rgb(gasColor)), idx)\n                    : undefined;\n                const color = modifiedColor\n                  ? rgb2hex(lab2rgb(modifiedColor))\n                  : gasColor;\n\n                return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        borderColor: color,\n                        backgroundColor: color + \"7F\",\n                      })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(\n                      this.hass,\n                      source.stat_energy_from,\n                      this._data?.statsMetadata[source.stat_energy_from]\n                    )}\n                  </th>\n                  ${compare\n                    ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(energyCompare, this.hass.locale)}\n                          ${gasUnit}\n                        </td>\n                        ${showCosts\n                          ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${costCompare !== null\n                                ? formatNumber(costCompare, this.hass.locale, {\n                                    style: \"currency\",\n                                    currency: this.hass.config.currency!,\n                                  })\n                                : \"\"}\n                            </td>`\n                          : \"\"}`\n                    : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} ${gasUnit}\n                  </td>\n                  ${showCosts\n                    ? html`<td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${cost !== null\n                          ? formatNumber(cost, this.hass.locale, {\n                              style: \"currency\",\n                              currency: this.hass.config.currency!,\n                            })\n                          : \"\"}\n                      </td>`\n                    : \"\"}\n                </tr>`;\n              })}\n              ${types.gas\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.gas_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGasCompare, this.hass.locale)}\n                            ${gasUnit}\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${formatNumber(\n                                  totalGasCostCompare,\n                                  this.hass.locale,\n                                  {\n                                    style: \"currency\",\n                                    currency: this.hass.config.currency!,\n                                  }\n                                )}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGas, this.hass.locale)} ${gasUnit}\n                    </td>\n                    ${showCosts\n                      ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(totalGasCost, this.hass.locale, {\n                            style: \"currency\",\n                            currency: this.hass.config.currency!,\n                          })}\n                        </td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${totalGasCost && totalGridCost\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.total_costs\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}\n                          <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              totalGasCostCompare + totalGridCostCompare,\n                              this.hass.locale,\n                              {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              }\n                            )}\n                          </td>`\n                      : \"\"}\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(\n                        totalGasCost + totalGridCost,\n                        this.hass.locale,\n                        {\n                          style: \"currency\",\n                          currency: this.hass.config.currency!,\n                        }\n                      )}\n                    </td>\n                  </tr>`\n                : \"\"}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </ha-card>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ${unsafeCSS(dataTableStyles)}\n      .mdc-data-table {\n        width: 100%;\n        border: 0;\n      }\n      .mdc-data-table__header-cell,\n      .mdc-data-table__cell {\n        color: var(--primary-text-color);\n        border-bottom-color: var(--divider-color);\n        text-align: var(--float-start);\n      }\n      .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n        background-color: rgba(var(--rgb-primary-text-color), 0.04);\n      }\n      .total {\n        --mdc-typography-body2-font-weight: 500;\n      }\n      .total .mdc-data-table__cell {\n        border-top: 1px solid var(--divider-color);\n      }\n      ha-card {\n        height: 100%;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .cell-bullet {\n        width: 32px;\n        padding-right: 0;\n        padding-inline-end: 0;\n        padding-inline-start: 16px;\n        direction: var(--direction);\n      }\n      .bullet {\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 4px;\n        height: 16px;\n        width: 32px;\n      }\n      .mdc-data-table__cell--numeric {\n        direction: ltr;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-sources-table-card\": HuiEnergySourcesTableCard;\n  }\n}\n"],"names":[],"sourceRoot":""}