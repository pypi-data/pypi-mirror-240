{"version":3,"file":"a7e86a94.js","mappings":";AAcA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;AClCA;;;;AAKA;;;;ACVA;AACA;AACA;;AAGA;;;;;AASA","sources":["webpack://home-assistant-frontend/./src/components/data-table/ha-data-table-icon.ts","webpack://home-assistant-frontend/./src/components/ha-fab.ts","webpack://home-assistant-frontend/./src/components/ha-help-tooltip.ts"],"sourcesContent":["import { css, html, LitElement, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../ha-svg-icon\";\n\n@customElement(\"ha-data-table-icon\")\nclass HaDataTableIcon extends LitElement {\n  @property() public tooltip!: string;\n\n  @property() public path!: string;\n\n  @state() private _hovered = false;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._hovered ? html`<div>${this.tooltip}</div>` : \"\"}\n      <ha-svg-icon .path=${this.path}></ha-svg-icon>\n    `;\n  }\n\n  protected override firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    const show = () => {\n      this._hovered = true;\n    };\n    const hide = () => {\n      this._hovered = false;\n    };\n    this.addEventListener(\"mouseenter\", show);\n    this.addEventListener(\"focus\", show);\n    this.addEventListener(\"mouseleave\", hide);\n    this.addEventListener(\"blur\", hide);\n    this.addEventListener(\"tap\", hide);\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ha-svg-icon {\n        color: var(--secondary-text-color);\n      }\n      div {\n        position: absolute;\n        right: 28px;\n        z-index: 1002;\n        outline: none;\n        font-size: 10px;\n        line-height: 1;\n        background-color: var(--paper-tooltip-background, #616161);\n        color: var(--paper-tooltip-text-color, white);\n        padding: 8px;\n        border-radius: 2px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-data-table-icon\": HaDataTableIcon;\n  }\n}\n","import { FabBase } from \"@material/mwc-fab/mwc-fab-base\";\nimport { styles } from \"@material/mwc-fab/mwc-fab.css\";\nimport { customElement } from \"lit/decorators\";\nimport { css } from \"lit\";\n\n@customElement(\"ha-fab\")\nexport class HaFab extends FabBase {\n  protected firstUpdated(changedProperties) {\n    super.firstUpdated(changedProperties);\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host .mdc-fab--extended .mdc-fab__icon {\n        margin-inline-start: -8px;\n        margin-inline-end: 12px;\n        direction: var(--direction);\n      }\n    `,\n    // safari workaround - must be explicit\n    document.dir === \"rtl\"\n      ? css`\n          :host .mdc-fab--extended .mdc-fab__icon {\n            direction: rtl;\n          }\n        `\n      : css``,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { mdiHelpCircle } from \"@mdi/js\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-help-tooltip\")\nexport class HaHelpTooltip extends LitElement {\n  @property() public label!: string;\n\n  @property() public position = \"top\";\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-svg-icon .path=${mdiHelpCircle}></ha-svg-icon>\n      <paper-tooltip\n        offset=\"4\"\n        .position=${this.position}\n        .fitToVisibleBounds=${true}\n        >${this.label}</paper-tooltip\n      >\n    `;\n  }\n\n  static get styles() {\n    return css`\n      ha-svg-icon {\n        --mdc-icon-size: var(--ha-help-tooltip-size, 14px);\n        color: var(--ha-help-tooltip-color, var(--disabled-text-color));\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-help-tooltip\": HaHelpTooltip;\n  }\n}\n"],"names":[],"sourceRoot":""}