{"version":3,"file":"8b1e8773.js","mappings":";;AA4CA;AACA;AACA;;;AAcA;AACA;;;AA1BA;;AAEA;;AA4BA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/entity-rows/hui-humidifier-entity-row.ts"],"sourcesContent":["import { html, LitElement, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/entity/ha-entity-toggle\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-humidifier-entity-row\")\nclass HuiHumidifierEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config || !config.entity) {\n      throw new Error(\"Entity must be specified\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row\n        .hass=${this.hass}\n        .config=${this._config}\n        .secondaryText=${stateObj.attributes.humidity\n          ? `${this.hass!.localize(\"ui.card.humidifier.humidity\")}:\n            ${stateObj.attributes.humidity} %${\n              stateObj.attributes.mode\n                ? ` (${\n                    this.hass!.localize(\n                      `state_attributes.humidifier.mode.${stateObj.attributes.mode}`\n                    ) || stateObj.attributes.mode\n                  })`\n                : \"\"\n            }`\n          : \"\"}\n      >\n        <ha-entity-toggle\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n        ></ha-entity-toggle>\n      </hui-generic-entity-row>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-humidifier-entity-row\": HuiHumidifierEntityRow;\n  }\n}\n"],"names":[],"sourceRoot":""}