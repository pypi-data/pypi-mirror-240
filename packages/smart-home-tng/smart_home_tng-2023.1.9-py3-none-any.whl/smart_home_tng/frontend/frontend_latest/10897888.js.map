{"version":3,"file":"10897888.js","mappings":";AAmFA;;AAOA;AACA;;AALA;;;;;AAkBA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-group.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { dynamicElement } from \"../../../common/dom/dynamic-element-directive\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { GroupEntity } from \"../../../data/group\";\nimport \"../../../state-summary/state-card-content\";\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  domainMoreInfoType,\n  importMoreInfoControl,\n} from \"../state_more_info_control\";\n\nclass MoreInfoGroup extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: GroupEntity;\n\n  @state() private _groupDomainStateObj?: HassEntity;\n\n  @state() private _moreInfoType?: string;\n\n  protected updated(changedProperties: PropertyValues) {\n    if (\n      !this.hass ||\n      !this.stateObj ||\n      (!changedProperties.has(\"hass\") && !changedProperties.has(\"stateObj\"))\n    ) {\n      return;\n    }\n\n    const states = this.stateObj.attributes.entity_id\n      .map((entity_id) => this.hass.states[entity_id])\n      .filter((entityState) => entityState);\n\n    if (!states.length) {\n      this._groupDomainStateObj = undefined;\n      this._moreInfoType = undefined;\n      return;\n    }\n\n    const baseStateObj = states.find((s) => s.state === \"on\") || states[0];\n    const groupDomain = computeStateDomain(baseStateObj);\n\n    // Groups need to be filtered out or we'll show content of\n    // first child above the children of the current group\n    if (\n      groupDomain !== \"group\" &&\n      states.every(\n        (entityState) => groupDomain === computeStateDomain(entityState)\n      )\n    ) {\n      this._groupDomainStateObj = {\n        ...baseStateObj,\n        entity_id: this.stateObj.entity_id,\n        attributes: { ...baseStateObj.attributes },\n      };\n      const type = domainMoreInfoType(groupDomain);\n      importMoreInfoControl(type);\n      this._moreInfoType = type === \"hidden\" ? undefined : `more-info-${type}`;\n    } else {\n      this._groupDomainStateObj = undefined;\n      this._moreInfoType = undefined;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n    return html`${this._moreInfoType\n      ? dynamicElement(this._moreInfoType, {\n          hass: this.hass,\n          stateObj: this._groupDomainStateObj,\n        })\n      : \"\"}\n    ${this.stateObj.attributes.entity_id.map((entity_id) => {\n      const entityState = this.hass!.states[entity_id];\n      if (!entityState) {\n        return \"\";\n      }\n      return html`\n        <state-card-content\n          .stateObj=${entityState}\n          .hass=${this.hass}\n        ></state-card-content>\n      `;\n    })}`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      state-card-content {\n        display: block;\n        margin-top: 8px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"more-info-group\", MoreInfoGroup);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-group\": MoreInfoGroup;\n  }\n}\n"],"names":[],"sourceRoot":""}