"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[66054],{23682:(e,t,r)=>{function n(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}r.d(t,{Z:()=>n})},90394:(e,t,r)=>{function n(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}r.d(t,{Z:()=>n})},79021:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(90394),s=r(34327),o=r(23682);function a(e,t){(0,o.Z)(2,arguments);var r=(0,s.Z)(e),a=(0,n.Z)(t);return isNaN(a)?new Date(NaN):a?(r.setDate(r.getDate()+a),r):r}},59699:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(90394),s=r(39244),o=r(23682),a=36e5;function i(e,t){(0,o.Z)(2,arguments);var r=(0,n.Z)(t);return(0,s.Z)(e,r*a)}},39244:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(90394),s=r(34327),o=r(23682);function a(e,t){(0,o.Z)(2,arguments);var r=(0,s.Z)(e).getTime(),a=(0,n.Z)(t);return new Date(r+a)}},32182:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(90394),s=r(34327),o=r(23682);function a(e,t){(0,o.Z)(2,arguments);var r=(0,s.Z)(e),a=(0,n.Z)(t);if(isNaN(a))return new Date(NaN);if(!a)return r;var i=r.getDate(),c=new Date(r.getTime());return c.setMonth(r.getMonth()+a+1,0),i>=c.getDate()?c:(r.setFullYear(c.getFullYear(),c.getMonth(),i),r)}},4535:(e,t,r)=>{r.d(t,{Z:()=>u});var n=r(34327);function s(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}var o=r(59429),a=r(23682),i=864e5;function c(e,t){var r=e.getFullYear()-t.getFullYear()||e.getMonth()-t.getMonth()||e.getDate()-t.getDate()||e.getHours()-t.getHours()||e.getMinutes()-t.getMinutes()||e.getSeconds()-t.getSeconds()||e.getMilliseconds()-t.getMilliseconds();return r<0?-1:r>0?1:r}function u(e,t){(0,a.Z)(2,arguments);var r=(0,n.Z)(e),u=(0,n.Z)(t),l=c(r,u),_=Math.abs(function(e,t){(0,a.Z)(2,arguments);var r=(0,o.Z)(e),n=(0,o.Z)(t),c=r.getTime()-s(r),u=n.getTime()-s(n);return Math.round((c-u)/i)}(r,u));r.setDate(r.getDate()-l*_);var y=l*(_-Number(c(r,u)===-l));return 0===y?0:y}},93752:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(34327),s=r(23682);function o(e){(0,s.Z)(1,arguments);var t=(0,n.Z)(e);return t.setHours(23,59,59,999),t}},70390:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(93752);function s(){return(0,n.Z)(Date.now())}},47538:(e,t,r)=>{function n(){var e=new Date,t=e.getFullYear(),r=e.getMonth(),n=e.getDate(),s=new Date(0);return s.setFullYear(t,r,n-1),s.setHours(23,59,59,999),s}r.d(t,{Z:()=>n})},59429:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(34327),s=r(23682);function o(e){(0,s.Z)(1,arguments);var t=(0,n.Z)(e);return t.setHours(0,0,0,0),t}},27088:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(59429);function s(){return(0,n.Z)(Date.now())}},83008:(e,t,r)=>{function n(){var e=new Date,t=e.getFullYear(),r=e.getMonth(),n=e.getDate(),s=new Date(0);return s.setFullYear(t,r,n-1),s.setHours(0,0,0,0),s}r.d(t,{Z:()=>n})},34327:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(76775),s=r(23682);function o(e){(0,s.Z)(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===(0,n.Z)(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}},92306:(e,t,r)=>{r.d(t,{v:()=>n});const n=(e,t)=>{const r={};for(const n of e){const e=t(n);e in r?r[e].push(n):r[e]=[n]}return r}},11950:(e,t,r)=>{r.d(t,{l:()=>n});const n=async(e,t)=>new Promise((r=>{const n=t(e,(e=>{n(),r(e)}))}))},81582:(e,t,r)=>{r.d(t,{LZ:()=>n,Nn:()=>c,Ny:()=>u,Q4:()=>s,SO:()=>a,T0:()=>l,iJ:()=>i,pB:()=>o});const n=32143==r.j?["migration_error","setup_error","setup_retry"]:null,s=32143==r.j?["not_loaded","loaded","setup_error","setup_retry"]:null,o=(e,t)=>{const r={};return t&&(t.type&&(r.type_filter=t.type),t.domain&&(r.domain=t.domain)),e.callWS({type:"config_entries/get",...r})},a=(e,t,r)=>e.callWS({type:"config_entries/update",entry_id:t,...r}),i=(e,t)=>e.callApi("DELETE",`config/config_entries/entry/${t}`),c=(e,t)=>e.callApi("POST",`config/config_entries/entry/${t}/reload`),u=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:"user"}),l=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:null})},55424:(e,t,r)=>{r.d(t,{Bm:()=>b,Jj:()=>E,KU:()=>D,P:()=>T,UB:()=>H,ZC:()=>W,_Z:()=>j,_n:()=>I,gM:()=>Y,gy:()=>M,iK:()=>Z,jB:()=>F,o1:()=>w,rl:()=>S,vE:()=>B,vR:()=>L,xZ:()=>k,yH:()=>C,yT:()=>z});var n=r(4535),s=r(59699),o=r(32182),a=r(79021),i=r(39244),c=r(27088),u=r(83008),l=r(70390),_=r(47538),y=r(97330),g=r(92306),d=r(11950),p=r(81582),f=r(74186),m=r(38014);function h(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const v=[],b=()=>({stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),w=()=>({stat_energy_to:"",stat_compensation:null,entity_energy_price:null,number_energy_price:null}),Z=()=>({type:"grid",flow_from:[],flow_to:[],cost_adjustment_day:0}),S=()=>({type:"solar",stat_energy_from:"",config_entry_solar_forecast:null}),T=()=>({type:"battery",stat_energy_from:"",stat_energy_to:""}),D=()=>({type:"gas",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),k=e=>e.callWS({type:"energy/info"}),M=e=>e.callWS({type:"energy/validate"});class N extends Error{constructor(e){super(e),h(this,"code","not_found"),Object.setPrototypeOf(this,new.target.prototype)}}const W=async(e,t=!1)=>{const r=await e.callWS({type:"energy/get_prefs"});if(t){const e=r.energy_sources.length>0,t=r.device_consumption.length>0;if(!e&&!t)throw new N}return r},j=async(e,t)=>{const r=e.callWS({type:"energy/save_prefs",...t});return O(e),r},P=async(e,t,r,n,s,o="hour")=>e.callWS({type:"energy/fossil_energy_consumption",start_time:t.toISOString(),end_time:null==s?void 0:s.toISOString(),energy_statistic_ids:r,co2_statistic_id:n,period:o}),E=e=>(0,g.v)(e.energy_sources,(e=>e.type)),C=(e,t)=>{const r=[];for(const n of e.energy_sources)if("solar"!==n.type)if("gas"!==n.type)if("battery"!==n.type){for(const e of n.flow_from){r.push(e.stat_energy_from),e.stat_cost&&r.push(e.stat_cost);const n=t.cost_sensors[e.stat_energy_from];n&&r.push(n)}for(const e of n.flow_to){r.push(e.stat_energy_to),e.stat_compensation&&r.push(e.stat_compensation);const n=t.cost_sensors[e.stat_energy_to];n&&r.push(n)}}else r.push(n.stat_energy_from),r.push(n.stat_energy_to);else{r.push(n.stat_energy_from),n.stat_cost&&r.push(n.stat_cost);const e=t.cost_sensors[n.stat_energy_from];e&&r.push(e)}else r.push(n.stat_energy_from);for(const t of e.device_consumption)r.push(t.stat_consumption);return r},O=e=>{v.forEach((t=>{const r=H(e,{key:t});r.clearPrefs(),r._active&&r.refresh()}))},H=(e,t={})=>{let r="_energy";if(t.key){if(!t.key.startsWith("energy_"))throw new Error("Key need to start with energy_");r=`_${t.key}`}if(e.connection[r])return e.connection[r];v.push(t.key);const g=(0,y._)(e.connection,r,(async()=>{if(g.prefs||(g.prefs=await W(e,!0)),g._refreshTimeout&&clearTimeout(g._refreshTimeout),g._active&&(!g.end||g.end>new Date)){const e=new Date;e.getMinutes()>=20&&e.setHours(e.getHours()+1),e.setMinutes(20,0,0),g._refreshTimeout=window.setTimeout((()=>g.refresh()),e.getTime()-Date.now())}return(async(e,t,r,c,u)=>{const[l,_,y]=await Promise.all([(0,p.pB)(e,{domain:"co2signal"}),(0,d.l)(e.connection,f.LM),k(e)]),g=l.length?l[0]:void 0;let h;if(g)for(const t of _){if(t.config_entry_id!==g.entry_id)continue;const r=e.states[t.entity_id];if(r&&"%"===r.attributes.unit_of_measurement){h=r.entity_id;break}}const v=[];for(const e of t.energy_sources)if("grid"===e.type)for(const t of e.flow_from)v.push(t.stat_energy_from);const b=C(t,y),w=(0,n.Z)(c||new Date,r),Z=w>35?"month":w>2?"day":"hour",S=(0,s.Z)(r,-1),T={energy:"kWh",volume:"km"===(e.config.unit_system.length||"")?"m³":"ft³"},D=await(0,m.dL)(e,S,c,b,Z,T);let M,N,W,j,E;if(u){N=w>27&&w<32?(0,o.Z)(r,-1):(0,a.Z)(r,-1*(w+1));const t=(0,s.Z)(N,-1);W=(0,i.Z)(r,-1),M=await(0,m.dL)(e,t,W,b,Z,T)}void 0!==h&&(j=await P(e,r,v,h,c,w>35?"month":w>2?"day":"hour"),u&&(E=await P(e,N,v,h,W,w>35?"month":w>2?"day":"hour"))),Object.values(D).forEach((e=>{e.length&&new Date(e[0].start)>S&&e.unshift({...e[0],start:S.toISOString(),end:S.toISOString(),sum:0,state:0})}));const O=await(0,m.Py)(e,b),H={};return O.forEach((e=>{H[e.statistic_id]=e})),{start:r,end:c,startCompare:N,endCompare:W,info:y,prefs:t,stats:D,statsMetadata:H,statsCompare:M,co2SignalConfigEntry:g,co2SignalEntity:h,fossilEnergyConsumption:j,fossilEnergyConsumptionCompare:E}})(e,g.prefs,g.start,g.end,g.compare)})),h=g.subscribe;g.subscribe=e=>{const t=h(e);return g._active++,()=>{g._active--,g._active<1&&(clearTimeout(g._refreshTimeout),g._refreshTimeout=void 0),t()}},g._active=0,g.prefs=t.prefs;const b=new Date;g.start=b.getHours()>0?(0,c.Z)():(0,u.Z)(),g.end=b.getHours()>0?(0,l.Z)():(0,_.Z)();const w=()=>{g._updatePeriodTimeout=window.setTimeout((()=>{g.start=(0,c.Z)(),g.end=(0,l.Z)(),w()}),(0,s.Z)((0,l.Z)(),1).getTime()-Date.now())};return w(),g.clearPrefs=()=>{g.prefs=void 0},g.setPeriod=(e,t)=>{var r;g.start=e,g.end=t,g.start.getTime()!==(0,c.Z)().getTime()||(null===(r=g.end)||void 0===r?void 0:r.getTime())!==(0,l.Z)().getTime()||g._updatePeriodTimeout?g._updatePeriodTimeout&&(clearTimeout(g._updatePeriodTimeout),g._updatePeriodTimeout=void 0):w()},g.setCompare=e=>{g.compare=e},g},F=e=>e.callWS({type:"energy/solar_forecast"}),Y=["m³"],z=["kWh"],I=[...Y,...z],L=(e,t={},r)=>{for(const n of e.energy_sources){if("gas"!==n.type)continue;if(r&&r===n.stat_energy_from)continue;const e=t[n.stat_energy_from];if(e)return Y.includes(e.statistics_unit_of_measurement)?"volume":"energy"}},B=(e,t={})=>{for(const r of e.energy_sources){if("gas"!==r.type)continue;const e=t[r.stat_energy_from];if(null!=e&&e.display_unit_of_measurement)return e.display_unit_of_measurement}}},38014:(e,t,r)=>{r.d(t,{Cj:()=>c,Kd:()=>p,Kj:()=>_,Nw:()=>g,Py:()=>o,ZT:()=>u,dL:()=>a,hN:()=>l,h_:()=>i,j2:()=>d,q6:()=>y,uR:()=>s});var n=r(91741);const s=(e,t)=>e.callWS({type:"recorder/list_statistic_ids",statistic_type:t}),o=(e,t)=>e.callWS({type:"recorder/get_statistics_metadata",statistic_ids:t}),a=(e,t,r,n,s="hour",o)=>e.callWS({type:"recorder/statistics_during_period",start_time:t.toISOString(),end_time:null==r?void 0:r.toISOString(),statistic_ids:n,period:s,units:o}),i=e=>e.callWS({type:"recorder/validate_statistics"}),c=(e,t,r)=>e.callWS({type:"recorder/update_statistics_metadata",statistic_id:t,unit_of_measurement:r}),u=(e,t,r,n)=>e.callWS({type:"recorder/change_statistics_unit",statistic_id:t,old_unit_of_measurement:r,new_unit_of_measurement:n}),l=(e,t)=>e.callWS({type:"recorder/clear_statistics",statistic_ids:t}),_=e=>{if(!e||e.length<2)return null;const t=e[e.length-1].sum;if(null===t)return null;const r=e[0].sum;return null===r?t:t-r},y=(e,t)=>{let r=null;for(const n of t){if(!(n in e))continue;const t=_(e[n]);null!==t&&(null===r?r=t:r+=t)}return r},g=(e,t)=>e.some((e=>null!==e[t])),d=(e,t,r,n,s)=>e.callWS({type:"recorder/adjust_sum_statistics",statistic_id:t,start_time:r,adjustment:n,display_unit:s}),p=(e,t,r)=>{const s=e.states[t];return s?(0,n.C)(s):(null==r?void 0:r.name)||t}},66054:(e,t,r)=>{r.r(t),r.d(t,{EnergyStrategy:()=>s});var n=r(55424);class s{static async generateView(e){const t=e.hass,s={cards:[]};let o;try{o=await(0,n.ZC)(t,!0)}catch(e){return"not_found"===e.code?(async()=>(await Promise.all([r.e(878),r.e(88369)]).then(r.bind(r,55158)),{type:"panel",cards:[{type:"custom:energy-setup-wizard-card"}]}))():(s.cards.push({type:"markdown",content:`An error occurred while fetching your energy preferences: ${e.message}.`}),s)}s.type="sidebar";const a=o.energy_sources.find((e=>"grid"===e.type)),i=a&&a.flow_to.length,c=o.energy_sources.some((e=>"solar"===e.type)),u=o.energy_sources.some((e=>"gas"===e.type));return e.narrow&&s.cards.push({type:"energy-date-selection",collection_key:"energy_dashboard",view_layout:{position:"sidebar"}}),s.cards.push({type:"energy-compare",collection_key:"energy_dashboard"}),a&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_usage_graph_title"),type:"energy-usage-graph",collection_key:"energy_dashboard"}),c&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_solar_graph_title"),type:"energy-solar-graph",collection_key:"energy_dashboard"}),u&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_gas_graph_title"),type:"energy-gas-graph",collection_key:"energy_dashboard"}),a&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_distribution_title"),type:"energy-distribution",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),(a||c)&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_sources_table_title"),type:"energy-sources-table",collection_key:"energy_dashboard"}),i&&s.cards.push({type:"energy-grid-neutrality-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),c&&i&&s.cards.push({type:"energy-solar-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),a&&s.cards.push({type:"energy-carbon-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),o.device_consumption.length&&s.cards.push({title:t.localize("ui.panel.energy.cards.energy_devices_graph_title"),type:"energy-devices-graph",collection_key:"energy_dashboard"}),s}}},76775:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}r.d(t,{Z:()=>n})}}]);