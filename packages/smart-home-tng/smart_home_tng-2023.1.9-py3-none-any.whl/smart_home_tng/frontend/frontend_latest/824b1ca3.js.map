{"version":3,"file":"824b1ca3.js","mappings":";AAsCA;AAEA;;;;;;AAUA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/cards/hui-error-card.ts"],"sourcesContent":["import { dump } from \"js-yaml\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport \"../../../components/ha-alert\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { ErrorCardConfig } from \"./types\";\n\n@customElement(\"hui-error-card\")\nexport class HuiErrorCard extends LitElement implements LovelaceCard {\n  public hass?: HomeAssistant;\n\n  @state() private _config?: ErrorCardConfig;\n\n  public getCardSize(): number {\n    return 4;\n  }\n\n  public setConfig(config: ErrorCardConfig): void {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config) {\n      return html``;\n    }\n\n    let dumped: string | undefined;\n\n    if (this._config.origConfig) {\n      try {\n        dumped = dump(this._config.origConfig);\n      } catch (err: any) {\n        dumped = `[Error dumping ${this._config.origConfig}]`;\n      }\n    }\n\n    return html`<ha-alert alert-type=\"error\" .title=${this._config.error}>\n      ${dumped ? html`<pre>${dumped}</pre>` : \"\"}\n    </ha-alert>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      pre {\n        font-family: var(--code-font-family, monospace);\n        white-space: break-spaces;\n        user-select: text;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-error-card\": HuiErrorCard;\n  }\n}\n"],"names":[],"sourceRoot":""}