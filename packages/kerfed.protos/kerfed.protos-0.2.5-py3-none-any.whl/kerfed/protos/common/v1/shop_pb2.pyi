"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kerfed.protos.common.v1.address_pb2
import kerfed.protos.common.v1.combo_pb2
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.money_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Shop(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOP_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LOGO_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    DISBURSEMENT_FIELD_NUMBER: builtins.int
    COMBOS_FIELD_NUMBER: builtins.int
    MANUFACTURING_FIELD_NUMBER: builtins.int
    shop_id: builtins.str
    """The unique uuid key for the shop."""
    name: builtins.str
    """The user-facing name, i.e.:
    "Atomatic Manufacturing"
    """
    description: builtins.str
    """A markdown blurb describing the shop:
    "Atomatic makes great parts for great customers."
    """
    @property
    def logo(self) -> kerfed.protos.common.v1.fileblob_pb2.FileBlob:
        """The logo image for drawings, artifacts, etc."""
    @property
    def address(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """Where is the shop located.
        Also includes the user-displayable name, i.e:
        "Atomatic Precision Manufacturing"
        And contact email.
        """
    @property
    def disbursement(self) -> global___ShopDisbursement:
        """policy for fees assessed to shop"""
    @property
    def combos(self) -> kerfed.protos.common.v1.combo_pb2.Combos:
        """which combinations of configuration options does this shop offer."""
    @property
    def manufacturing(self) -> global___ShopManufacturing:
        """What are the release-to-manufacturing settings for this shop."""
    def __init__(
        self,
        *,
        shop_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        logo: kerfed.protos.common.v1.fileblob_pb2.FileBlob | None = ...,
        address: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        disbursement: global___ShopDisbursement | None = ...,
        combos: kerfed.protos.common.v1.combo_pb2.Combos | None = ...,
        manufacturing: global___ShopManufacturing | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address", b"address", "combos", b"combos", "disbursement", b"disbursement", "logo", b"logo", "manufacturing", b"manufacturing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address", b"address", "combos", b"combos", "description", b"description", "disbursement", b"disbursement", "logo", b"logo", "manufacturing", b"manufacturing", "name", b"name", "shop_id", b"shop_id"]) -> None: ...

global___Shop = Shop

@typing_extensions.final
class ShopManufacturing(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class KFactor(google.protobuf.message.Message):
        """bent parts have flat patterns produced using these
        material and radius-ratio specific settings.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        MATERIAL_ID_FIELD_NUMBER: builtins.int
        RADIUS_FRACTION_FIELD_NUMBER: builtins.int
        K_FACTOR_FIELD_NUMBER: builtins.int
        material_id: builtins.str
        """a material id match pattern string like `aluminum_6061_t6`
        or including wildcards like `aluminum_*`.
        """
        @property
        def radius_fraction(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
            """What is the ratio of bend radius to sheet thickness."""
        @property
        def k_factor(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
            """what is the k-factor at that ratio?
            0.5 means flatten at the centerline of the sheet.
            0.0 means flatten at the inner surface of the bend.
            """
        def __init__(
            self,
            *,
            material_id: builtins.str = ...,
            radius_fraction: collections.abc.Iterable[builtins.float] | None = ...,
            k_factor: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["k_factor", b"k_factor", "material_id", b"material_id", "radius_fraction", b"radius_fraction"]) -> None: ...

    K_FACTOR_FIELD_NUMBER: builtins.int
    @property
    def k_factor(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ShopManufacturing.KFactor]:
        """For bent sheet metal parts."""
    def __init__(
        self,
        *,
        k_factor: collections.abc.Iterable[global___ShopManufacturing.KFactor] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["k_factor", b"k_factor"]) -> None: ...

global___ShopManufacturing = ShopManufacturing

@typing_extensions.final
class ShopDisbursement(google.protobuf.message.Message):
    """A model for all the ways we could be
    paid by a machine shop
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEE_PERCENT_FIELD_NUMBER: builtins.int
    FEE_FIXED_FIELD_NUMBER: builtins.int
    FEE_MONTHLY_FIELD_NUMBER: builtins.int
    CC_PERCENT_FIELD_NUMBER: builtins.int
    CC_FIXED_FIELD_NUMBER: builtins.int
    fee_percent: builtins.float
    """A percentage fee per-transactions where 1.0% = 0.01"""
    @property
    def fee_fixed(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """A fixed fee per-transaction in USD."""
    @property
    def fee_monthly(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """A fixed fee if the shop is billed monthly."""
    cc_percent: builtins.float
    """Credit card charge rate from supplier.
    For stripe this is 2.9% + $0.30 per transaction.
    """
    @property
    def cc_fixed(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """What is the fixed charge per credit card transaction."""
    def __init__(
        self,
        *,
        fee_percent: builtins.float = ...,
        fee_fixed: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        fee_monthly: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        cc_percent: builtins.float = ...,
        cc_fixed: kerfed.protos.common.v1.money_pb2.Money | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cc_fixed", b"cc_fixed", "fee_fixed", b"fee_fixed", "fee_monthly", b"fee_monthly"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cc_fixed", b"cc_fixed", "cc_percent", b"cc_percent", "fee_fixed", b"fee_fixed", "fee_monthly", b"fee_monthly", "fee_percent", b"fee_percent"]) -> None: ...

global___ShopDisbursement = ShopDisbursement
