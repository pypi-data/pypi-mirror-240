from conans import ConanFile, CMake, tools
import os, shutil

class CameraCtrlConan(ConanFile):
    name = "CameraCtrl"
    version = "@version@"
    license = "<Put the package license here>"
    author = "<Put your name here> <And your email here>"
    url = "<Package recipe repository url here, for issues about the package>"
    description = "<Description of CameraCtrl here>"
    topics = ("<Put some tag here>", "<here>", "<and here>")
    settings = "os", "compiler", "build_type", "arch"
    options = {"shared": [True, False]}
    default_options = "shared=False"
    
    def source(self):
        self.run("git clone git@gitlab.gz.cvte.cn:1602/rtcbase/capturecontrol.git @git_ref@ .")
        @checkout@

    def buildWindows(self):
        cmake = CMake(self)
        cmake_options = []
        cmake_options.append("-DENABLE_NOR_CONAN=ON")
        if self.options.shared == True:
            cmake_options.append("-DBUILD_SHARED=ON")
        else:
            cmake_options.append("-DBUILD_SHARED=OFF")
        cmake_options.append("-DCMAKE_CXX_FLAGS=-D_DLL=true -DPOCO_STATIC=ON")
        cmake.configure(source_folder = "capturecontrol", args=cmake_options)
        cmake.build()

    def build(self):
        if(self.settings.compiler == "Visual Studio"):
            self.buildWindows()

    def package(self):
        self.copy("*.h", dst="include", src="capturecontrol/api/inc")
        self.copy("*.lib", dst="lib", keep_path=False)
        self.copy("*.dll", dst="bin", keep_path=False)

    def package_info(self):
        self.cpp_info.libs = ["CameraCtrl"]

