# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_exts.ipynb.

# %% auto 0
__all__ = ['hasext', 'dropext', 'istar', 'isgz', 'istargz', 'istarball']

# %% ../nbs/10_exts.ipynb 5
#| export


# %% ../nbs/10_exts.ipynb 7
from atyp import PathLike, StrQ
from nchr import DOT, NIL
from nlit import EXT_TAR, EXT_GZ, EXT_TAR_GZ

# %% ../nbs/10_exts.ipynb 9
from .util import fspath, dirfile

# %% ../nbs/10_exts.ipynb 11
def hasext(file: str, ext: StrQ = None) -> bool:
    file = fspath(file)
    return ext in file and file.endswith(ext)

# %% ../nbs/10_exts.ipynb 12
def dropext(file: PathLike, ext: StrQ = None) -> str:
    path, name = dirfile(file)
    name = name.partition(DOT)[0] if ext is None else name.removesuffix(ext)#.replace(ext, NIL)
    return path / name

# %% ../nbs/10_exts.ipynb 13
def istar(file: str) -> bool:
    return hasext(file, EXT_TAR)

def isgz(file: str) -> bool:
    return hasext(file, EXT_GZ)

def istargz(file: str) -> bool:
    return hasext(file, EXT_TAR_GZ)

def istarball(file: str) -> bool:
    return istar(file) or istargz(file)
