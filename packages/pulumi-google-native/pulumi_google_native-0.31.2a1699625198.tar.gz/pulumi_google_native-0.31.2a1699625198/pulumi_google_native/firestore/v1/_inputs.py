# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'GoogleFirestoreAdminV1DailyRecurrenceArgs',
    'GoogleFirestoreAdminV1IndexFieldArgs',
    'GoogleFirestoreAdminV1WeeklyRecurrenceArgs',
]

@pulumi.input_type
class GoogleFirestoreAdminV1DailyRecurrenceArgs:
    def __init__(__self__):
        """
        Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
        """
        pass


@pulumi.input_type
class GoogleFirestoreAdminV1IndexFieldArgs:
    def __init__(__self__, *,
                 array_config: Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldArrayConfig']] = None,
                 field_path: Optional[pulumi.Input[str]] = None,
                 order: Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldOrder']] = None):
        """
        A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
        :param pulumi.Input['GoogleFirestoreAdminV1IndexFieldArrayConfig'] array_config: Indicates that this field supports operations on `array_value`s.
        :param pulumi.Input[str] field_path: Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
        :param pulumi.Input['GoogleFirestoreAdminV1IndexFieldOrder'] order: Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
        """
        if array_config is not None:
            pulumi.set(__self__, "array_config", array_config)
        if field_path is not None:
            pulumi.set(__self__, "field_path", field_path)
        if order is not None:
            pulumi.set(__self__, "order", order)

    @property
    @pulumi.getter(name="arrayConfig")
    def array_config(self) -> Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldArrayConfig']]:
        """
        Indicates that this field supports operations on `array_value`s.
        """
        return pulumi.get(self, "array_config")

    @array_config.setter
    def array_config(self, value: Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldArrayConfig']]):
        pulumi.set(self, "array_config", value)

    @property
    @pulumi.getter(name="fieldPath")
    def field_path(self) -> Optional[pulumi.Input[str]]:
        """
        Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
        """
        return pulumi.get(self, "field_path")

    @field_path.setter
    def field_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "field_path", value)

    @property
    @pulumi.getter
    def order(self) -> Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldOrder']]:
        """
        Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
        """
        return pulumi.get(self, "order")

    @order.setter
    def order(self, value: Optional[pulumi.Input['GoogleFirestoreAdminV1IndexFieldOrder']]):
        pulumi.set(self, "order", value)


@pulumi.input_type
class GoogleFirestoreAdminV1WeeklyRecurrenceArgs:
    def __init__(__self__, *,
                 day: Optional[pulumi.Input['GoogleFirestoreAdminV1WeeklyRecurrenceDay']] = None):
        """
        Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
        :param pulumi.Input['GoogleFirestoreAdminV1WeeklyRecurrenceDay'] day: The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
        """
        if day is not None:
            pulumi.set(__self__, "day", day)

    @property
    @pulumi.getter
    def day(self) -> Optional[pulumi.Input['GoogleFirestoreAdminV1WeeklyRecurrenceDay']]:
        """
        The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
        """
        return pulumi.get(self, "day")

    @day.setter
    def day(self, value: Optional[pulumi.Input['GoogleFirestoreAdminV1WeeklyRecurrenceDay']]):
        pulumi.set(self, "day", value)


