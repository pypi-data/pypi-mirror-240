# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'GetCustomClassResult',
    'AwaitableGetCustomClassResult',
    'get_custom_class',
    'get_custom_class_output',
]

@pulumi.output_type
class GetCustomClassResult:
    def __init__(__self__, custom_class_id=None, items=None, kms_key_name=None, kms_key_version_name=None, name=None):
        if custom_class_id and not isinstance(custom_class_id, str):
            raise TypeError("Expected argument 'custom_class_id' to be a str")
        pulumi.set(__self__, "custom_class_id", custom_class_id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if kms_key_name and not isinstance(kms_key_name, str):
            raise TypeError("Expected argument 'kms_key_name' to be a str")
        pulumi.set(__self__, "kms_key_name", kms_key_name)
        if kms_key_version_name and not isinstance(kms_key_version_name, str):
            raise TypeError("Expected argument 'kms_key_version_name' to be a str")
        pulumi.set(__self__, "kms_key_version_name", kms_key_version_name)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="customClassId")
    def custom_class_id(self) -> str:
        """
        If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive.
        """
        return pulumi.get(self, "custom_class_id")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.ClassItemResponse']:
        """
        A collection of class items.
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter(name="kmsKeyName")
    def kms_key_name(self) -> str:
        """
        The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
        """
        return pulumi.get(self, "kms_key_name")

    @property
    @pulumi.getter(name="kmsKeyVersionName")
    def kms_key_version_name(self) -> str:
        """
        The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.
        """
        return pulumi.get(self, "kms_key_version_name")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The resource name of the custom class.
        """
        return pulumi.get(self, "name")


class AwaitableGetCustomClassResult(GetCustomClassResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCustomClassResult(
            custom_class_id=self.custom_class_id,
            items=self.items,
            kms_key_name=self.kms_key_name,
            kms_key_version_name=self.kms_key_version_name,
            name=self.name)


def get_custom_class(custom_class_id: Optional[str] = None,
                     location: Optional[str] = None,
                     project: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCustomClassResult:
    """
    Get a custom class.
    """
    __args__ = dict()
    __args__['customClassId'] = custom_class_id
    __args__['location'] = location
    __args__['project'] = project
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:speech/v1:getCustomClass', __args__, opts=opts, typ=GetCustomClassResult).value

    return AwaitableGetCustomClassResult(
        custom_class_id=pulumi.get(__ret__, 'custom_class_id'),
        items=pulumi.get(__ret__, 'items'),
        kms_key_name=pulumi.get(__ret__, 'kms_key_name'),
        kms_key_version_name=pulumi.get(__ret__, 'kms_key_version_name'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_custom_class)
def get_custom_class_output(custom_class_id: Optional[pulumi.Input[str]] = None,
                            location: Optional[pulumi.Input[str]] = None,
                            project: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCustomClassResult]:
    """
    Get a custom class.
    """
    ...
