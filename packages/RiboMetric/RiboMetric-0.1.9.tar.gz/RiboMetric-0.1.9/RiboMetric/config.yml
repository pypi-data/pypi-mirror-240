argument:
  # Arguments, config values are overwritten when called in the command-line
  bam: null                   # Filepath for bam
  annotation: null            # Filepath for annotation
  gff: null                   # Filepath for gff
  fasta: null                 # Filepath for fasta
  json_in: null               # Filepath for JSON input
  json_config: False          # Use JSON config instead of this config for generating plots
  server: False               # If true, runs 'server' mode, uses more memory, but runs faster
  name: null                  # Sets the name for the reports and/or data output, when set to None, uses bam filename
  output: "."                 # Sets the output directory for the reports and/or data output
  threads: 8                  # Number of threads used by RiboMetric
  subsample: null             # Number of reads processed from the bam file, null being the entire file
  transcripts: null           # Number of transcripts processed from a gff file, null being the entire file
  html: True                  # Output HTML report
  pdf: False                  # Output PDF report
  json: False                 # Output results as JSON
  csv: False                  # Output metrics as CSV

plots:
  # Controls general plot theming and specific plot options
  font_family: Helvetica Neue,Helvetica,Arial,sans-serif
  base_color: '#7f7f7f'
  nucleotide_colors: {"A": "#c93434", "C": "#2e85db", "G": "#f0de1f", "T": "#1fc24d"}
  image_size: [720, 370]      # [Width, Height] in pixels, used for pdf images
  ligation_bias_distribution:
    nucleotide_count: 2       # Size of nucleotide groups to check (default = 2)
    target: "both"            # Options: ["five_prime", "three-prime", "both"]
    include_N: False          # Show nucleotide groups with N in plot
    background_freq: True     # Use background frequency of nucleotide groups in reads to check ligation bias
  nucleotide_proportion:
    nucleotide_start: 0
    nucleotide_count: 15
  read_frame_distribution:
    upper_limit: 40
    lower_limit: 15
    show_scores: "all"        # Options: ["all", "global", "none"]
  mRNA_distribution:
    upper_limit: 50
    lower_limit: 10
    absolute_counts: False    # Options for both?
  mRNA_read_breakdown:
    upper_limit: 50
    lower_limit: 10
    absolute_counts: False
  metagene_profile:
    distance_target: "both"   # Options: ["start", "stop", "both"]
    shared_yaxis: False       # For the metagene profile barplot, controls whether the start and stop distance share a y-axis or not
    distance_range: [-50,50]  # Set the max distance to count reads from the target(s)
    colorscale: "blues"    # Heatmap colorscale, see https://plotly.com/python/builtin-colorscales/
    max_colorscale: null      # if set to null, the plot will generate with relative counts (0 to 1)
    
qc:
  use_cds_subset:
  # Defines which modules use only reads that are on cds
  # If False, uses all reads
    read_frame_distribution: True
  read_frame_distribution:
    3nt_count_cutoff: 0.05
  cds_coverage:
    in_frame_coverage: True   # Only check in-frame coverage, otherwise check complete cds coverage