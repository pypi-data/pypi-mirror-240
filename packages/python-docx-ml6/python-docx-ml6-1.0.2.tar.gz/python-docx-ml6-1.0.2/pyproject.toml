[build-system]
requires = ["setuptools>=61.0.0"]

[project]
name = "python-docx-ml6"
authors = [{name = "Steve Canny", email = "stcanny@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "lxml>=3.1.0",
    "typing_extensions",
]
description = "Create, read, and update Microsoft Word .docx files. This is a fork from the original library that includes feature requests that have been provided by the open source community but have not yet been merged in the original package."
dynamic = ["version"]
keywords = ["docx", "office", "openxml", "word"]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.7"

[project.urls]
Changelog = "https://github.com/ml6team/python-docx/blob/master/HISTORY.rst"
Documentation = "https://python-docx.readthedocs.org/en/latest/"
Homepage = "https://github.com/python-openxml/python-docx"
Repository = "https://github.com/ml6team/python-docx"

[tool.black]
target-version = ["py37", "py38", "py39", "py310", "py311"]

[tool.pytest.ini_options]
norecursedirs = [
    "doc",
    "docx",
    "*.egg-info",
    "features",
    ".git",
    "ref",
    "_scratch",
    ".tox",
]
python_files = ["test_*.py"]
python_classes = ["Test", "Describe"]
python_functions = ["it_", "its_", "they_", "and_", "but_"]

[tool.ruff]
exclude = []
ignore = [
    "COM812",   # -- over-aggressively insists on trailing commas where not desired --
    "PT001",    # -- wants @pytest.fixture() instead of @pytest.fixture --
    "PT005",    # -- wants @pytest.fixture() instead of @pytest.fixture --
]
select = [
    "C4",       # -- flake8-comprehensions --
    "COM",      # -- flake8-commas --
    "E",        # -- pycodestyle errors --
    "F",        # -- pyflakes --
    "I",        # -- isort (imports) --
    "PLR0402",  # -- Name compared with itself like `foo == foo` --
    "PT",       # -- flake8-pytest-style --
    "SIM",      # -- flake8-simplify --
    "UP015",    # -- redundant `open()` mode parameter (like "r" is default) --
    "UP018",    # -- Unnecessary {literal_type} call like `str("abc")`. (rewrite as a literal) --
    "UP032",    # -- Use f-string instead of `.format()` call --
    "UP034",    # -- Avoid extraneous parentheses --
]
target-version = "py37"

[tool.ruff.isort]
known-first-party = ["docx"]
known-local-folder = ["helpers"]

[tool.setuptools.dynamic]
version = {attr = "docx.__version__"}
