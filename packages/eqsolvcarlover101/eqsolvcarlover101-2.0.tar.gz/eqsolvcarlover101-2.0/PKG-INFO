Metadata-Version: 2.1
Name: eqsolvcarlover101
Version: 2.0
Summary: Automatic equation solver   -|-   Use import eqsolve
Home-page: https://github.com/Carlover101/equation-solver
Author: Zakkai Thomas
Author-email: zmanmustang2017@gmail.com
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# Eqsolve 
- A mathematical Python package by Zakkai Thomas

## [**Old Package (eqsolvcarlover101)**](https://pypi.org/project/eqsolvcarlover101)

[![PyPI Downloads](https://img.shields.io/pypi/dm/eqsolve?label=PyPI%20Downloads)](
https://pypi.org/project/eqsolvcarlover101/) [![Github Downloads](https://img.shields.io/github/downloads/Carlover101/equation-solver/total?label=Github%20Downloads)](https://github.com/Carlover101/equation-solver) [![Downloads](https://static.pepy.tech/personalized-badge/eqsolvcarlover101?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Total%20Downloads)](https://pepy.tech/project/eqsolvcarlover101) [![Latest Version](https://img.shields.io/pypi/v/eqsolvcarlover101?label=Latest%20Version)](https://pypi.org/project/eqsolvcarlover101/) ![License](https://img.shields.io/badge/License-BSD-lightgray?label=License)

- [**Website**](https://github.com/Carlover101/equation-solver)
- [**Bug Reports**](https://github.com/Carlover101/equation-solver/issues)
- [**Email**](mailto:zmanmustang2017@gmail.com)
- [**PyPI Page**](https://pypi.org/project/eqsolvcarlover101)
- [**Documentation**](https://carlover101.github.io/equation-solver)


This is a project that solves mathematic equations for you!




## Functions:

1. Quadratic
    - ***eqsolve.quadsolve()***
      > To type a square in python, you need to use a carrot **^** or two astrix **. (Ex. 2x^2 -5x +4)

2. Slope Intercept
    - ***eqsolve.slopeint()***
      > Put in two points, and output an equation in slope-intercept form.

3. Midpoint
    - _**eqsolve.midpoint()**_
      > Put in two points and output the midpoint.

4. Perpendicular Lines
    - ***eqsolve.perpint()***
      > Put in the slope of a line, and the intersection point, and get the slope-intercept equation of the perpendicular line.

5. Similar Shapes Check
    - ***eqsolve.issim()***
      > Takes the lengths of the sides of one shape and the corresponding side lengths of the sides of a second shape.
      > If the shapes are similar, it will return the scale factor.

6. Missing Right Triangle Lengths
   - ***eqsolve.findright()***
     > Finds the missing length of a right triangle.

7. Compounding Intersest
   - ***eqsolve.intcompound(p,r,n,t)***
     > Calculates the amount of money present/money owed after a number of years using the provided interest rate and the number of times it is compounded yearly.

8. Continuously Compounding Interest
   - ***eqsolve.contcompound(p,r,t)***
     > Calculates the amount of money present/money owed after a number of years if the interest provided is compounded continuously.

### Other Commands:

1. Command List
    - ***eqsolve.commands()***

2. Help
    - ***eqsolve.help()***





## Version Info:

- V0 - V1.5.2:
    - To use these older versions, go to **Helpful Info** down below.

- V1.6:
    - Added _**eqsolve.intcompound()**_ and _**eqsolve.expcompound()**_ functions.
    - Updated all function descriptions so they work with python's default ***help(function)***.
    - Updated all functions to move away from ***input()*** towards proper function notation.
    - Updated **README.md** so it reflects current statistics and project version info.

## Helpful Info:

- For previous versions and version error info, refer to [github (ver: oldest - current)](https://github.com/Carlover101/equation-solver) or [old pypi (ver: oldest - 1.5.1.0)](https://pypi.org/project/eqsolvcarlover101).

## Thanks to all for using my work!
