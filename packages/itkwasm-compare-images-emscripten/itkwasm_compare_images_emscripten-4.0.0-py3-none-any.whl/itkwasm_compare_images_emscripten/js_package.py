# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var pt=Object.defineProperty;var mt=(A,e)=>{for(var t in e)pt(A,t,{get:e[t],enumerable:!0})};var ht="1.0.0-b.154",V=ht;var yt={pipelineWorkerUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${V}/dist/core/web-workers/bundles/pipeline.min.worker.js`,imageIOUrl:`https://cdn.jsdelivr.net/npm/itk-image-io@${V}`,meshIOUrl:`https://cdn.jsdelivr.net/npm/itk-mesh-io@${V}`,pipelinesUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${V}/dist/pipelines`},Y=yt;var wt={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},d=wt;var Dt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},Q=Dt;var bt={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},D=bt;var St={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},U=St;var Ft={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},R=Ft;function kt(A,e,t,r,n){A[r+t*e]=n}var Ie=kt;var FA=class{constructor(e=2,t=Q.UInt8,r=R.Scalar,n=1){this.dimension=e,this.componentType=t,this.pixelType=r,this.components=n}},ge=FA;var kA=class{constructor(e=new ge){this.imageType=e,this.name="image";let t=e.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)Ie(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},le=kA;function Ut(A,e){let t=null;switch(A){case Q.UInt8:{t=new Uint8Array(e);break}case Q.Int8:{t=new Int8Array(e);break}case Q.UInt16:{t=new Uint16Array(e);break}case Q.Int16:{t=new Int16Array(e);break}case Q.UInt32:{t=new Uint32Array(e);break}case Q.Int32:{t=new Int32Array(e);break}case Q.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case Q.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case D.Float32:{t=new Float32Array(e);break}case D.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var b=Ut;function Rt(A,e){let t=Object.assign({},A.imageType);if(typeof e<"u"&&typeof e.pixelType<"u"&&(t.pixelType=e.pixelType,e.pixelType===R.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType&&(t.componentType=e.componentType);let r=new le(t);if(r.name=A.name,r.origin=Array.from(A.origin),r.spacing=Array.from(A.spacing),r.direction=A.direction.slice(),r.size=Array.from(A.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(A.metadata)))),A.data!==null)if(typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType)switch(A.imageType.componentType){case Q.UInt8:case Q.Int8:case Q.UInt16:case Q.Int16:case Q.UInt32:case Q.Int32:case D.Float32:case D.Float64:switch(r.imageType.componentType){case Q.UInt8:r.data=new Uint8Array(A.data);break;case Q.Int8:r.data=new Int8Array(A.data);break;case Q.UInt16:r.data=new Uint16Array(A.data);break;case Q.Int16:r.data=new Int16Array(A.data);break;case Q.UInt32:r.data=new Uint32Array(A.data);break;case Q.Int32:r.data=new Int32Array(A.data);break;case D.Float32:r.data=new Float32Array(A.data);break;case D.Float64:r.data=new Float64Array(A.data);break;case Q.UInt64:r.data=new BigUint64Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=BigInt.asIntN(64,BigInt(A.data[n]));break;case Q.Int64:r.data=new BigInt64Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=BigInt.asUintN(64,BigInt(A.data[n]));break}break;case Q.UInt64:case Q.Int64:switch(r.imageType.componentType){case Q.UInt8:r.data=new Uint8Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.Int8:r.data=new Int8Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.UInt16:r.data=new Uint16Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.Int16:r.data=new Int16Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.UInt32:r.data=new Uint32Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.Int32:r.data=new Int32Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case D.Float32:r.data=new Float32Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case D.Float64:r.data=new Float64Array(A.data.length);for(let n=0;n<r.data.length;n++)r.data[n]=Number(A.data[n]);break;case Q.UInt64:r.data=new BigUint64Array(A.data);break;case Q.Int64:r.data=new BigInt64Array(A.data);break}break}else{let n=A.data.constructor;r.data=new n(A.data.length),r.data!=null&&r.data.set(A.data,0)}return r}var oA=Rt;var Nt=typeof globalThis.SharedArrayBuffer<"u";function Ot(A){if(A==null)return[];let e=[];for(let t=0;t<A.length;t++){let r=Gt(A[t]);r!==null&&e.push(r)}return e}function Gt(A){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Nt&&e instanceof SharedArrayBuffer?null:e}var Ce=Ot;function Z(A,e){return function(){return A.apply(e,arguments)}}var{toString:Tt}=Object.prototype,{getPrototypeOf:NA}=Object,IA=(A=>e=>{let t=Tt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),e=>IA(e)===A),gA=A=>e=>typeof e===A,{isArray:q}=Array,X=gA("undefined");function Lt(A){return A!==null&&!X(A)&&A.constructor!==null&&!X(A.constructor)&&O(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var fe=G("ArrayBuffer");function xt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&fe(A.buffer),e}var Pt=gA("string"),O=gA("function"),Ee=gA("number"),lA=A=>A!==null&&typeof A=="object",Mt=A=>A===!0||A===!1,sA=A=>{if(IA(A)!=="object")return!1;let e=NA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Jt=G("Date"),Ht=G("File"),Yt=G("Blob"),qt=G("FileList"),Kt=A=>lA(A)&&O(A.pipe),vt=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||O(A.append)&&((e=IA(A))==="formdata"||e==="object"&&O(A.toString)&&A.toString()==="[object FormData]"))},jt=G("URLSearchParams"),Wt=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function $(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,n;if(typeof A!="object"&&(A=[A]),q(A))for(r=0,n=A.length;r<n;r++)e.call(null,A[r],r,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),a=i.length,g;for(r=0;r<a;r++)g=i[r],e.call(null,A[g],g,A)}}function Qe(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,n;for(;r-- >0;)if(n=t[r],e===n.toLowerCase())return n;return null}var ue=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),de=A=>!X(A)&&A!==ue;function RA(){let{caseless:A}=de(this)&&this||{},e={},t=(r,n)=>{let i=A&&Qe(e,n)||n;sA(e[i])&&sA(r)?e[i]=RA(e[i],r):sA(r)?e[i]=RA({},r):q(r)?e[i]=r.slice():e[i]=r};for(let r=0,n=arguments.length;r<n;r++)arguments[r]&&$(arguments[r],t);return e}var _t=(A,e,t,{allOwnKeys:r}={})=>($(e,(n,i)=>{t&&O(n)?A[i]=Z(n,t):A[i]=n},{allOwnKeys:r}),A),zt=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Vt=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Zt=(A,e,t,r)=>{let n,i,a,g={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),i=n.length;i-- >0;)a=n[i],(!r||r(a,A,e))&&!g[a]&&(e[a]=A[a],g[a]=!0);A=t!==!1&&NA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Xt=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},$t=A=>{if(!A)return null;if(q(A))return A;let e=A.length;if(!Ee(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Ar=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&NA(Uint8Array)),er=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),n;for(;(n=r.next())&&!n.done;){let i=n.value;e.call(A,i[0],i[1])}},tr=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},rr=G("HTMLFormElement"),nr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,n){return r.toUpperCase()+n}),ce=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),ir=G("RegExp"),pe=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};$(t,(n,i)=>{let a;(a=e(n,i,A))!==!1&&(r[i]=a||n)}),Object.defineProperties(A,r)},ar=A=>{pe(A,(e,t)=>{if(O(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(O(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},or=(A,e)=>{let t={},r=n=>{n.forEach(i=>{t[i]=!0})};return q(A)?r(A):r(String(A).split(e)),t},sr=()=>{},Ir=(A,e)=>(A=+A,Number.isFinite(A)?A:e),UA="abcdefghijklmnopqrstuvwxyz",Be="0123456789",me={DIGIT:Be,ALPHA:UA,ALPHA_DIGIT:UA+UA.toUpperCase()+Be},gr=(A=16,e=me.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function lr(A){return!!(A&&O(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var Cr=A=>{let e=new Array(10),t=(r,n)=>{if(lA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[n]=r;let i=q(r)?[]:{};return $(r,(a,g)=>{let f=t(a,n+1);!X(f)&&(i[g]=f)}),e[n]=void 0,i}}return r};return t(A,0)},cr=G("AsyncFunction"),Br=A=>A&&(lA(A)||O(A))&&O(A.then)&&O(A.catch),s={isArray:q,isArrayBuffer:fe,isBuffer:Lt,isFormData:vt,isArrayBufferView:xt,isString:Pt,isNumber:Ee,isBoolean:Mt,isObject:lA,isPlainObject:sA,isUndefined:X,isDate:Jt,isFile:Ht,isBlob:Yt,isRegExp:ir,isFunction:O,isStream:Kt,isURLSearchParams:jt,isTypedArray:Ar,isFileList:qt,forEach:$,merge:RA,extend:_t,trim:Wt,stripBOM:zt,inherits:Vt,toFlatObject:Zt,kindOf:IA,kindOfTest:G,endsWith:Xt,toArray:$t,forEachEntry:er,matchAll:tr,isHTMLForm:rr,hasOwnProperty:ce,hasOwnProp:ce,reduceDescriptors:pe,freezeMethods:ar,toObjectSet:or,toCamelCase:nr,noop:sr,toFiniteNumber:Ir,findKey:Qe,global:ue,isContextDefined:de,ALPHABET:me,generateString:gr,isSpecCompliantForm:lr,toJSONObject:Cr,isAsyncFn:cr,isThenable:Br};function K(A,e,t,r,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),n&&(this.response=n)}s.inherits(K,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var he=K.prototype,ye={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ye[A]={value:A}});Object.defineProperties(K,ye);Object.defineProperty(he,"isAxiosError",{value:!0});K.from=(A,e,t,r,n,i)=>{let a=Object.create(he);return s.toFlatObject(A,a,function(f){return f!==Error.prototype},g=>g!=="isAxiosError"),K.call(a,A.message,e,t,r,n),a.cause=A,a.name=A.name,i&&Object.assign(a,i),a};var u=K;var CA=null;function OA(A){return s.isPlainObject(A)||s.isArray(A)}function De(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function we(A,e,t){return A?A.concat(e).map(function(n,i){return n=De(n),!t&&i?"["+n+"]":n}).join(t?".":""):e}function fr(A){return s.isArray(A)&&!A.some(OA)}var Er=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function Qr(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(CA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(E,m){return!s.isUndefined(m[E])});let r=t.metaTokens,n=t.visitor||o,i=t.dots,a=t.indexes,f=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(n))throw new TypeError("visitor must be a function");function I(l){if(l===null)return"";if(s.isDate(l))return l.toISOString();if(!f&&s.isBlob(l))throw new u("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(l)||s.isTypedArray(l)?f&&typeof Blob=="function"?new Blob([l]):Buffer.from(l):l}function o(l,E,m){let h=l;if(l&&!m&&typeof l=="object"){if(s.endsWith(E,"{}"))E=r?E:E.slice(0,-2),l=JSON.stringify(l);else if(s.isArray(l)&&fr(l)||(s.isFileList(l)||s.endsWith(E,"[]"))&&(h=s.toArray(l)))return E=De(E),h.forEach(function(w,SA){!(s.isUndefined(w)||w===null)&&e.append(a===!0?we([E],SA,i):a===null?E:E+"[]",I(w))}),!1}return OA(l)?!0:(e.append(we(m,E,i),I(l)),!1)}let B=[],c=Object.assign(Er,{defaultVisitor:o,convertValue:I,isVisitable:OA});function C(l,E){if(!s.isUndefined(l)){if(B.indexOf(l)!==-1)throw Error("Circular reference detected in "+E.join("."));B.push(l),s.forEach(l,function(h,p){(!(s.isUndefined(h)||h===null)&&n.call(e,h,s.isString(p)?p.trim():p,E,c))===!0&&C(h,E?E.concat(p):[p])}),B.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return C(A),e}var L=Qr;function be(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function Se(A,e){this._pairs=[],A&&L(A,this,e)}var Fe=Se.prototype;Fe.append=function(e,t){this._pairs.push([e,t])};Fe.toString=function(e){let t=e?function(r){return e.call(this,r,be)}:be;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};var cA=Se;function ur(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function AA(A,e,t){if(!e)return A;let r=t&&t.encode||ur,n=t&&t.serialize,i;if(n?i=n(e,t):i=s.isURLSearchParams(e)?e.toString():new cA(e,t).toString(r),i){let a=A.indexOf("#");a!==-1&&(A=A.slice(0,a)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var GA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(r){r!==null&&e(r)})}},TA=GA;var BA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var ke=typeof URLSearchParams<"u"?URLSearchParams:cA;var Ue=typeof FormData<"u"?FormData:null;var Re=typeof Blob<"u"?Blob:null;var Ne={isBrowser:!0,classes:{URLSearchParams:ke,FormData:Ue,Blob:Re},protocols:["http","https","file","blob","url","data"]};var LA={};mt(LA,{hasBrowserEnv:()=>Oe,hasStandardBrowserEnv:()=>dr,hasStandardBrowserWebWorkerEnv:()=>pr});var Oe=typeof window<"u"&&typeof document<"u",dr=(A=>Oe&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),pr=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")();var F={...LA,...Ne};function xA(A,e){return L(A,new F.classes.URLSearchParams,Object.assign({visitor:function(t,r,n,i){return F.isNode&&s.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function mr(A){return s.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function hr(A){let e={},t=Object.keys(A),r,n=t.length,i;for(r=0;r<n;r++)i=t[r],e[i]=A[i];return e}function yr(A){function e(t,r,n,i){let a=t[i++],g=Number.isFinite(+a),f=i>=t.length;return a=!a&&s.isArray(n)?n.length:a,f?(s.hasOwnProp(n,a)?n[a]=[n[a],r]:n[a]=r,!g):((!n[a]||!s.isObject(n[a]))&&(n[a]=[]),e(t,r,n[a],i)&&s.isArray(n[a])&&(n[a]=hr(n[a])),!g)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(r,n)=>{e(mr(r),n,t,0)}),t}return null}var fA=yr;function wr(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var PA={transitional:BA,adapter:["xhr","http"],transformRequest:[function(e,t){let r=t.getContentType()||"",n=r.indexOf("application/json")>-1,i=s.isObject(e);if(i&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return n&&n?JSON.stringify(fA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let g;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return xA(e,this.formSerializer).toString();if((g=s.isFileList(e))||r.indexOf("multipart/form-data")>-1){let f=this.env&&this.env.FormData;return L(g?{"files[]":e}:e,f&&new f,this.formSerializer)}}return i||n?(t.setContentType("application/json",!1),wr(e)):e}],transformResponse:[function(e){let t=this.transitional||PA.transitional,r=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&s.isString(e)&&(r&&!this.responseType||n)){let a=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(g){if(a)throw g.name==="SyntaxError"?u.from(g,u.ERR_BAD_RESPONSE,this,null,this.response):g}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:F.classes.FormData,Blob:F.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};s.forEach(["delete","get","head","post","put","patch"],A=>{PA.headers[A]={}});var v=PA;var Dr=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ge=A=>{let e={},t,r,n;return A&&A.split(`
`).forEach(function(a){n=a.indexOf(":"),t=a.substring(0,n).trim().toLowerCase(),r=a.substring(n+1).trim(),!(!t||e[t]&&Dr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var Te=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function EA(A){return A===!1||A==null?A:s.isArray(A)?A.map(EA):String(A)}function br(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var Sr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function MA(A,e,t,r,n){if(s.isFunction(r))return r.call(this,e,t);if(n&&(e=t),!!s.isString(e)){if(s.isString(r))return e.indexOf(r)!==-1;if(s.isRegExp(r))return r.test(e)}}function Fr(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function kr(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(n,i,a){return this[r].call(this,e,n,i,a)},configurable:!0})})}var j=class{constructor(e){e&&this.set(e)}set(e,t,r){let n=this;function i(g,f,I){let o=eA(f);if(!o)throw new Error("header name must be a non-empty string");let B=s.findKey(n,o);(!B||n[B]===void 0||I===!0||I===void 0&&n[B]!==!1)&&(n[B||f]=EA(g))}let a=(g,f)=>s.forEach(g,(I,o)=>i(I,o,f));return s.isPlainObject(e)||e instanceof this.constructor?a(e,t):s.isString(e)&&(e=e.trim())&&!Sr(e)?a(Ge(e),t):e!=null&&i(t,e,r),this}get(e,t){if(e=eA(e),e){let r=s.findKey(this,e);if(r){let n=this[r];if(!t)return n;if(t===!0)return br(n);if(s.isFunction(t))return t.call(this,n,r);if(s.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=eA(e),e){let r=s.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||MA(this,this[r],r,t)))}return!1}delete(e,t){let r=this,n=!1;function i(a){if(a=eA(a),a){let g=s.findKey(r,a);g&&(!t||MA(r,r[g],g,t))&&(delete r[g],n=!0)}}return s.isArray(e)?e.forEach(i):i(e),n}clear(e){let t=Object.keys(this),r=t.length,n=!1;for(;r--;){let i=t[r];(!e||MA(this,this[i],i,e,!0))&&(delete this[i],n=!0)}return n}normalize(e){let t=this,r={};return s.forEach(this,(n,i)=>{let a=s.findKey(r,i);if(a){t[a]=EA(n),delete t[i];return}let g=e?Fr(i):String(i).trim();g!==i&&delete t[i],t[g]=EA(n),r[g]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(r,n)=>{r!=null&&r!==!1&&(t[n]=e&&s.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(n=>r.set(n)),r}static accessor(e){let r=(this[Te]=this[Te]={accessors:{}}).accessors,n=this.prototype;function i(a){let g=eA(a);r[g]||(kr(n,a),r[g]=!0)}return s.isArray(e)?e.forEach(i):i(e),this}};j.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.reduceDescriptors(j.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});s.freezeMethods(j);var k=j;function tA(A,e){let t=this||v,r=e||t,n=k.from(r.headers),i=r.data;return s.forEach(A,function(g){i=g.call(t,i,n.normalize(),e?e.status:void 0)}),n.normalize(),i}function rA(A){return!!(A&&A.__CANCEL__)}function Le(A,e,t){u.call(this,A??"canceled",u.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(Le,u,{__CANCEL__:!0});var x=Le;function JA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new u("Request failed with status code "+t.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var xe=F.hasStandardBrowserEnv?function(){return{write:function(t,r,n,i,a,g){let f=[];f.push(t+"="+encodeURIComponent(r)),s.isNumber(n)&&f.push("expires="+new Date(n).toGMTString()),s.isString(i)&&f.push("path="+i),s.isString(a)&&f.push("domain="+a),g===!0&&f.push("secure"),document.cookie=f.join("; ")},read:function(t){let r=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return r?decodeURIComponent(r[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function HA(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function YA(A,e){return e?A.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):A}function nA(A,e){return A&&!HA(e)?YA(A,e):e}var Pe=F.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function n(i){let a=i;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=n(window.location.href),function(a){let g=s.isString(a)?n(a):a;return g.protocol===r.protocol&&g.host===r.host}}():function(){return function(){return!0}}();function qA(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Ur(A,e){A=A||10;let t=new Array(A),r=new Array(A),n=0,i=0,a;return e=e!==void 0?e:1e3,function(f){let I=Date.now(),o=r[i];a||(a=I),t[n]=f,r[n]=I;let B=i,c=0;for(;B!==n;)c+=t[B++],B=B%A;if(n=(n+1)%A,n===i&&(i=(i+1)%A),I-a<e)return;let C=o&&I-o;return C?Math.round(c*1e3/C):void 0}}var Me=Ur;function Je(A,e){let t=0,r=Me(50,250);return n=>{let i=n.loaded,a=n.lengthComputable?n.total:void 0,g=i-t,f=r(g),I=i<=a;t=i;let o={loaded:i,total:a,progress:a?i/a:void 0,bytes:g,rate:f||void 0,estimated:f&&a&&I?(a-i)/f:void 0,event:n};o[e?"download":"upload"]=!0,A(o)}}var Rr=typeof XMLHttpRequest<"u",He=Rr&&function(A){return new Promise(function(t,r){let n=A.data,i=k.from(A.headers).normalize(),a=A.responseType,g;function f(){A.cancelToken&&A.cancelToken.unsubscribe(g),A.signal&&A.signal.removeEventListener("abort",g)}let I;if(s.isFormData(n)){if(F.hasStandardBrowserEnv||F.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((I=i.getContentType())!==!1){let[l,...E]=I?I.split(";").map(m=>m.trim()).filter(Boolean):[];i.setContentType([l||"multipart/form-data",...E].join("; "))}}let o=new XMLHttpRequest;if(A.auth){let l=A.auth.username||"",E=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(l+":"+E))}let B=nA(A.baseURL,A.url);o.open(A.method.toUpperCase(),AA(B,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function c(){if(!o)return;let l=k.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),m={data:!a||a==="text"||a==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:l,config:A,request:o};JA(function(p){t(p),f()},function(p){r(p),f()},m),o=null}if("onloadend"in o?o.onloadend=c:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(c)},o.onabort=function(){o&&(r(new u("Request aborted",u.ECONNABORTED,A,o)),o=null)},o.onerror=function(){r(new u("Network Error",u.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let E=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",m=A.transitional||BA;A.timeoutErrorMessage&&(E=A.timeoutErrorMessage),r(new u(E,m.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,o)),o=null},F.hasStandardBrowserEnv){let l=Pe(B)&&A.xsrfCookieName&&xe.read(A.xsrfCookieName);l&&i.set(A.xsrfHeaderName,l)}n===void 0&&i.setContentType(null),"setRequestHeader"in o&&s.forEach(i.toJSON(),function(E,m){o.setRequestHeader(m,E)}),s.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),a&&a!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",Je(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Je(A.onUploadProgress)),(A.cancelToken||A.signal)&&(g=l=>{o&&(r(!l||l.type?new x(null,A,o):l),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(g),A.signal&&(A.signal.aborted?g():A.signal.addEventListener("abort",g)));let C=qA(B);if(C&&F.protocols.indexOf(C)===-1){r(new u("Unsupported protocol "+C+":",u.ERR_BAD_REQUEST,A));return}o.send(n||null)})};var KA={http:CA,xhr:He};s.forEach(KA,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ye=A=>`- ${A}`,Nr=A=>s.isFunction(A)||A===null||A===!1,QA={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,r,n={};for(let i=0;i<e;i++){t=A[i];let a;if(r=t,!Nr(t)&&(r=KA[(a=String(t)).toLowerCase()],r===void 0))throw new u(`Unknown adapter '${a}'`);if(r)break;n[a||"#"+i]=r}if(!r){let i=Object.entries(n).map(([g,f])=>`adapter ${g} `+(f===!1?"is not supported by the environment":"is not available in the build")),a=e?i.length>1?`since :
`+i.map(Ye).join(`
`):" "+Ye(i[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+a,"ERR_NOT_SUPPORT")}return r},adapters:KA};function vA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new x(null,A)}function uA(A){return vA(A),A.headers=k.from(A.headers),A.data=tA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),QA.getAdapter(A.adapter||v.adapter)(A).then(function(r){return vA(A),r.data=tA.call(A,A.transformResponse,r),r.headers=k.from(r.headers),r},function(r){return rA(r)||(vA(A),r&&r.response&&(r.response.data=tA.call(A,A.transformResponse,r.response),r.response.headers=k.from(r.response.headers))),Promise.reject(r)})}var qe=A=>A instanceof k?A.toJSON():A;function T(A,e){e=e||{};let t={};function r(I,o,B){return s.isPlainObject(I)&&s.isPlainObject(o)?s.merge.call({caseless:B},I,o):s.isPlainObject(o)?s.merge({},o):s.isArray(o)?o.slice():o}function n(I,o,B){if(s.isUndefined(o)){if(!s.isUndefined(I))return r(void 0,I,B)}else return r(I,o,B)}function i(I,o){if(!s.isUndefined(o))return r(void 0,o)}function a(I,o){if(s.isUndefined(o)){if(!s.isUndefined(I))return r(void 0,I)}else return r(void 0,o)}function g(I,o,B){if(B in e)return r(I,o);if(B in A)return r(void 0,I)}let f={url:i,method:i,data:i,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:g,headers:(I,o)=>n(qe(I),qe(o),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(o){let B=f[o]||n,c=B(A[o],e[o],o);s.isUndefined(c)&&B!==g||(t[o]=c)}),t}var dA="1.6.1";var jA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{jA[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var Ke={};jA.transitional=function(e,t,r){function n(i,a){return"[Axios v"+dA+"] Transitional option '"+i+"'"+a+(r?". "+r:"")}return(i,a,g)=>{if(e===!1)throw new u(n(a," has been removed"+(t?" in "+t:"")),u.ERR_DEPRECATED);return t&&!Ke[a]&&(Ke[a]=!0,console.warn(n(a," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,a,g):!0}};function Or(A,e,t){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),n=r.length;for(;n-- >0;){let i=r[n],a=e[i];if(a){let g=A[i],f=g===void 0||a(g,i,A);if(f!==!0)throw new u("option "+i+" must be "+f,u.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new u("Unknown option "+i,u.ERR_BAD_OPTION)}}var pA={assertOptions:Or,validators:jA};var P=pA.validators,W=class{constructor(e){this.defaults=e,this.interceptors={request:new TA,response:new TA}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=T(this.defaults,t);let{transitional:r,paramsSerializer:n,headers:i}=t;r!==void 0&&pA.assertOptions(r,{silentJSONParsing:P.transitional(P.boolean),forcedJSONParsing:P.transitional(P.boolean),clarifyTimeoutError:P.transitional(P.boolean)},!1),n!=null&&(s.isFunction(n)?t.paramsSerializer={serialize:n}:pA.assertOptions(n,{encode:P.function,serialize:P.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let a=i&&s.merge(i.common,i[t.method]);i&&s.forEach(["delete","get","head","post","put","patch","common"],l=>{delete i[l]}),t.headers=k.concat(a,i);let g=[],f=!0;this.interceptors.request.forEach(function(E){typeof E.runWhen=="function"&&E.runWhen(t)===!1||(f=f&&E.synchronous,g.unshift(E.fulfilled,E.rejected))});let I=[];this.interceptors.response.forEach(function(E){I.push(E.fulfilled,E.rejected)});let o,B=0,c;if(!f){let l=[uA.bind(this),void 0];for(l.unshift.apply(l,g),l.push.apply(l,I),c=l.length,o=Promise.resolve(t);B<c;)o=o.then(l[B++],l[B++]);return o}c=g.length;let C=t;for(B=0;B<c;){let l=g[B++],E=g[B++];try{C=l(C)}catch(m){E.call(this,m);break}}try{o=uA.call(this,C)}catch(l){return Promise.reject(l)}for(B=0,c=I.length;B<c;)o=o.then(I[B++],I[B++]);return o}getUri(e){e=T(this.defaults,e);let t=nA(e.baseURL,e.url);return AA(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){W.prototype[e]=function(t,r){return this.request(T(r||{},{method:e,url:t,data:(r||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(r){return function(i,a,g){return this.request(T(g||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:a}))}}W.prototype[e]=t(),W.prototype[e+"Form"]=t(!0)});var iA=W;var WA=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(n=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](n);r._listeners=null}),this.promise.then=n=>{let i,a=new Promise(g=>{r.subscribe(g),i=g}).then(n);return a.cancel=function(){r.unsubscribe(i)},a},e(function(i,a,g){r.reason||(r.reason=new x(i,a,g),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},ve=WA;function _A(A){return function(t){return A.apply(null,t)}}function zA(A){return s.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,e])=>{VA[e]=A});var je=VA;function We(A){let e=new iA(A),t=Z(iA.prototype.request,e);return s.extend(t,iA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return We(T(A,n))},t}var y=We(v);y.Axios=iA;y.CanceledError=x;y.CancelToken=ve;y.isCancel=rA;y.VERSION=dA;y.toFormData=L;y.AxiosError=u;y.Cancel=y.CanceledError;y.all=function(e){return Promise.all(e)};y.spread=_A;y.isAxiosError=zA;y.mergeConfig=T;y.AxiosHeaders=k;y.formToJSON=A=>fA(s.isHTMLForm(A)?new FormData(A):A);y.getAdapter=QA.getAdapter;y.HttpStatusCode=je;y.default=y;var J=y;var{Axios:Io,AxiosError:go,CanceledError:lo,isCancel:Co,CancelToken:co,VERSION:Bo,all:fo,Cancel:Eo,isAxiosError:Qo,spread:uo,toFormData:po,AxiosHeaders:mo,HttpStatusCode:ho,formToJSON:yo,getAdapter:wo,mergeConfig:Do}=J;var ze=Symbol("Comlink.proxy"),Gr=Symbol("Comlink.endpoint"),$A=Symbol("Comlink.releaseProxy"),ZA=Symbol("Comlink.finalizer"),hA=Symbol("Comlink.thrown"),Ve=A=>typeof A=="object"&&A!==null||typeof A=="function",Tr={canHandle:A=>Ve(A)&&A[ze],serialize(A){let{port1:e,port2:t}=new MessageChannel;return Xe(A,e),[t,[t]]},deserialize(A){return A.start(),Ae(A)}},Lr={canHandle:A=>Ve(A)&&hA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Ze=new Map([["proxy",Tr],["throw",Lr]]);function xr(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function Xe(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(n){if(!n||!n.data)return;if(!xr(t,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:i,type:a,path:g}=Object.assign({path:[]},n.data),f=(n.data.argumentList||[]).map(H),I;try{let o=g.slice(0,-1).reduce((c,C)=>c[C],A),B=g.reduce((c,C)=>c[C],A);switch(a){case"GET":I=B;break;case"SET":o[g.slice(-1)[0]]=H(n.data.value),I=!0;break;case"APPLY":I=B.apply(o,f);break;case"CONSTRUCT":{let c=new B(...f);I=Yr(c)}break;case"ENDPOINT":{let{port1:c,port2:C}=new MessageChannel;Xe(A,C),I=ee(c,[c])}break;case"RELEASE":I=void 0;break;default:return}}catch(o){I={value:o,[hA]:0}}Promise.resolve(I).catch(o=>({value:o,[hA]:0})).then(o=>{let[B,c]=DA(o);e.postMessage(Object.assign(Object.assign({},B),{id:i}),c),a==="RELEASE"&&(e.removeEventListener("message",r),$e(e),ZA in A&&typeof A[ZA]=="function"&&A[ZA]())}).catch(o=>{let[B,c]=DA({value:new TypeError("Unserializable return value"),[hA]:0});e.postMessage(Object.assign(Object.assign({},B),{id:i}),c)})}),e.start&&e.start()}function Pr(A){return A.constructor.name==="MessagePort"}function $e(A){Pr(A)&&A.close()}function Ae(A,e){return XA(A,[],e)}function mA(A){if(A)throw new Error("Proxy has been released and is not useable")}function At(A){return _(A,{type:"RELEASE"}).then(()=>{$e(A)})}var yA=new WeakMap,wA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(yA.get(A)||0)-1;yA.set(A,e),e===0&&At(A)});function Mr(A,e){let t=(yA.get(e)||0)+1;yA.set(e,t),wA&&wA.register(A,e,A)}function Jr(A){wA&&wA.unregister(A)}function XA(A,e=[],t=function(){}){let r=!1,n=new Proxy(t,{get(i,a){if(mA(r),a===$A)return()=>{Jr(n),At(A),r=!0};if(a==="then"){if(e.length===0)return{then:()=>n};let g=_(A,{type:"GET",path:e.map(f=>f.toString())}).then(H);return g.then.bind(g)}return XA(A,[...e,a])},set(i,a,g){mA(r);let[f,I]=DA(g);return _(A,{type:"SET",path:[...e,a].map(o=>o.toString()),value:f},I).then(H)},apply(i,a,g){mA(r);let f=e[e.length-1];if(f===Gr)return _(A,{type:"ENDPOINT"}).then(H);if(f==="bind")return XA(A,e.slice(0,-1));let[I,o]=_e(g);return _(A,{type:"APPLY",path:e.map(B=>B.toString()),argumentList:I},o).then(H)},construct(i,a){mA(r);let[g,f]=_e(a);return _(A,{type:"CONSTRUCT",path:e.map(I=>I.toString()),argumentList:g},f).then(H)}});return Mr(n,A),n}function Hr(A){return Array.prototype.concat.apply([],A)}function _e(A){let e=A.map(DA);return[e.map(t=>t[0]),Hr(e.map(t=>t[1]))]}var et=new WeakMap;function ee(A,e){return et.set(A,e),A}function Yr(A){return Object.assign(A,{[ze]:!0})}function DA(A){for(let[e,t]of Ze)if(t.canHandle(A)){let[r,n]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},n]}return[{type:"RAW",value:A},et.get(A)||[]]}function H(A){switch(A.type){case"HANDLER":return Ze.get(A.name).deserialize(A.value);case"RAW":return A.value}}function _(A,e,t){return new Promise(r=>{let n=qr();A.addEventListener("message",function i(a){!a.data||!a.data.id||a.data.id!==n||(A.removeEventListener("message",i),r(a.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),t)})}function qr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function rt(A){let e=Ae(A),t=A;return t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.workerProxy[$A](),t.originalTerminate()},{workerProxy:e,worker:t}}async function Kr(A,e){let t;if(A!=null){let a=A;return a.workerProxy!==void 0?(t=a.workerProxy,{workerProxy:t,worker:a}):rt(A)}let r=typeof e>"u"?Y.pipelineWorkerUrl:e,n=null,i=Y.webWorkersUrl;if(typeof i<"u"){console.warn("itkConfig webWorkersUrl is deprecated. Please use pipelineWorkerUrl with the full path to the pipeline worker.");let a="min.",g=i;if(g.startsWith("http")){let f=await J.get(`${g}/bundles/pipeline.${a}worker.js`,{responseType:"blob"}),I=URL.createObjectURL(f.data);n=new Worker(I,{type:"module"})}else n=new Worker(`${g}/bundles/pipeline.${a}worker.js`,{type:"module"})}else if(r===null)n=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(r.startsWith("http")){let a=await J.get(r,{responseType:"blob"}),g=URL.createObjectURL(a.data);n=new Worker(g,{type:"module"})}else n=new Worker(r,{type:"module"});return rt(n)}var nt=Kr;var vr;function it(){return vr}var jr;function at(){return jr}function Wr(A){return[A.data,A.direction]}var te=Wr;function _r(A){return[A.points,A.pointData,A.cells,A.cellData]}var ot=_r;async function zr(A,e){let t="unknown";typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${e}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let r=`${t}.wasm`,i=(await J.get(r,{responseType:"arraybuffer"})).data;return(await import(`${t}.js`)).default({wasmBinary:i})}var st=zr;var It=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Ct=typeof globalThis.SharedArrayBuffer=="function",gt=new TextEncoder,lt=new TextDecoder("utf-8");function M(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),i=A.fs_stat(e).size,a=null;Ct?a=new SharedArrayBuffer(i):a=new ArrayBuffer(i);let g=new Uint8Array(a);return A.fs_read(r,g,0,i,0),A.fs_close(r),g}function ct(A,e,t){let r=null;Ct?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let n=new Uint8Array(r),i=new Uint8Array(A.HEAPU8.buffer,e,t);return n.set(i),n}function S(A,e,t,r){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function z(A,e,t){let r=JSON.stringify(e),n=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,r.length]);A.writeAsciiToMemory(r,n,!1)}function N(A,e,t,r){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),a=ct(A,n,i);return b(r,a.buffer)}function re(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.AsciiToString(t);return JSON.parse(r)}function Vr(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(I,o){var B;switch(I.type){case d.TextStream:{let c=gt.encode(I.data.data),C=S(A,c,o,0),l={size:c.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};z(A,l,o);break}case d.JsonCompatible:{let c=gt.encode(JSON.stringify(I.data)),C=S(A,c,o,0),l={size:c.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};z(A,l,o);break}case d.BinaryStream:{let c=I.data.data,C=S(A,c,o,0),l={size:c.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};z(A,l,o);break}case d.TextFile:{A.fs_writeFile(I.data.path,I.data.data);break}case d.BinaryFile:{A.fs_writeFile(I.data.path,I.data.data);break}case d.Image:{let c=I.data,C=S(A,c.data,o,0),l=S(A,c.direction,o,1),E=typeof((B=c.metadata)===null||B===void 0?void 0:B.entries)<"u"?JSON.stringify(Array.from(c.metadata.entries())):"[]",m={imageType:c.imageType,name:c.name,origin:c.origin,spacing:c.spacing,direction:`data:application/vnd.itk.address,0:${l}`,size:c.size,data:`data:application/vnd.itk.address,0:${C}`,metadata:E};z(A,m,o);break}case d.Mesh:{let c=I.data,C=S(A,c.points,o,0),l=S(A,c.cells,o,1),E=S(A,c.pointData,o,2),m=S(A,c.cellData,o,3),h={meshType:c.meshType,name:c.name,numberOfPoints:c.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,numberOfCells:c.numberOfCells,cells:`data:application/vnd.itk.address,0:${l}`,cellBufferSize:c.cellBufferSize,numberOfPointPixels:c.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:c.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${m}`};z(A,h,o);break}case d.PolyData:{let c=I.data,C=S(A,c.points,o,0),l=S(A,c.vertices,o,1),E=S(A,c.lines,o,2),m=S(A,c.polygons,o,3),h=S(A,c.triangleStrips,o,4),p=S(A,c.pointData,o,5),w=S(A,c.pointData,o,6),SA={polyDataType:c.polyDataType,name:c.name,numberOfPoints:c.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,verticesBufferSize:c.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${l}`,linesBufferSize:c.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:c.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${m}`,triangleStripsBufferSize:c.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${h}`,numberOfPointPixels:c.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:c.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${w}`};z(A,SA,o);break}case U.Text:{A.fs_writeFile(I.path,I.data);break}case U.Binary:{A.fs_writeFile(I.path,I.data);break}case U.Image:{let c=I.data,C={imageType:c.imageType,name:c.name,origin:c.origin,spacing:c.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:c.size,data:"data:application/vnd.itk.path,data/data.raw"};if(A.fs_mkdirs(`${I.path}/data`),A.fs_writeFile(`${I.path}/index.json`,JSON.stringify(C)),c.data===null)throw Error("image.data is null");A.fs_writeFile(`${I.path}/data/data.raw`,new Uint8Array(c.data.buffer)),A.fs_writeFile(`${I.path}/data/direction.raw`,new Uint8Array(c.direction.buffer));break}case U.Mesh:{let c=I.data,C={meshType:c.meshType,name:c.name,numberOfPoints:c.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:c.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:c.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:c.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:c.cellBufferSize};if(A.fs_mkdirs(`${I.path}/data`),A.fs_writeFile(`${I.path}/index.json`,JSON.stringify(C)),C.numberOfPoints>0){if(c.points===null)throw Error("mesh.points is null");A.fs_writeFile(`${I.path}/data/points.raw`,new Uint8Array(c.points.buffer))}if(C.numberOfPointPixels>0){if(c.pointData===null)throw Error("mesh.pointData is null");A.fs_writeFile(`${I.path}/data/pointData.raw`,new Uint8Array(c.pointData.buffer))}if(C.numberOfCells>0){if(c.cells===null)throw Error("mesh.cells is null");A.fs_writeFile(`${I.path}/data/cells.raw`,new Uint8Array(c.cells.buffer))}if(C.numberOfCellPixels>0){if(c.cellData===null)throw Error("mesh.cellData is null");A.fs_writeFile(`${I.path}/data/cellData.raw`,new Uint8Array(c.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(I){throw typeof I=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(I)):console.error("Build module in Debug mode for exception message information.")),I}finally{A.stackRestore(n)}let a=A.getModuleStdout(),g=A.getModuleStderr(),f=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(I,o){let B=null;switch(I.type){case d.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,o,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,o,0]),E=new Uint8Array(A.HEAPU8.buffer,C,l);B={data:lt.decode(E)};break}case d.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,o,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,o,0]),E=new Uint8Array(A.HEAPU8.buffer,C,l);B=JSON.parse(lt.decode(E));break}case d.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,o,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,o,0]);B={data:ct(A,C,l)};break}case d.TextFile:{B={path:I.data.path,data:A.fs_readFile(I.data.path,{encoding:"utf8"})};break}case d.BinaryFile:{B={path:I.data.path,data:M(A,I.data.path)};break}case d.Image:{let C=re(A,o);C.data=N(A,o,0,C.imageType.componentType),C.direction=N(A,o,1,D.Float64),C.metadata=new Map(C.metadata),B=C;break}case d.Mesh:{let C=re(A,o);C.numberOfPoints>0?C.points=N(A,o,0,C.meshType.pointComponentType):C.points=b(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=N(A,o,1,C.meshType.cellComponentType):C.cells=b(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=N(A,o,2,C.meshType.pointPixelComponentType):C.pointData=b(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,o,3,C.meshType.cellPixelComponentType):C.cellData=b(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),B=C;break}case d.PolyData:{let C=re(A,o);C.numberOfPoints>0?C.points=N(A,o,0,D.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=N(A,o,1,Q.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=N(A,o,2,Q.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=N(A,o,3,Q.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=N(A,o,4,Q.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=N(A,o,5,C.polyDataType.pointPixelComponentType):C.pointData=b(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,o,6,C.polyDataType.cellPixelComponentType):C.cellData=b(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),B=C;break}case U.Text:{if(typeof I.path>"u")throw new Error("output.path not defined");B=A.fs_readFile(I.path,{encoding:"utf8"});break}case U.Binary:{if(typeof I.path>"u")throw new Error("output.path not defined");B=M(A,I.path);break}case U.Image:{if(typeof I.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${I.path}/index.json`,{encoding:"utf8"}),l=JSON.parse(C),E=M(A,`${I.path}/data/data.raw`);l.data=b(l.imageType.componentType,E.buffer);let m=M(A,`${I.path}/data/direction.raw`);l.direction=b(D.Float64,m.buffer),B=l;break}case U.Mesh:{if(typeof I.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${I.path}/index.json`,{encoding:"utf8"}),l=JSON.parse(C);if(l.numberOfPoints>0){let E=M(A,`${I.path}/data/points.raw`);l.points=b(l.meshType.pointComponentType,E.buffer)}else l.points=b(l.meshType.pointComponentType,new ArrayBuffer(0));if(l.numberOfPointPixels>0){let E=M(A,`${I.path}/data/pointData.raw`);l.pointData=b(l.meshType.pointPixelComponentType,E.buffer)}else l.pointData=b(l.meshType.pointPixelComponentType,new ArrayBuffer(0));if(l.numberOfCells>0){let E=M(A,`${I.path}/data/cells.raw`);l.cells=b(l.meshType.cellComponentType,E.buffer)}else l.cells=b(l.meshType.cellComponentType,new ArrayBuffer(0));if(l.numberOfCellPixels>0){let E=M(A,`${I.path}/data/cellData.raw`);l.cellData=b(l.meshType.cellPixelComponentType,E.buffer)}else l.cellData=b(l.meshType.cellPixelComponentType,new ArrayBuffer(0));B=l;break}default:throw Error("Unsupported output InterfaceType")}let c={type:I.type,data:B};f.push(c)}),{returnValue:i,stdout:a,stderr:g,outputs:f}}var Bt=Vr;var ne=new Map;async function Zr(A){let e=A,t=A;if(typeof A!="string"&&(e=new URL(A.href),t=e.href),ne.has(t))return ne.get(t);{let r=await st(A,Y.pipelinesUrl);return ne.set(t,r),r}}async function Xr(A,e,t,r,n,i){var a,g;if(!await It()){let p="WebAssembly SIMD support is required -- please update your browser.";throw alert(p),new Error(p)}if(A===!1){let p=await Zr(e.toString());return Bt(p,t,r,n)}let f=A,I=(a=i?.pipelineWorkerUrl)!==null&&a!==void 0?a:null,o=typeof I!="string"&&typeof I?.href<"u"?I.href:I,{workerProxy:B,worker:c}=await nt(f,o);f=c;let C=[];n!=null&&n.length>0&&n.forEach(function(p){if(p.type===d.BinaryStream){let w=p.data.data;C.push(w)}else if(p.type===d.BinaryFile){let w=p.data.data;C.push(w)}else if(p.type===d.Image){let w=p.data;if(w.data===null)throw Error("image data cannot be null");C.push(...te(w))}else if(p.type===U.Binary)C.push(p.data);else if(p.type===U.Image){let w=p.data;if(w.data===null)throw Error("image data cannot be null");C.push(...te(w))}else if(p.type===U.Mesh){let w=p.data;C.push(...ot(w))}});let l=(g=i?.pipelineBaseUrl)!==null&&g!==void 0?g:"pipelinesUrl",E=typeof l!="string"&&typeof l?.href<"u"?l.href:l,m=n!=null?ee(n,Ce(C)):null,h=await B.runPipeline(Y,e.toString(),E,t,r,m);return{returnValue:h.returnValue,stdout:h.stdout,stderr:h.stderr,outputs:h.outputs,webWorker:f}}var aA=Xr;var ft={name:"@itk-wasm/compare-images",version:"4.0.0",description:"Compare images with a tolerance for regression testing.",type:"module",module:"./dist/index.js",types:"./dist/index.d.ts",exports:{".":{types:"./dist/index.d.ts",browser:"./dist/index.js",node:"./dist/index-node.js",default:"./dist/index.js"}},scripts:{start:"npm run copyShoelaceAssets && vite -c build/vite.config.js",test:"npm run test:node && npm run test:browser","test:node":"ava test/node/*.js","test:browser":"npm run test:browser:chrome && npm run test:browser:firefox","test:browser:firefox":"start-server-and-test start http-get://localhost:5173 cypress:runFirefox","test:browser:chrome":"start-server-and-test start http-get://localhost:5173 cypress:runChrome","test:browser:debug":"start-server-and-test start http-get://localhost:5173 cypress:open","cypress:open":"npx cypress open","cypress:runChrome":"npx cypress run --browser chrome","cypress:runFirefox":"npx cypress run --browser firefox",build:"npm run build:tsc && npm run build:browser:workerEmbedded && npm run build:browser:workerEmbeddedMin && npm run build:demo","build:browser:workerEmbedded":"esbuild --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.js ./src/index-worker-embedded.ts","build:browser:workerEmbeddedMin":"esbuild --minify --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.min.js ./src/index-worker-embedded.min.ts","build:tsc":"tsc --pretty",copyShoelaceAssets:"shx mkdir -p test/browser/demo-app/public && shx cp -r node_modules/@shoelace-style/shoelace/dist/assets test/browser/demo-app/public/","build:demo":"npm run copyShoelaceAssets && vite -c build/vite.config.js build"},keywords:["itk","wasm","webassembly","wasi"],author:"",license:"Apache-2.0",dependencies:{"itk-wasm":"^1.0.0-b.154"},devDependencies:{"@itk-wasm/image-io":"^0.4.0","@shoelace-style/shoelace":"^2.5.2","@types/node":"^20.2.5",ava:"^5.3.1",cypress:"^12.17.2",shx:"^0.3.4","start-server-and-test":"^2.0.2",typescript:"^5.0.4",vite:"^4.4.11","vite-plugin-static-copy":"^0.17.0"},repository:{type:"git",url:"https://github.com/InsightSoftwareConsortium/itk-wasm"}};var ie,An=`https://cdn.jsdelivr.net/npm/@itk-wasm/compare-images@${ft.version}/dist/pipelines`;function gs(A){ie=A}function bA(){if(typeof ie<"u")return ie;let A=at();return typeof A<"u"?A:An}var ae,en=null;function Et(A){ae=A}function Qt(){if(typeof ae<"u")return ae;let A=it();return typeof A<"u"?A:en}async function tn(A,e,t={baselineImages:[]}){let r=[{type:d.JsonCompatible},{type:d.Image},{type:d.Image}],n=[{type:d.Image,data:e}],i=[],a="0";i.push(a);let g="0";i.push(g);let f="1";i.push(f);let I="2";if(i.push(I),i.push("--memory-io"),typeof t.baselineImages<"u"){if(t.baselineImages.length<1)throw new Error('"baseline-images" option must have a length > 1');i.push("--baseline-images"),await Promise.all(t.baselineImages.map(async m=>{let h=n.length.toString();n.push({type:d.Image,data:m}),i.push(h)}))}typeof t.differenceThreshold<"u"&&i.push("--difference-threshold",t.differenceThreshold.toString()),typeof t.radiusTolerance<"u"&&i.push("--radius-tolerance",t.radiusTolerance.toString()),typeof t.numberOfPixelsTolerance<"u"&&i.push("--number-of-pixels-tolerance",t.numberOfPixelsTolerance.toString()),typeof t.ignoreBoundaryPixels<"u"&&t.ignoreBoundaryPixels&&i.push("--ignore-boundary-pixels");let o="compare-double-images",{webWorker:B,returnValue:c,stderr:C,outputs:l}=await aA(A,o,i,r,n,{pipelineBaseUrl:bA()});if(c!==0)throw new Error(C);return{webWorker:B,metrics:l[0].data,differenceImage:l[1].data,differenceUchar2dImage:l[2].data}}var oe=tn;async function rn(A,e){let t=e;if(t.imageType.componentType!==D.Float64){let r;e.imageType.pixelType!==R.Scalar&&e.imageType.pixelType!==R.VariableLengthVector&&(r=R.VariableLengthVector),t=oA(e,{componentType:D.Float64,pixelType:r})}else if(e.imageType.pixelType!==R.Scalar&&e.imageType.pixelType!==R.VariableLengthVector){let r=R.VariableLengthVector;t=oA(e,{pixelType:r})}return t.imageType.pixelType===R.VariableLengthVector&&(t=(await A(t)).magnitudeImage),t}var se=rn;async function nn(A,e){let t=[{type:d.Image}],r=[{type:d.Image,data:e}],n=[],i="0";n.push(i);let a="0";n.push(a),n.push("--memory-io");let g="vector-magnitude",{webWorker:f,returnValue:I,stderr:o,outputs:B}=await aA(A,g,n,t,r,{pipelineBaseUrl:bA(),pipelineWorkerUrl:Qt()});if(I!==0&&o!=="")throw new Error(o);return{webWorker:f,magnitudeImage:B[0]?.data}}var ut=nn;async function an(A,e,t={baselineImages:[]}){async function r(g){let{webWorker:f,magnitudeImage:I}=await ut(null,g);return f?.terminate(),{magnitudeImage:I}}let n=await se(r,e),i=await Promise.all(t.baselineImages.map(async g=>await se(r,g))),a={...t};return a.baselineImages=i,oe(A,n,a)}var on=an;var dt='data:text/javascript;charset=utf-8,var ce=Symbol("Comlink.proxy"),Ct=Symbol("Comlink.endpoint"),Bt=Symbol("Comlink.releaseProxy"),MA=Symbol("Comlink.finalizer"),sA=Symbol("Comlink.thrown"),fe=A=>typeof A=="object"&&A!==null||typeof A=="function",Qt={canHandle:A=>fe(A)&&A[ce],serialize(A){let{port1:e,port2:t}=new MessageChannel;return EA(A,e),[t,[t]]},deserialize(A){return A.start(),lt(A)}},Et={canHandle:A=>fe(A)&&sA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},le=new Map([["proxy",Qt],["throw",Et]]);function ct(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function EA(A,e=globalThis,t=["*"]){e.addEventListener("message",function I(r){if(!r||!r.data)return;if(!ct(t,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:i,type:g,path:n}=Object.assign({path:[]},r.data),E=(r.data.argumentList||[]).map(q),o;try{let B=n.slice(0,-1).reduce((a,C)=>a[C],A),c=n.reduce((a,C)=>a[C],A);switch(g){case"GET":o=c;break;case"SET":B[n.slice(-1)[0]]=q(r.data.value),o=!0;break;case"APPLY":o=c.apply(B,E);break;case"CONSTRUCT":{let a=new c(...E);o=mt(a)}break;case"ENDPOINT":{let{port1:a,port2:C}=new MessageChannel;EA(A,C),o=HA(a,[a])}break;case"RELEASE":o=void 0;break;default:return}}catch(B){o={value:B,[sA]:0}}Promise.resolve(o).catch(B=>({value:B,[sA]:0})).then(B=>{let[c,a]=QA(B);e.postMessage(Object.assign(Object.assign({},c),{id:i}),a),g==="RELEASE"&&(e.removeEventListener("message",I),ue(e),MA in A&&typeof A[MA]=="function"&&A[MA]())}).catch(B=>{let[c,a]=QA({value:new TypeError("Unserializable return value"),[sA]:0});e.postMessage(Object.assign(Object.assign({},c),{id:i}),a)})}),e.start&&e.start()}function ft(A){return A.constructor.name==="MessagePort"}function ue(A){ft(A)&&A.close()}function lt(A,e){return bA(A,[],e)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function he(A){return x(A,{type:"RELEASE"}).then(()=>{ue(A)})}var CA=new WeakMap,BA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(CA.get(A)||0)-1;CA.set(A,e),e===0&&he(A)});function ut(A,e){let t=(CA.get(e)||0)+1;CA.set(e,t),BA&&BA.register(A,e,A)}function ht(A){BA&&BA.unregister(A)}function bA(A,e=[],t=function(){}){let I=!1,r=new Proxy(t,{get(i,g){if(aA(I),g===Bt)return()=>{ht(r),he(A),I=!0};if(g==="then"){if(e.length===0)return{then:()=>r};let n=x(A,{type:"GET",path:e.map(E=>E.toString())}).then(q);return n.then.bind(n)}return bA(A,[...e,g])},set(i,g,n){aA(I);let[E,o]=QA(n);return x(A,{type:"SET",path:[...e,g].map(B=>B.toString()),value:E},o).then(q)},apply(i,g,n){aA(I);let E=e[e.length-1];if(E===Ct)return x(A,{type:"ENDPOINT"}).then(q);if(E==="bind")return bA(A,e.slice(0,-1));let[o,B]=Ee(n);return x(A,{type:"APPLY",path:e.map(c=>c.toString()),argumentList:o},B).then(q)},construct(i,g){aA(I);let[n,E]=Ee(g);return x(A,{type:"CONSTRUCT",path:e.map(o=>o.toString()),argumentList:n},E).then(q)}});return ut(r,A),r}function dt(A){return Array.prototype.concat.apply([],A)}function Ee(A){let e=A.map(QA);return[e.map(t=>t[0]),dt(e.map(t=>t[1]))]}var de=new WeakMap;function HA(A,e){return de.set(A,e),A}function mt(A){return Object.assign(A,{[ce]:!0})}function QA(A){for(let[e,t]of le)if(t.canHandle(A)){let[I,r]=t.serialize(A);return[{type:"HANDLER",name:e,value:I},r]}return[{type:"RAW",value:A},de.get(A)||[]]}function q(A){switch(A.type){case"HANDLER":return le.get(A.name).deserialize(A.value);case"RAW":return A.value}}function x(A,e,t){return new Promise(I=>{let r=Dt();A.addEventListener("message",function i(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",i),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},e),t)})}function Dt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function X(A,e){return function(){return A.apply(e,arguments)}}var{toString:yt}=Object.prototype,{getPrototypeOf:TA}=Object,fA=(A=>e=>{let t=yt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),e=>fA(e)===A),lA=A=>e=>typeof e===A,{isArray:P}=Array,v=lA("undefined");function wt(A){return A!==null&&!v(A)&&A.constructor!==null&&!v(A.constructor)&&R(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var we=U("ArrayBuffer");function pt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&we(A.buffer),e}var Ft=lA("string"),R=lA("function"),pe=lA("number"),uA=A=>A!==null&&typeof A=="object",St=A=>A===!0||A===!1,cA=A=>{if(fA(A)!=="object")return!1;let e=TA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Nt=U("Date"),Rt=U("File"),Gt=U("Blob"),Ut=U("FileList"),kt=A=>uA(A)&&R(A.pipe),Lt=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||R(A.append)&&((e=fA(A))==="formdata"||e==="object"&&R(A.toString)&&A.toString()==="[object FormData]"))},Ot=U("URLSearchParams"),Jt=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function $(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),P(A))for(I=0,r=A.length;I<r;I++)e.call(null,A[I],I,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),g=i.length,n;for(I=0;I<g;I++)n=i[I],e.call(null,A[n],n,A)}}function Fe(A,e){e=e.toLowerCase();let t=Object.keys(A),I=t.length,r;for(;I-- >0;)if(r=t[I],e===r.toLowerCase())return r;return null}var Se=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Ne=A=>!v(A)&&A!==Se;function qA(){let{caseless:A}=Ne(this)&&this||{},e={},t=(I,r)=>{let i=A&&Fe(e,r)||r;cA(e[i])&&cA(I)?e[i]=qA(e[i],I):cA(I)?e[i]=qA({},I):P(I)?e[i]=I.slice():e[i]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&$(arguments[I],t);return e}var Mt=(A,e,t,{allOwnKeys:I}={})=>($(e,(r,i)=>{t&&R(r)?A[i]=X(r,t):A[i]=r},{allOwnKeys:I}),A),bt=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Ht=(A,e,t,I)=>{A.prototype=Object.create(e.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Yt=(A,e,t,I)=>{let r,i,g,n={};if(e=e||{},A==null)return e;do{for(r=Object.getOwnPropertyNames(A),i=r.length;i-- >0;)g=r[i],(!I||I(g,A,e))&&!n[g]&&(e[g]=A[g],n[g]=!0);A=t!==!1&&TA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},qt=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let I=A.indexOf(e,t);return I!==-1&&I===t},Tt=A=>{if(!A)return null;if(P(A))return A;let e=A.length;if(!pe(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Kt=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&TA(Uint8Array)),xt=(A,e)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let i=r.value;e.call(A,i[0],i[1])}},Pt=(A,e)=>{let t,I=[];for(;(t=A.exec(e))!==null;)I.push(t);return I},Wt=U("HTMLFormElement"),jt=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(t,I,r){return I.toUpperCase()+r}),De=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),Zt=U("RegExp"),Re=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),I={};$(t,(r,i)=>{e(r,i,A)!==!1&&(I[i]=r)}),Object.defineProperties(A,I)},_t=A=>{Re(A,(e,t)=>{if(R(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let I=A[t];if(R(I)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method \'"+t+"\'")})}})},Vt=(A,e)=>{let t={},I=r=>{r.forEach(i=>{t[i]=!0})};return P(A)?I(A):I(String(A).split(e)),t},zt=()=>{},Xt=(A,e)=>(A=+A,Number.isFinite(A)?A:e),YA="abcdefghijklmnopqrstuvwxyz",ye="0123456789",Ge={DIGIT:ye,ALPHA:YA,ALPHA_DIGIT:YA+YA.toUpperCase()+ye},vt=(A=16,e=Ge.ALPHA_DIGIT)=>{let t="",{length:I}=e;for(;A--;)t+=e[Math.random()*I|0];return t};function $t(A){return!!(A&&R(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var AI=A=>{let e=new Array(10),t=(I,r)=>{if(uA(I)){if(e.indexOf(I)>=0)return;if(!("toJSON"in I)){e[r]=I;let i=P(I)?[]:{};return $(I,(g,n)=>{let E=t(g,r+1);!v(E)&&(i[n]=E)}),e[r]=void 0,i}}return I};return t(A,0)},eI=U("AsyncFunction"),tI=A=>A&&(uA(A)||R(A))&&R(A.then)&&R(A.catch),s={isArray:P,isArrayBuffer:we,isBuffer:wt,isFormData:Lt,isArrayBufferView:pt,isString:Ft,isNumber:pe,isBoolean:St,isObject:uA,isPlainObject:cA,isUndefined:v,isDate:Nt,isFile:Rt,isBlob:Gt,isRegExp:Zt,isFunction:R,isStream:kt,isURLSearchParams:Ot,isTypedArray:Kt,isFileList:Ut,forEach:$,merge:qA,extend:Mt,trim:Jt,stripBOM:bt,inherits:Ht,toFlatObject:Yt,kindOf:fA,kindOfTest:U,endsWith:qt,toArray:Tt,forEachEntry:xt,matchAll:Pt,isHTMLForm:Wt,hasOwnProperty:De,hasOwnProp:De,reduceDescriptors:Re,freezeMethods:_t,toObjectSet:Vt,toCamelCase:jt,noop:zt,toFiniteNumber:Xt,findKey:Fe,global:Se,isContextDefined:Ne,ALPHABET:Ge,generateString:vt,isSpecCompliantForm:$t,toJSONObject:AI,isAsyncFn:eI,isThenable:tI};function W(A,e,t,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),I&&(this.request=I),r&&(this.response=r)}s.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Ue=W.prototype,ke={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ke[A]={value:A}});Object.defineProperties(W,ke);Object.defineProperty(Ue,"isAxiosError",{value:!0});W.from=(A,e,t,I,r,i)=>{let g=Object.create(Ue);return s.toFlatObject(A,g,function(E){return E!==Error.prototype},n=>n!=="isAxiosError"),W.call(g,A.message,e,t,I,r),g.cause=A,g.name=A.name,i&&Object.assign(g,i),g};var l=W;var hA=null;function KA(A){return s.isPlainObject(A)||s.isArray(A)}function Oe(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function Le(A,e,t){return A?A.concat(e).map(function(r,i){return r=Oe(r),!t&&i?"["+r+"]":r}).join(t?".":""):e}function II(A){return s.isArray(A)&&!A.some(KA)}var rI=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function iI(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(hA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,m){return!s.isUndefined(m[f])});let I=t.metaTokens,r=t.visitor||B,i=t.dots,g=t.indexes,E=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(r))throw new TypeError("visitor must be a function");function o(Q){if(Q===null)return"";if(s.isDate(Q))return Q.toISOString();if(!E&&s.isBlob(Q))throw new l("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(Q)||s.isTypedArray(Q)?E&&typeof Blob=="function"?new Blob([Q]):Buffer.from(Q):Q}function B(Q,f,m){let w=Q;if(Q&&!m&&typeof Q=="object"){if(s.endsWith(f,"{}"))f=I?f:f.slice(0,-2),Q=JSON.stringify(Q);else if(s.isArray(Q)&&II(Q)||(s.isFileList(Q)||s.endsWith(f,"[]"))&&(w=s.toArray(Q)))return f=Oe(f),w.forEach(function(K,JA){!(s.isUndefined(K)||K===null)&&e.append(g===!0?Le([f],JA,i):g===null?f:f+"[]",o(K))}),!1}return KA(Q)?!0:(e.append(Le(m,f,i),o(Q)),!1)}let c=[],a=Object.assign(rI,{defaultVisitor:B,convertValue:o,isVisitable:KA});function C(Q,f){if(!s.isUndefined(Q)){if(c.indexOf(Q)!==-1)throw Error("Circular reference detected in "+f.join("."));c.push(Q),s.forEach(Q,function(w,O){(!(s.isUndefined(w)||w===null)&&r.call(e,w,s.isString(O)?O.trim():O,f,a))===!0&&C(w,f?f.concat(O):[O])}),c.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return C(A),e}var J=iI;function Je(A){let e={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return e[I]})}function Me(A,e){this._pairs=[],A&&J(A,this,e)}var be=Me.prototype;be.append=function(e,t){this._pairs.push([e,t])};be.toString=function(e){let t=e?function(I){return e.call(this,I,Je)}:Je;return this._pairs.map(function(r){return t(r[0])+"="+t(r[1])},"").join("&")};var dA=Me;function gI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function AA(A,e,t){if(!e)return A;let I=t&&t.encode||gI,r=t&&t.serialize,i;if(r?i=r(e,t):i=s.isURLSearchParams(e)?e.toString():new dA(e,t).toString(I),i){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var xA=class{constructor(){this.handlers=[]}use(e,t,I){return this.handlers.push({fulfilled:e,rejected:t,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(I){I!==null&&e(I)})}},PA=xA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var He=typeof URLSearchParams<"u"?URLSearchParams:dA;var Ye=typeof FormData<"u"?FormData:null;var qe=typeof Blob<"u"?Blob:null;var oI=(()=>{let A;return typeof navigator<"u"&&((A=navigator.product)==="ReactNative"||A==="NativeScript"||A==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),nI=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),D={isBrowser:!0,classes:{URLSearchParams:He,FormData:Ye,Blob:qe},isStandardBrowserEnv:oI,isStandardBrowserWebWorkerEnv:nI,protocols:["http","https","file","blob","url","data"]};function WA(A,e){return J(A,new D.classes.URLSearchParams,Object.assign({visitor:function(t,I,r,i){return D.isNode&&s.isBuffer(t)?(this.append(I,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function aI(A){return s.matchAll(/\\w+|\\[(\\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function sI(A){let e={},t=Object.keys(A),I,r=t.length,i;for(I=0;I<r;I++)i=t[I],e[i]=A[i];return e}function CI(A){function e(t,I,r,i){let g=t[i++],n=Number.isFinite(+g),E=i>=t.length;return g=!g&&s.isArray(r)?r.length:g,E?(s.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!n):((!r[g]||!s.isObject(r[g]))&&(r[g]=[]),e(t,I,r[g],i)&&s.isArray(r[g])&&(r[g]=sI(r[g])),!n)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(I,r)=>{e(aI(I),r,t,0)}),t}return null}var DA=CI;var BI={"Content-Type":void 0};function QI(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(t||JSON.stringify)(A)}var yA={transitional:mA,adapter:["xhr","http"],transformRequest:[function(e,t){let I=t.getContentType()||"",r=I.indexOf("application/json")>-1,i=s.isObject(e);if(i&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return r&&r?JSON.stringify(DA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let n;if(i){if(I.indexOf("application/x-www-form-urlencoded")>-1)return WA(e,this.formSerializer).toString();if((n=s.isFileList(e))||I.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return J(n?{"files[]":e}:e,E&&new E,this.formSerializer)}}return i||r?(t.setContentType("application/json",!1),QI(e)):e}],transformResponse:[function(e){let t=this.transitional||yA.transitional,I=t&&t.forcedJSONParsing,r=this.responseType==="json";if(e&&s.isString(e)&&(I&&!this.responseType||r)){let g=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(n){if(g)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};s.forEach(["delete","get","head"],function(e){yA.headers[e]={}});s.forEach(["post","put","patch"],function(e){yA.headers[e]=s.merge(BI)});var j=yA;var EI=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Te=A=>{let e={},t,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),t=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!t||e[t]&&EI[t])&&(t==="set-cookie"?e[t]?e[t].push(I):e[t]=[I]:e[t]=e[t]?e[t]+", "+I:I)}),e};var Ke=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function wA(A){return A===!1||A==null?A:s.isArray(A)?A.map(wA):String(A)}function cI(A){let e=Object.create(null),t=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=t.exec(A);)e[I[1]]=I[2];return e}var fI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function jA(A,e,t,I,r){if(s.isFunction(I))return I.call(this,e,t);if(r&&(e=t),!!s.isString(e)){if(s.isString(I))return e.indexOf(I)!==-1;if(s.isRegExp(I))return I.test(e)}}function lI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(e,t,I)=>t.toUpperCase()+I)}function uI(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+t,{value:function(r,i,g){return this[I].call(this,e,r,i,g)},configurable:!0})})}var Z=class{constructor(e){e&&this.set(e)}set(e,t,I){let r=this;function i(n,E,o){let B=eA(E);if(!B)throw new Error("header name must be a non-empty string");let c=s.findKey(r,B);(!c||r[c]===void 0||o===!0||o===void 0&&r[c]!==!1)&&(r[c||E]=wA(n))}let g=(n,E)=>s.forEach(n,(o,B)=>i(o,B,E));return s.isPlainObject(e)||e instanceof this.constructor?g(e,t):s.isString(e)&&(e=e.trim())&&!fI(e)?g(Te(e),t):e!=null&&i(t,e,I),this}get(e,t){if(e=eA(e),e){let I=s.findKey(this,e);if(I){let r=this[I];if(!t)return r;if(t===!0)return cI(r);if(s.isFunction(t))return t.call(this,r,I);if(s.isRegExp(t))return t.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=eA(e),e){let I=s.findKey(this,e);return!!(I&&this[I]!==void 0&&(!t||jA(this,this[I],I,t)))}return!1}delete(e,t){let I=this,r=!1;function i(g){if(g=eA(g),g){let n=s.findKey(I,g);n&&(!t||jA(I,I[n],n,t))&&(delete I[n],r=!0)}}return s.isArray(e)?e.forEach(i):i(e),r}clear(e){let t=Object.keys(this),I=t.length,r=!1;for(;I--;){let i=t[I];(!e||jA(this,this[i],i,e,!0))&&(delete this[i],r=!0)}return r}normalize(e){let t=this,I={};return s.forEach(this,(r,i)=>{let g=s.findKey(I,i);if(g){t[g]=wA(r),delete t[i];return}let n=e?lI(i):String(i).trim();n!==i&&delete t[i],t[n]=wA(r),I[n]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(I,r)=>{I!=null&&I!==!1&&(t[r]=e&&s.isArray(I)?I.join(", "):I)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let I=new this(e);return t.forEach(r=>I.set(r)),I}static accessor(e){let I=(this[Ke]=this[Ke]={accessors:{}}).accessors,r=this.prototype;function i(g){let n=eA(g);I[n]||(uI(r,g),I[n]=!0)}return s.isArray(e)?e.forEach(i):i(e),this}};Z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.freezeMethods(Z.prototype);s.freezeMethods(Z);var p=Z;function tA(A,e){let t=this||j,I=e||t,r=p.from(I.headers),i=I.data;return s.forEach(A,function(n){i=n.call(t,i,r.normalize(),e?e.status:void 0)}),r.normalize(),i}function IA(A){return!!(A&&A.__CANCEL__)}function xe(A,e,t){l.call(this,A??"canceled",l.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(xe,l,{__CANCEL__:!0});var M=xe;function ZA(A,e,t){let I=t.config.validateStatus;!t.status||!I||I(t.status)?A(t):e(new l("Request failed with status code "+t.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Pe=D.isStandardBrowserEnv?function(){return{write:function(t,I,r,i,g,n){let E=[];E.push(t+"="+encodeURIComponent(I)),s.isNumber(r)&&E.push("expires="+new Date(r).toGMTString()),s.isString(i)&&E.push("path="+i),s.isString(g)&&E.push("domain="+g),n===!0&&E.push("secure"),document.cookie=E.join("; ")},read:function(t){let I=document.cookie.match(new RegExp("(^|;\\\\s*)("+t+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function _A(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function VA(A,e){return e?A.replace(/\\/+$/,"")+"/"+e.replace(/^\\/+/,""):A}function rA(A,e){return A&&!_A(e)?VA(A,e):e}var We=D.isStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),I;function r(i){let g=i;return e&&(t.setAttribute("href",g),g=t.href),t.setAttribute("href",g),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\\?/,""):"",hash:t.hash?t.hash.replace(/^%23/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return I=r(window.location.href),function(g){let n=s.isString(g)?r(g):g;return n.protocol===I.protocol&&n.host===I.host}}():function(){return function(){return!0}}();function zA(A){let e=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return e&&e[1]||""}function hI(A,e){A=A||10;let t=new Array(A),I=new Array(A),r=0,i=0,g;return e=e!==void 0?e:1e3,function(E){let o=Date.now(),B=I[i];g||(g=o),t[r]=E,I[r]=o;let c=i,a=0;for(;c!==r;)a+=t[c++],c=c%A;if(r=(r+1)%A,r===i&&(i=(i+1)%A),o-g<e)return;let C=B&&o-B;return C?Math.round(a*1e3/C):void 0}}var je=hI;function Ze(A,e){let t=0,I=je(50,250);return r=>{let i=r.loaded,g=r.lengthComputable?r.total:void 0,n=i-t,E=I(n),o=i<=g;t=i;let B={loaded:i,total:g,progress:g?i/g:void 0,bytes:n,rate:E||void 0,estimated:E&&g&&o?(g-i)/E:void 0,event:r};B[e?"download":"upload"]=!0,A(B)}}var dI=typeof XMLHttpRequest<"u",_e=dI&&function(A){return new Promise(function(t,I){let r=A.data,i=p.from(A.headers).normalize(),g=A.responseType,n;function E(){A.cancelToken&&A.cancelToken.unsubscribe(n),A.signal&&A.signal.removeEventListener("abort",n)}s.isFormData(r)&&(D.isStandardBrowserEnv||D.isStandardBrowserWebWorkerEnv?i.setContentType(!1):i.setContentType("multipart/form-data;",!1));let o=new XMLHttpRequest;if(A.auth){let C=A.auth.username||"",Q=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(C+":"+Q))}let B=rA(A.baseURL,A.url);o.open(A.method.toUpperCase(),AA(B,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function c(){if(!o)return;let C=p.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),f={data:!g||g==="text"||g==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:C,config:A,request:o};ZA(function(w){t(w),E()},function(w){I(w),E()},f),o=null}if("onloadend"in o?o.onloadend=c:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(c)},o.onabort=function(){o&&(I(new l("Request aborted",l.ECONNABORTED,A,o)),o=null)},o.onerror=function(){I(new l("Network Error",l.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let Q=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",f=A.transitional||mA;A.timeoutErrorMessage&&(Q=A.timeoutErrorMessage),I(new l(Q,f.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,o)),o=null},D.isStandardBrowserEnv){let C=(A.withCredentials||We(B))&&A.xsrfCookieName&&Pe.read(A.xsrfCookieName);C&&i.set(A.xsrfHeaderName,C)}r===void 0&&i.setContentType(null),"setRequestHeader"in o&&s.forEach(i.toJSON(),function(Q,f){o.setRequestHeader(f,Q)}),s.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),g&&g!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",Ze(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Ze(A.onUploadProgress)),(A.cancelToken||A.signal)&&(n=C=>{o&&(I(!C||C.type?new M(null,A,o):C),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(n),A.signal&&(A.signal.aborted?n():A.signal.addEventListener("abort",n)));let a=zA(B);if(a&&D.protocols.indexOf(a)===-1){I(new l("Unsupported protocol "+a+":",l.ERR_BAD_REQUEST,A));return}o.send(r||null)})};var pA={http:hA,xhr:_e};s.forEach(pA,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ve={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,I;for(let r=0;r<e&&(t=A[r],!(I=s.isString(t)?pA[t.toLowerCase()]:t));r++);if(!I)throw I===!1?new l(`Adapter ${t} is not supported by the environment`,"ERR_NOT_SUPPORT"):new Error(s.hasOwnProp(pA,t)?`Adapter \'${t}\' is not available in the build`:`Unknown adapter \'${t}\'`);if(!s.isFunction(I))throw new TypeError("adapter is not a function");return I},adapters:pA};function XA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new M(null,A)}function FA(A){return XA(A),A.headers=p.from(A.headers),A.data=tA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),Ve.getAdapter(A.adapter||j.adapter)(A).then(function(I){return XA(A),I.data=tA.call(A,A.transformResponse,I),I.headers=p.from(I.headers),I},function(I){return IA(I)||(XA(A),I&&I.response&&(I.response.data=tA.call(A,A.transformResponse,I.response),I.response.headers=p.from(I.response.headers))),Promise.reject(I)})}var ze=A=>A instanceof p?A.toJSON():A;function k(A,e){e=e||{};let t={};function I(o,B,c){return s.isPlainObject(o)&&s.isPlainObject(B)?s.merge.call({caseless:c},o,B):s.isPlainObject(B)?s.merge({},B):s.isArray(B)?B.slice():B}function r(o,B,c){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o,c)}else return I(o,B,c)}function i(o,B){if(!s.isUndefined(B))return I(void 0,B)}function g(o,B){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o)}else return I(void 0,B)}function n(o,B,c){if(c in e)return I(o,B);if(c in A)return I(void 0,o)}let E={url:i,method:i,data:i,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:n,headers:(o,B)=>r(ze(o),ze(B),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(B){let c=E[B]||r,a=c(A[B],e[B],B);s.isUndefined(a)&&c!==n||(t[B]=a)}),t}var SA="1.4.0";var vA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{vA[A]=function(I){return typeof I===A||"a"+(e<1?"n ":" ")+A}});var Xe={};vA.transitional=function(e,t,I){function r(i,g){return"[Axios v"+SA+"] Transitional option \'"+i+"\'"+g+(I?". "+I:"")}return(i,g,n)=>{if(e===!1)throw new l(r(g," has been removed"+(t?" in "+t:"")),l.ERR_DEPRECATED);return t&&!Xe[g]&&(Xe[g]=!0,console.warn(r(g," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,g,n):!0}};function mI(A,e,t){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let i=I[r],g=e[i];if(g){let n=A[i],E=n===void 0||g(n,i,A);if(E!==!0)throw new l("option "+i+" must be "+E,l.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new l("Unknown option "+i,l.ERR_BAD_OPTION)}}var NA={assertOptions:mI,validators:vA};var b=NA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new PA,response:new PA}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=k(this.defaults,t);let{transitional:I,paramsSerializer:r,headers:i}=t;I!==void 0&&NA.assertOptions(I,{silentJSONParsing:b.transitional(b.boolean),forcedJSONParsing:b.transitional(b.boolean),clarifyTimeoutError:b.transitional(b.boolean)},!1),r!=null&&(s.isFunction(r)?t.paramsSerializer={serialize:r}:NA.assertOptions(r,{encode:b.function,serialize:b.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let g;g=i&&s.merge(i.common,i[t.method]),g&&s.forEach(["delete","get","head","post","put","patch","common"],Q=>{delete i[Q]}),t.headers=p.concat(g,i);let n=[],E=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(E=E&&f.synchronous,n.unshift(f.fulfilled,f.rejected))});let o=[];this.interceptors.response.forEach(function(f){o.push(f.fulfilled,f.rejected)});let B,c=0,a;if(!E){let Q=[FA.bind(this),void 0];for(Q.unshift.apply(Q,n),Q.push.apply(Q,o),a=Q.length,B=Promise.resolve(t);c<a;)B=B.then(Q[c++],Q[c++]);return B}a=n.length;let C=t;for(c=0;c<a;){let Q=n[c++],f=n[c++];try{C=Q(C)}catch(m){f.call(this,m);break}}try{B=FA.call(this,C)}catch(Q){return Promise.reject(Q)}for(c=0,a=o.length;c<a;)B=B.then(o[c++],o[c++]);return B}getUri(e){e=k(this.defaults,e);let t=rA(e.baseURL,e.url);return AA(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(t,I){return this.request(k(I||{},{method:e,url:t,data:(I||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(I){return function(i,g,n){return this.request(k(n||{},{method:e,headers:I?{"Content-Type":"multipart/form-data"}:{},url:i,data:g}))}}_.prototype[e]=t(),_.prototype[e+"Form"]=t(!0)});var iA=_;var $A=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let I=this;this.promise.then(r=>{if(!I._listeners)return;let i=I._listeners.length;for(;i-- >0;)I._listeners[i](r);I._listeners=null}),this.promise.then=r=>{let i,g=new Promise(n=>{I.subscribe(n),i=n}).then(r);return g.cancel=function(){I.unsubscribe(i)},g},e(function(i,g,n){I.reason||(I.reason=new M(i,g,n),t(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(r){e=r}),cancel:e}}},ve=$A;function Ae(A){return function(t){return A.apply(null,t)}}function ee(A){return s.isObject(A)&&A.isAxiosError===!0}var te={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(te).forEach(([A,e])=>{te[e]=A});var $e=te;function At(A){let e=new iA(A),t=X(iA.prototype.request,e);return s.extend(t,iA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(r){return At(k(A,r))},t}var h=At(j);h.Axios=iA;h.CanceledError=M;h.CancelToken=ve;h.isCancel=IA;h.VERSION=SA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(e){return Promise.all(e)};h.spread=Ae;h.isAxiosError=ee;h.mergeConfig=k;h.AxiosHeaders=p;h.formToJSON=A=>DA(s.isHTMLForm(A)?new FormData(A):A);h.HttpStatusCode=$e;h.default=h;var RA=h;var{Axios:Sg,AxiosError:Ng,CanceledError:Rg,isCancel:Gg,CancelToken:Ug,VERSION:kg,all:Lg,Cancel:Og,isAxiosError:Jg,spread:Mg,toFormData:bg,AxiosHeaders:Hg,HttpStatusCode:Yg,formToJSON:qg,mergeConfig:Tg}=RA;var gA,L,re,Ie={env:{emscripten_notify_memory_growth:function(A){re=new Uint8Array(L.exports.memory.buffer)}}},GA=class{init(){return gA||(typeof fetch<"u"?gA=fetch("data:application/wasm;base64,"+et).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,Ie)).then(this._init):gA=WebAssembly.instantiate(Buffer.from(et,"base64"),Ie).then(this._init),gA)}_init(e){L=e.instance,Ie.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=e.byteLength,r=L.exports.malloc(I);re.set(e,r),t=t||Number(L.exports.ZSTD_findDecompressedSize(r,I));let i=L.exports.malloc(t),g=L.exports.ZSTD_decompress(i,t,r,I),n=re.slice(i,i+g);return L.exports.free(r),L.exports.free(i),n}},et="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var tt=new GA,It=!1;async function DI(A,e){let t=null;typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${e}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let I=`${t}.wasm`,r=await RA.get(`${I}.zst`,{responseType:"arraybuffer"});It||(await tt.init(),It=!0);let g=tt.decode(new Uint8Array(r.data)).buffer;return(await import(`${t}.js`)).default({wasmBinary:g})}var rt=DI;var UA=new Map;async function yI(A,e){let t=A,I=A,r=null;return typeof A!="string"&&(t=new URL(A.href),I=t.href),UA.has(I)||UA.set(I,await rt(t,e)),r=UA.get(I),r}var G=yI;var wI=new Map([["image/jpeg","JPEGImageIO"],["image/png","PNGImageIO"],["image/tiff","TIFFImageIO"],["image/x-ms-bmp","BMPImageIO"],["image/x-bmp","BMPImageIO"],["image/bmp","BMPImageIO"],["application/dicom","GDCMImageIO"]]),ie=wI;var pI=new Map([["bmp","BMPImageIO"],["BMP","BMPImageIO"],["dcm","GDCMImageIO"],["DCM","GDCMImageIO"],["gipl","GiplImageIO"],["gipl.gz","GiplImageIO"],["hdf5","HDF5ImageIO"],["jpg","JPEGImageIO"],["JPG","JPEGImageIO"],["jpeg","JPEGImageIO"],["JPEG","JPEGImageIO"],["iwi","WasmImageIO"],["iwi.cbor","WasmImageIO"],["iwi.cbor.zst","WasmZstdImageIO"],["lsm","LSMImageIO"],["mnc","MINCImageIO"],["MNC","MINCImageIO"],["mnc.gz","MINCImageIO"],["MNC.GZ","MINCImageIO"],["mnc2","MINCImageIO"],["MNC2","MINCImageIO"],["mgh","MGHImageIO"],["mgz","MGHImageIO"],["mgh.gz","MGHImageIO"],["mha","MetaImageIO"],["mhd","MetaImageIO"],["mrc","MRCImageIO"],["nia","NiftiImageIO"],["nii","NiftiImageIO"],["nii.gz","NiftiImageIO"],["hdr","NiftiImageIO"],["nrrd","NrrdImageIO"],["NRRD","NrrdImageIO"],["nhdr","NrrdImageIO"],["NHDR","NrrdImageIO"],["png","PNGImageIO"],["PNG","PNGImageIO"],["pic","BioRadImageIO"],["PIC","BioRadImageIO"],["tif","TIFFImageIO"],["TIF","TIFFImageIO"],["tiff","TIFFImageIO"],["TIFF","TIFFImageIO"],["vtk","VTKImageIO"],["VTK","VTKImageIO"],["isq","ScancoImageIO"],["ISQ","ScancoImageIO"],["fdf","FDFImageIO"],["FDF","FDFImageIO"]]),ge=pI;function FI(A){let e=A.slice((A.lastIndexOf(".")-1>>>0)+2);if(e.toLowerCase()==="gz"){let t=A.slice(0,-3).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="cbor"){let t=A.slice(0,-5).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zst"){let t=A.slice(0,-10).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zip"){let t=A.slice(0,-4).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}return e}var kA=FI;var SI=["PNGImageIO","MetaImageIO","TIFFImageIO","NiftiImageIO","JPEGImageIO","NrrdImageIO","VTKImageIO","BMPImageIO","HDF5ImageIO","MINCImageIO","MRCImageIO","LSMImageIO","MGHImageIO","BioRadImageIO","GiplImageIO","GEAdwImageIO","GE4ImageIO","GE5ImageIO","GDCMImageIO","ScancoImageIO","FDFImageIO","WasmImageIO","WasmZstdImageIO"],LA=SI;var NI={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},u=NI;var RI={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},S=RI;var GI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},F=GI;var UI={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},T=UI;function kI(A,e){let t=null;switch(A){case F.UInt8:{t=new Uint8Array(e);break}case F.Int8:{t=new Int8Array(e);break}case F.UInt16:{t=new Uint16Array(e);break}case F.Int16:{t=new Int16Array(e);break}case F.UInt32:{t=new Uint32Array(e);break}case F.Int32:{t=new Int32Array(e);break}case F.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case F.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case T.Float32:{t=new Float32Array(e);break}case T.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var d=kI;var ot=typeof globalThis.SharedArrayBuffer=="function",it=new TextEncoder,gt=new TextDecoder("utf-8");function H(A,e){let t={flags:"r",encoding:"binary"},I=A.fs_open(e,t.flags),i=A.fs_stat(e).size,g=null;ot?g=new SharedArrayBuffer(i):g=new ArrayBuffer(i);let n=new Uint8Array(g);return A.fs_read(I,n,0,i,0),A.fs_close(I),n}function nt(A,e,t){let I=null;ot?I=new SharedArrayBuffer(t):I=new ArrayBuffer(t);let r=new Uint8Array(I),i=new Uint8Array(A.HEAPU8.buffer,e,t);return r.set(i),r}function y(A,e,t,I){let r=0;return e!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,I,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),r)),r}function V(A,e,t){let I=JSON.stringify(e),r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,I.length]);A.writeAsciiToMemory(I,r,!1)}function N(A,e,t,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),g=nt(A,r,i);return d(I,g.buffer)}function oe(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),I=A.AsciiToString(t);return JSON.parse(I)}function LI(A,e,t,I){I!=null&&I.length>0&&I.forEach(function(o,B){var c;switch(o.type){case u.TextStream:{let a=it.encode(o.data.data),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.JsonCompatible:{let a=it.encode(JSON.stringify(o.data)),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.BinaryStream:{let a=o.data.data,C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.TextFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.BinaryFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.Image:{let a=o.data,C=y(A,a.data,B,0),Q=y(A,a.direction,B,1),f=typeof((c=a.metadata)===null||c===void 0?void 0:c.entries)<"u"?JSON.stringify(Array.from(a.metadata.entries())):"[]",m={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:`data:application/vnd.itk.address,0:${Q}`,size:a.size,data:`data:application/vnd.itk.address,0:${C}`,metadata:f};V(A,m,B);break}case u.Mesh:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.cells,B,1),f=y(A,a.pointData,B,2),m=y(A,a.cellData,B,3),w={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,numberOfCells:a.numberOfCells,cells:`data:application/vnd.itk.address,0:${Q}`,cellBufferSize:a.cellBufferSize,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${f}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${m}`};V(A,w,B);break}case u.PolyData:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.vertices,B,1),f=y(A,a.lines,B,2),m=y(A,a.polygons,B,3),w=y(A,a.triangleStrips,B,4),O=y(A,a.pointData,B,5),K=y(A,a.pointData,B,6),JA={polyDataType:a.polyDataType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,verticesBufferSize:a.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${Q}`,linesBufferSize:a.linesBufferSize,lines:`data:application/vnd.itk.address,0:${f}`,polygonsBufferSize:a.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${m}`,triangleStripsBufferSize:a.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${w}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${O}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${K}`};V(A,JA,B);break}case S.Text:{A.fs_writeFile(o.path,o.data);break}case S.Binary:{A.fs_writeFile(o.path,o.data);break}case S.Image:{let a=o.data,C={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:a.size,data:"data:application/vnd.itk.path,data/data.raw"};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),a.data===null)throw Error("image.data is null");A.fs_writeFile(`${o.path}/data/data.raw`,new Uint8Array(a.data.buffer)),A.fs_writeFile(`${o.path}/data/direction.raw`,new Uint8Array(a.direction.buffer));break}case S.Mesh:{let a=o.data,C={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:a.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:a.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:a.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:a.cellBufferSize};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),C.numberOfPoints>0){if(a.points===null)throw Error("mesh.points is null");A.fs_writeFile(`${o.path}/data/points.raw`,new Uint8Array(a.points.buffer))}if(C.numberOfPointPixels>0){if(a.pointData===null)throw Error("mesh.pointData is null");A.fs_writeFile(`${o.path}/data/pointData.raw`,new Uint8Array(a.pointData.buffer))}if(C.numberOfCells>0){if(a.cells===null)throw Error("mesh.cells is null");A.fs_writeFile(`${o.path}/data/cells.raw`,new Uint8Array(a.cells.buffer))}if(C.numberOfCellPixels>0){if(a.cellData===null)throw Error("mesh.cellData is null");A.fs_writeFile(`${o.path}/data/cellData.raw`,new Uint8Array(a.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(o){throw typeof o=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(o)):console.error("Build module in Debug mode for exception message information.")),o}finally{A.stackRestore(r)}let g=A.getModuleStdout(),n=A.getModuleStderr(),E=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(o,B){let c=null;switch(o.type){case u.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c={data:gt.decode(f)};break}case u.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c=JSON.parse(gt.decode(f));break}case u.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);c={data:nt(A,C,Q)};break}case u.TextFile:{c={path:o.data.path,data:A.fs_readFile(o.data.path,{encoding:"utf8"})};break}case u.BinaryFile:{c={path:o.data.path,data:H(A,o.data.path)};break}case u.Image:{let C=oe(A,B);C.data=N(A,B,0,C.imageType.componentType),C.direction=N(A,B,1,T.Float64),C.metadata=new Map(C.metadata),c=C;break}case u.Mesh:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,C.meshType.pointComponentType):C.points=d(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=N(A,B,1,C.meshType.cellComponentType):C.cells=d(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=N(A,B,2,C.meshType.pointPixelComponentType):C.pointData=d(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,3,C.meshType.cellPixelComponentType):C.cellData=d(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case u.PolyData:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,T.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=N(A,B,1,F.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=N(A,B,2,F.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=N(A,B,3,F.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=N(A,B,4,F.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=N(A,B,5,C.polyDataType.pointPixelComponentType):C.pointData=d(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,6,C.polyDataType.cellPixelComponentType):C.cellData=d(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case S.Text:{if(typeof o.path>"u")throw new Error("output.path not defined");c=A.fs_readFile(o.path,{encoding:"utf8"});break}case S.Binary:{if(typeof o.path>"u")throw new Error("output.path not defined");c=H(A,o.path);break}case S.Image:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C),f=H(A,`${o.path}/data/data.raw`);Q.data=d(Q.imageType.componentType,f.buffer);let m=H(A,`${o.path}/data/direction.raw`);Q.direction=d(T.Float64,m.buffer),c=Q;break}case S.Mesh:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C);if(Q.numberOfPoints>0){let f=H(A,`${o.path}/data/points.raw`);Q.points=d(Q.meshType.pointComponentType,f.buffer)}else Q.points=d(Q.meshType.pointComponentType,new ArrayBuffer(0));if(Q.numberOfPointPixels>0){let f=H(A,`${o.path}/data/pointData.raw`);Q.pointData=d(Q.meshType.pointPixelComponentType,f.buffer)}else Q.pointData=d(Q.meshType.pointPixelComponentType,new ArrayBuffer(0));if(Q.numberOfCells>0){let f=H(A,`${o.path}/data/cells.raw`);Q.cells=d(Q.meshType.cellComponentType,f.buffer)}else Q.cells=d(Q.meshType.cellComponentType,new ArrayBuffer(0));if(Q.numberOfCellPixels>0){let f=H(A,`${o.path}/data/cellData.raw`);Q.cellData=d(Q.meshType.cellPixelComponentType,f.buffer)}else Q.cellData=d(Q.meshType.cellPixelComponentType,new ArrayBuffer(0));c=Q;break}default:throw Error("Unsupported output InterfaceType")}let a={type:o.type,data:c};E.push(a)}),{returnValue:i,stdout:g,stderr:n,outputs:E}}var z=LI;var oA=function(A){return this instanceof oA?(this.v=A,this):new oA(A)},OI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof oA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},JI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function MI(A){return OI(this,arguments,function*(){for(let t=0;t<LA.length;t++){let I=LA[t]+"-read-image",r=yield oA(G(I,A.config.imageIOUrl));yield yield oA(r)}})}async function bI(A,e){var t,I;if(A.mimeType&&ie.has(A.mimeType)){let n=ie.get(A.mimeType)+e;return await G(n,A.config.imageIOUrl)}let r=kA(A.fileName);if(ge.has(r)){let n=ge.get(r)+e;return await G(n,A.config.imageIOUrl)}for(let n=0;n<LA.length;++n){let E=0;try{for(var i=(t=void 0,JI(MI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var ne=bI;var HI=new Map([]),ae=HI;var YI=new Map([["vtk","VTKPolyDataMeshIO"],["VTK","VTKPolyDataMeshIO"],["byu","BYUMeshIO"],["BYU","BYUMeshIO"],["fsa","FreeSurferAsciiMeshIO"],["FSA","FreeSurferAsciiMeshIO"],["fsb","FreeSurferBinaryMeshIO"],["FSB","FreeSurferBinaryMeshIO"],["obj","OBJMeshIO"],["OBJ","OBJMeshIO"],["off","OFFMeshIO"],["OFF","OFFMeshIO"],["stl","STLMeshIO"],["STL","STLMeshIO"],["swc","SWCMeshIO"],["SWC","SWCMeshIO"],["iwm","WasmMeshIO"],["iwm.cbor","WasmMeshIO"],["iwm.cbor.zst","WasmZstdMeshIO"]]),se=YI;var qI=["BYUMeshIO","FreeSurferAsciiMeshIO","FreeSurferBinaryMeshIO","OBJMeshIO","OFFMeshIO","STLMeshIO","SWCMeshIO","VTKPolyDataMeshIO","WasmMeshIO","WasmZstdMeshIO"],OA=qI;var nA=function(A){return this instanceof nA?(this.v=A,this):new nA(A)},TI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof nA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},KI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function xI(A){return TI(this,arguments,function*(){for(let t=0;t<OA.length;t++){let I=OA[t]+"-read-mesh",r=yield nA(G(I,A.config.meshIOUrl));yield yield nA(r)}})}async function PI(A,e){var t,I;if(A.mimeType&&ae.has(A.mimeType)){let n=ae.get(A.mimeType)+e;return await G(n,A.config.meshIOUrl)}let r=kA(A.fileName);if(se.has(r)){let n=se.get(r)+e;return await G(n,A.config.meshIOUrl)}for(let n=0;n<OA.length;++n){let E=0;try{for(var i=(t=void 0,KI(xI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var Ce=PI;var WI=typeof globalThis.SharedArrayBuffer<"u";function jI(A){if(A==null)return[];let e=[];for(let t=0;t<A.length;t++){let I=ZI(A[t]);I!==null&&e.push(I)}return e}function ZI(A){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),WI&&e instanceof SharedArrayBuffer?null:e}var at=jI;function _I(A){return[A.data,A.direction]}var Be=_I;function VI(A){return[A.points,A.pointData,A.cells,A.cellData]}var Qe=VI;function zI(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var st=zI;async function XI(A,e,t,I){let r=z(A,e,t,I),i=[];return r.outputs&&r.outputs.forEach(function(g){if(g.type===u.BinaryStream||g.type===u.BinaryFile){let n=g.data;i.push(n)}else if(g.type===u.Image){let n=g.data;i.push(...Be(n))}else if(g.type===u.Mesh){let n=g.data;i.push(...Qe(n))}else if(g.type===u.PolyData){let n=g.data;i.push(...st(n))}else if(g.type===S.Binary){let n=g.data;i.push(n)}else if(g.type===S.Image){let n=g.data;i.push(...Be(n))}else if(g.type===S.Mesh){let n=g.data;i.push(...Qe(n))}}),HA(r,at(i))}var Y=XI;var vI={meshToPolyData:async function(A,e,t,I){let r=await G("mesh-to-polydata",A.meshIOUrl);return Y(r,e,t,I)},polyDataToMesh:async function(A,e,t,I){let r=await G("polydata-to-mesh",A.meshIOUrl);return Y(r,e,t,I)},readImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-image");return Y(g,I,r,i)},writeImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-image");return Y(g,I,r,i)},readMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-mesh");return Y(g,I,r,i)},writeMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-mesh");return Y(g,I,r,i)},runPipeline:async function(A,e,t,I,r,i){let g=typeof A[t]>"u"?t:A[t],n=await G(e,g);return Y(n,I,r,i)}};EA(vI);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';Et(dt);export{oe as compareDoubleImages,on as compareImages,Qt as getPipelineWorkerUrl,bA as getPipelinesBaseUrl,Et as setPipelineWorkerUrl,gs as setPipelinesBaseUrl};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
