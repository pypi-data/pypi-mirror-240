# coding: utf-8

"""
    Nomos API

    For more information on the Nomos API, please refer to the documentation at https://getnomos.com/docs/api.  # noqa: E501

    The version of the OpenAPI document: 0.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nomos.api_resources import schemas  # noqa: F401


class ProjectVersionGetResponse(schemas.DictSchema):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "project_version",
        }

        class properties:
            @staticmethod
            def project_version() -> typing.Type["ProjectVersion"]:
                return ProjectVersion

            __annotations__ = {
                "project_version": project_version,
            }

    project_version: "ProjectVersion"

    @typing.overload
    def __getitem__(
        self, name: typing_extensions.Literal["project_version"]
    ) -> "ProjectVersion":
        ...

    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema:
        ...

    def __getitem__(
        self, name: typing.Union[typing_extensions.Literal["project_version",], str]
    ):
        # dict_instance[name] accessor
        return super().__getitem__(name)

    @typing.overload
    def get_item_oapg(
        self, name: typing_extensions.Literal["project_version"]
    ) -> "ProjectVersion":
        ...

    @typing.overload
    def get_item_oapg(
        self, name: str
    ) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]:
        ...

    def get_item_oapg(
        self, name: typing.Union[typing_extensions.Literal["project_version",], str]
    ):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[
            dict,
            frozendict.frozendict,
        ],
        project_version: "ProjectVersion",
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[
            schemas.AnyTypeSchema,
            dict,
            frozendict.frozendict,
            str,
            date,
            datetime,
            uuid.UUID,
            int,
            float,
            decimal.Decimal,
            None,
            list,
            tuple,
            bytes,
        ],
    ) -> "ProjectVersionGetResponse":
        return super().__new__(
            cls,
            *_args,
            project_version=project_version,
            _configuration=_configuration,
            **kwargs,
        )


from nomos.api_resources.model.project_version import ProjectVersion
