Metadata-Version: 2.1
Name: cofutils
Version: 0.0.2
Summary: Experiment toolkits
Home-page: https://gitee.com/haiqwa/cofutils.git
Author: whq1516@mail.ustc.edu.cn
Maintainer: whq1516@mail.ustc.edu.cn
License: See https://gitee.com/haiqwa/cofutils/blob/main/LICENSE
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: torch
Requires-Dist: colorful

# Introduction for Cof utils
There're several useful tools for experiments, such as cofrun, coflogger, and logspy.

## Install

## Usage

### Cof Memory Report
Print GPU memory states by pytorch cuda API
* `MA`: memory current allocated
* `MM`: max memory allocated
* `MR`: memory reserved by pytorch

```python
from cofutils import cofmem

cofmem("before xxx")
# ...
cofmem("after xxx")
```

```bash
(deepspeed) haiqwa@gpu9:~/documents/cofutils$ python ~/test.py 
[2023-11-11 15:32:46.873]  [Cof INFO]: before xxx GPU Memory Report (GB): MA = 0.00 | MM = 0.00 | MR = 0.00
[2023-11-11 15:32:46.873]  [Cof INFO]: after xxx GPU Memory Report (GB): MA = 0.00 | MM = 0.00 | MR = 0.00
```
### Cof Logger
Cof logger can print user message according to print-level.
In *.py:
```
from Cof.utils import coflogger
coflogger.debug("this is debug")
coflogger.info("this is info")
coflogger.warn("this is warn")
coflogger.error("this is error")
```
Print-level is determined by environment variable `COF_DEBUG`:
```
COF_DEBUG=INFO python main.py
```
The default print-level is `WARN`

### Cof CSV
dump data into csv format
```python
from cofutils import dump_csv
data = [
        ['Name', 'Age', 'Gender'],
        ['Alice', 25, 'Female'],
        ['Bob', 30, 'Male'],
        ['Charlie', 35, 'Male']
    ]
dump_csv(data, file_path = 'result.csv')
```

### Cof Timer
Cof timer is similar to the `Timer` in `Megatron-LM`

It support two log modes:
* Organize the result into a string and output it into `STDOUT` which is easy to view for users 
* Directly return the result time table
```python
from cofutils import coftimer
from cofutils import coflogger
import time
test_1 = coftimer('test1')
test_2 = coftimer('test2')

for _ in range(3):
    test_1.start()
    time.sleep(1)
    test_1.stop()

coftimer.log(normalizer=3, timedict=False)


for _ in range(3):
    test_2.start()
    time.sleep(1)
    test_2.stop()

time_dict = coftimer.log(normalizer=3, timedict=True)
coflogger.info(time_dict)
```

```bash
(deepspeed) haiqwa@gpu9:~/documents/cofutils$ python ~/test.py 
[2023-11-11 16:15:43.942]  [Cof INFO]: time (ms) | test1: 1001.20 | test2: 0.00
NoneType: None
[2023-11-11 16:15:46.946]  [Cof INFO]: {'test1': 0.0, 'test2': 1001.2083053588867}
```
