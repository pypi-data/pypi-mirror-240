from __future__ import annotations

from typing import overload

from pokerengine.pokerengine_core.card.card import Rank
from pokerengine.pokerengine_core.enums.combination import CombinationE

class Result:
    @overload
    def __init__(
        self,
        type: CombinationE,
        major: int,
        minor: int,
        kickers: int,
    ) -> None: ...
    @overload
    def __init__(self, type: int, major: int, minor: int, kickers: int) -> None: ...
    def __eq__(self, other: Result) -> bool: ...
    def __gt__(self, other: Result) -> bool: ...
    def __lt__(self, other: Result) -> bool: ...
    def __ne__(self, other: Result) -> bool: ...
    @property
    def kickers(self) -> int: ...
    @property
    def major_rank(self) -> Rank: ...
    @property
    def minor_rank(self) -> Rank: ...
    @property
    def result(self) -> int: ...
    @property
    def type(self) -> int: ...
    def as_bitset(self) -> int: ...
    def as_string(self) -> str: ...
    def as_string_long(self) -> str: ...
